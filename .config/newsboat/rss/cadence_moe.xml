<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://cadence.moe/blog</id>
    <title>Cadence's Weblog</title>
    <updated>2023-07-23T09:12:24.160Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <author>
        <name>Cadence Ember</name>
        <uri>https://cadence.moe/blog</uri>
    </author>
    <link rel="alternate" href="https://cadence.moe/blog"/>
    <link rel="self" href="https://cadence.moe/blog/atom.xml"/>
    <subtitle>https://cadence.moe/blog</subtitle>
    <entry>
        <title type="html"><![CDATA[How to log in to phpBB for scraping]]></title>
        <id>https://cadence.moe/blog/2023-02-26-how-to-log-in-to-phpbb-for-scraping</id>
        <link href="https://cadence.moe/blog/2023-02-26-how-to-log-in-to-phpbb-for-scraping"/>
        <updated>2023-02-26T10:57:58.136Z</updated>
        <summary type="html"><![CDATA[<p><strong class="fun-highlight">This post is all about logging in to phpBB through manually constructed requests.</strong> Once you're logged in, scraping the forum is up to you. You can use the usual techniques for it, just be sure not to crawl the buttons for logout, report, watch, bookmark, user control panel, moderator control panel, admin control panel, and so on and so forth, all of which are activated with GET requests.</p><p>Your logged in session is stored in the cookies. I suggest using the cookie-jar pattern rather than manually constructing the cookies for each request.</p><p>The user agent also matters. You cannot change the user agent header at any point or you will be accessing the logged out version of the page.</p><p><strong class="fun-highlight">These curl commands are demonstrations only.</strong> They will not work on their own. The purpose of them is to show which URLs, cookies, headers, and body data are <em>necessary.</em> You will want to use your own programming language instead of curl, and you will need to fill in the placeholder data.</p><p>Here's the tutorial:</p><h2>1. GET the login page</h2><pre class="outline-pre">(something along these lines)
curl -v 'https://example.com/forum/ucp.php?mode=login'
</pre><p>You need to do this to get cookies. Save the returned cookies in the jar.</p><h2>2. POST the login endpoint</h2><pre class="outline-pre">(something along these lines)
curl -v 'https://example.com/forum/ucp.php?mode=login' -X POST --data-raw 'username=USERNAME&password=PASSWORD&redirect=.%2Fucp.php%3Fmode%3Dlogin&redirect=index.php&login=Login' -H 'Cookie: THREE_COOKIES' -H 'Content-Type: application/x-www-form-urlencoded'
</pre><p>Save the returned cookies in the jar.</p><p>(Note: If your language's cookie jar library is properly programmed, the previously stored cookies with the same name will be overwritten with these new ones. If the cookie jar <a href="https://docs.racket-lang.org/cookies/index.html#%28meth._%28%28%28lib._net%2Fcookies%2Fuser-agent..rkt%29._cookie-jar~3c~25~3e%29._cookies-matching%29%29">remembers all versions</a> of each cookie, just make sure the constructed cookie header has the NEW values at the START. For example, <code>Cookie: foobar_cookies_u=34567; foobar_cookies_u=1; foobar_etc_and_so_on=</code> will work. Hopefully you shouldn't have to worry about this at all!!)</p><h2>3. GET the main page</h2><pre class="outline-pre">curl -v 'https://example.com/forum/' -H 'Cookie: THREE_COOKIES' > am_i_logged_in.html</pre><p>Open up the page in your web browser and see whether it looks logged in.</p><h2>Troubleshooting</h2><p>You can tell if it didn't work if you aren't logged in on that page. You can't get error messages out of phpBB, so you'll have to keep looking at your process and trying things until it finally works.</p><p>Print out the raw HTTP request you sent in step 3. Does the user agent look right? Do the cookies look right? There should be 3 cookies sent here: <code>foobar_cookies_sid=hexadecimal; foobar_cookies_k=; foobar_cookies_u=34567</code>. If the cookies are wrong here, print out the HTTP request and response you sent in step 2 and examine those.</p><p>Another idea for debugging is to try sending this request with curl to the forum's main page, and tweaking it until the message stops saying "Login" (this means you haven't succeeded and aren't logged in) and changes to "Logout" (this means you succeeded and are logged in):</p><pre class="outline-pre">curl https://example.com/forum/ -H 'User-Agent: USER_AGENT' -H 'Cookie: THREE_COOKIES' | grep Log -m 1</pre><h2>Pitfalls</h2><ul><li>The user agent must match the one that was used for the login process. If the user agent header changes you will receive the logged out version of the page.</li><li>Remember to keep adding the cookies to all subsequent requests.</li><li>If instead of logging in through program code, you decide to export an existing logged in session from your browser via a cookies.txt exporter, the file may have <code>#HttpOnly_.</code> flags at the start of some lines. You must remove those flags from the file before feeding it into your scraping program. Remember to set your scraping program's user agent to <a href="https://artemislena.eu/services/whoareyou.html">the same user agent as the logged in browser.</a></li></ul><p>Please send any feedback, refinements and corrections to <a href="https://cadence.moe/contact">my email</a> with a specific subject line so that I can improve this page!</p>]]></summary>
        <published>2023-02-26T10:57:58.136Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Implementing different wallpapers on KDE virtual desktops]]></title>
        <id>https://cadence.moe/blog/2022-12-03-implementing-different-wallpapers-on-kde-virtual-desktops</id>
        <link href="https://cadence.moe/blog/2022-12-03-implementing-different-wallpapers-on-kde-virtual-desktops"/>
        <updated>2022-12-03T12:19:17.093Z</updated>
        <summary type="html"><![CDATA[<section style="padding: 1em; background-color: #140a19; border: 2px dashed #752270; border-radius: 3px"><h2 class="fun-highlight">Update:</h2><p>I've been told that a tool called "Vallpaper" can also help with this. However, I haven't tested it at all, so it might not work! Don't come asking me for help, but do feel free to let me know if Vallpaper works for you, and I'll update this section of my blog post.</p><ul><li><a href="https://store.kde.org/p/1197828">https://store.kde.org/p/1197828</a></li><li><a href="https://github.com/lehklu/Vallpaper">https://github.com/lehklu/Vallpaper</a></li></ul><p>My original post continues below. You should read it! :)</p></section><h2>Context and history</h2><p>Over the last couple of days I've been setting up my new KDE install -- KDE is <span class="fun-highlight">REALLY</span> good, thank you so much to the people who work on the default applications and system integration -- and I wanted to take advantage of the great virtual desktops feature. It seems that in the past there used to be a way to display a different wallpaper on each virtual desktop, however, this feature was removed around the time that KDE 5 came out.</p><p>Nowadays, the only default way to have different wallpapers is to use the "activities" feature, which is very similar to virtual desktops but with some features added (like independent wallpapers and layouts and panels) and some features removed (like being able to zoom out to get an overview of which windows exist across all spaces).</p><p>Some KDE developers have been thinking about removing activities and combining their features with virtual desktops, so maybe that'll happen in the future to make this easier! For now, we have to create something to add that functionality.</p><h2>KWin Scripts</h2><p>If independent wallpapers don't really exist, the next alternative is quite straightforward: detect when the active desktop changes, and then change the global wallpaper to match it.</p><p>I'd heard of a few different KWin window tiling scripts, so I assumed that KWin would have the necessary functionality. I quickly discovered a built-in KWin script, located in <code>/usr/share/kwin/scripts/desktopchangeosd</code>, that has code to detect when the current desktop changes. I also found <a href="https://github.com/xtalax/WorkspaceBG/blob/master/bin/setbg">a shell command that appears to execute a Plasma script to change the wallpaper</a>, which would complete the missing part of the puzzle. All I need to do is figure out how to put them into one file!</p><p>I'll save you the two hours of me failing to do this. It turns out that "KWin Scripts" and "Plasma Scripts" are entirely different things with different features? In particular, Plasma Scripts can change the wallpaper but not detect virtual desktops, and KWin Scripts can detect virtual desktops but not change the wallpaper.</p><h2>How to actually do this</h2><p>WARNING: This is cursed! Read on if you dare.</p><p>So KWin scripts can't actually communicate with the outside system at all, no wallpaper, no shell commands, no file access, all they can do is manipulate windows because KWin is only a window manager. Foiled? Not quite. KWin can actually affect the outside world in one way: error logging.</p><p><code>console.error(...)</code> in a KWin script will send data, and <code>journalctl _COMM=kwin_wayland -n 0 -f</code> in a shell will read data. Perfect, we're now communicating in real-time (?) between KWin and the system. The shell script just needs to call <code>plasma-apply-wallpaperimage</code> to set the wallpaper.</p><h2>Ok, let's do it already</h2><ul><li><a href="/static/documents/wallpaperperdesktop.tar.gz">Download the KWin script</a></li><li><a href="/static/documents/wallpaperperdesktop.fish">Download the shell script (fish shell)</a></li></ul><p>Install the KWin script with:</p><pre class="outline-pre">kpackagetool5 --type=KWin/Script -i /path/to/wallpaperperdesktopfolder
kwriteconfig5 --file kwinrc --group Plugins --key wallpaperperdesktopEnabled true
qdbus org.kde.KWin /KWin reconfigure # ???
kwin --replace # THIS WILL CLOSE ALL RUNNING PROGRAMS
</pre><p>To complete the puzzle, download and edit the shell script to point to your favourite wallpapers, then run it in fish shell. Changing virtual desktops will change the wallpaper with a cross-fade animation.</p><p>If it doesn't work, check the shell script's logs and <code>journalctl _COMM=kwin_wayland -n 0 -f</code> I guess. But I'm probably not going to be able to help you debug anything since I know just as little as you do.</p><h2>Discussion</h2><p>What can KDE people do to improve this?</p><p>An important thing is improving the documentation. I was flying completely blind creating these scripts. I had to trial-and-error the folder structure, each individual line of code, and run three commands and log out and log back in again after making each change to coerce it into applying the changes.</p><p>While the documentation technically exists, and there's <em>almost</em> a page with a tutorial, the tutorial could do a lot more to explain step-by-step how to set up the folder structure for your KWin script, how to install the script, how to reload it after making changes, how to produce debug logs, how to monitor debug logs. All of the tooling things that surround the actual code are extremely under-documented and I had to rely on code searching other people's GitHub repositories and reddit questions with 2 comments apiece to discover these basic steps.</p><p>After better documentation exists and has been user tested, add a link from the "KWin Scripts" settings pane to the main page of that documentation section, with a caption something like "How to create KWin scripts."</p><p>The best idea to solve the problem would be to merge workspaces and activities into parity with each other. This would also clean up a lot of end-user confusion about what the two features are. I've been using Linux for years and I've been using KDE Activities for 10 months up until today and I honestly don't know what a use case of activities is.</p><p>A workaround for this specific problem could be to allow KWin scripts to execute Plasma scripts. This would fill in the gap of KWin scripts being good at detecting signals and Plasma scripts being good at doing actions.</p><p>Finally, the method I described in this blog post actually answers the classic FP thought problem of whether output logging is a side-effect. It is. Lol.</p><p>Cadence</p>]]></summary>
        <published>2022-12-03T12:19:17.093Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[What are my pronouns?]]></title>
        <id>https://cadence.moe/blog/2022-11-20-what-are-my-pronouns</id>
        <link href="https://cadence.moe/blog/2022-11-20-what-are-my-pronouns"/>
        <updated>2022-11-19T11:14:34.986Z</updated>
        <summary type="html"><![CDATA[<div class="disclosure-series"><details><summary>Confused answer</summary><div class="disclosure-content"><p>I dunno, what are they? Your guess is as good as mine...</p></div></details><details><summary>Philosophy answer</summary><div class="disclosure-content"><p>Third-person pronouns, such as he, him, she, her, it, they, are used by a person that isn't me in order to refer to me without having to say my full name each time.</p><p>I don't say my own pronouns, because I am <span class="fun-highlight">me</span>.</p><p>Therefore my pronouns are whatever other people say I am.</p></div><details style="border-top: 2px dotted #ffd500; border-bottom: none"><summary>no cadecnde i'm asking what are your PREFERRED pronounes</summary><div class="disclosure-content"><p>SSSHHHHHShhshhhssssssssssshhh!!!!!!</p></div></details></details><details><summary>Actual answer</summary><div class="disclosure-content"><p>I'm not picky. Since I'm a ẃ̷̗o̵̜̎m̸͎͆a̵̜͌n̴̥͒, choosing ẃ̷̗o̵̜̎m̸͎͆a̵̜͌n̴̥͒ly pronouns would make sense... but ultimately my pronouns really are what other people say they are.</p></div><details style="border-top: 2px dotted #ffd500; border-bottom: none"><summary>Actual real answer final(1) (copy) (tūī).rtf (⚠⚠ WARNING: PRONOUN SPOILERS ⚠⚠)</summary><div class="disclosure-content"><p>they them or she her. ARE YOU HAPPY NOW? ARE YOU HAPPY? ARE YOU HAPPY?</p></div></details></details></div>]]></summary>
        <published>2022-11-19T11:14:34.986Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Latest changes to my website]]></title>
        <id>https://cadence.moe/blog/2022-11-18-latest-changes-to-my-website</id>
        <link href="https://cadence.moe/blog/2022-11-18-latest-changes-to-my-website"/>
        <updated>2022-11-18T11:14:32.677Z</updated>
        <summary type="html"><![CDATA[<h2>Background image</h2><p>The background of the website is now a pretty pattern. I think that using a pattern background recontextualises a lot of things of the site. "What does that mean, Cadence?" I don't know.</p><p>The background image is a heavily edited Windows XP built-in tiled wallpaper. GNU Image Manipulator's "cubism" filter did most of the work. After that it was a matter of adjusting the hue and contrast so that it would be noticable while not interfering with reading the actual text.</p><p>If you want to add a tiled image background to your entire site, I'd recommend using black text on a light image background to make it easier to read. <a href="https://sadhost.neocities.org/images/tiles/bg_yellowzinnia.jpg">Example of a light background image.</a> This is because when the whole screen is darkish like my website, variations in that dark colour are more noticable, whereas when the whole screen is light, variations in that light colour are less noticable. For the background, you probably want it to be less noticable because the text should take priority.</p><p>Related, I might add a light theme variant to my whole site for accessiblity. We'll see.</p><h2>Weblog word</h2><p>The blog section has been renamed "weblog" (the URLs are staying the same, at least for now.) The <a href="https://web.archive.org/web/20150530144950/http://www.rebeccablood.net/essays/weblog_history.html">story behind the word weblog</a> is that diaries, or logs of one's activities, when on the web, were called weblogs (web-logs). This was shortened to "blog" somewhere around the mid-2000s.</p><p>In recent years, the number of companies running self-described blogs is out of control. Here are the types of things that are called blogs on the web as it stands today:</p><ul><li>Companies publishing news updates about their company.</li><li>Companies publishing information about their products and why their products are so good.</li><li>Companies publishing stories about a problem that you have faced, attempting a farce of a technical comparison, <a href="https://www.ssh.com/academy/ssh/tunneling-example" rel="nofollow">and then recommending the company's own product at the end anyway.</a></li><li>Companies publishing stores about a problem that you have faced, attempting a farce of a technical comparison, and then recommending the company's own product at the end anyway, <a href="https://www.netspotapp.com/wifi-scanner/linux-wifi-scanner.html" rel="nofollow">even when the company's product is literally not a solution for the title of the article.</a> (The company's "Best Linux WiFi Scanner" and the final recommendation of the so-called blog post does not actually run on Linux.)</li><li>Companies publishing AI-generated nothingness to increase their SEO, like <a href="https://deertales.blog/conversation-with-multiple-characters/" rel="nofollow">this one which goes off the rails</a> or <a href="https://deertales.blog/how-can-i-make-the-fight-between-3-big-cat-moms-believable/" rel="nofollow">this one which was never on any rails to begin with.</a> Or <a href="https://deertales.blog/about/" rel="nofollow">the website's own about page????????</a></li><li>Individual people writing about things that interest them in an approachable and unique manner that gives you a genuine glimpse into their lives and experiences. <em class="fun-highlight">--You are only interested in this meaning for the word blog!</em></li></ul><p>Commercial interests are persistently gaming internet search engines and making them useless for finding personal websites, actual websites with stories and hearts to them.</p><p>Me using the word "weblog" rather than the now-meaningless "blog" is an attempt to fight back against this. <sup>Hopefully I don't get dropped off the SEO rankings as a result of changing this important word across my entire site <sup>oh god why am I thinking about SEO I have never put a single second of thought into the SEO for this website before now</sup></sup></p><p>XXX: Reword and rewrite this post when not exhausted</p><p>— Cadence</p>]]></summary>
        <published>2022-11-18T11:14:32.677Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introducing BreezeWiki]]></title>
        <id>https://cadence.moe/blog/2022-11-06-introducing-breezewiki</id>
        <link href="https://cadence.moe/blog/2022-11-06-introducing-breezewiki"/>
        <updated>2022-11-06T10:10:03.176Z</updated>
        <summary type="html"><![CDATA[<p>Check it out! Bookmark the page! Install the browser extension! Everything you need to know should be written on <a href="https://breezewiki.com">https://breezewiki.com.</a></p><p>The rest of this post will be technical analysis.</p><h2>Why Fandom</h2><p>Fandom, formerly Wikia, is one of the most annoying websites on the internet. It is always accelerating and gaining traction and scooping up other wikis and wiki farms. The site now contains so much important knowledge contributed by so many people, but the user experience is really really horrible. To put it in the words of an anonymous user:</p><blockquote>Fandom pages crashing and closing, taking forever to load and locking up as they load the ads on the site... they are causing the site to crash because they are trying to load video ads both at the top and bottom of the site as well as two or three banner ads, then a massive top of site ad and eventually my anti-virus shuts the whole site down because it's literally pulling more resources than WoW in ultra settings...</blockquote><p>The site has too many ads. But even with ad-block, the layout still sucks a lot and the page is slow to load.</p><h2>Software freedom does not ensure a good end-user experience</h2><p>Fandom itself is actually built on top of open source software, MediaWiki. MediaWiki is the software that runs Wikipedia, and most other interesting wikis on the internet. MediaWiki can be heavily skinned and modified, so you might not recognise that you're using it. Fandom has taken open source software and used it to build the most annoying ad-infested website of all time.</p><p>MediaWiki is open source/free software with the GNU GPL 2 license. Free software helps, well, software freedom, but it doesn't ensure that end-users will have a friendly experience, and Fandom is the evidence. An example of a potential solution is <a href="https://anticapitalist.software/">the Anti-Capitalist Software License</a>, because software tends to be user-friendly when it's made with people in mind rather than profits, but there's a lot of questions that have yet to be satisfactorily answered.</p><h2>Anti-Wikia Alliance</h2><p>Hilariously, wiki text authors have <a href="http://awa.shoutwiki.com/wiki/Anti-Wikia_Alliance">hated Wikia for a long time</a> — as far back as 2010. In 2010, Wikia rolled out a new "user-friendly" skin for the site that many protested against, but I'll let the Anti-Wiki Alliance speak for itself. Why not take a look at its site?</p><p>If you are a wiki text author, the Anti-Wikia Alliance also provides guides and assistance on moving your own wiki off Fandom to somewhere more ethical, and lists suggested destinations you could move to, free and paid.</p><p>"Why would I pay for wiki hosting?" Because someone has to pay to keep it online, and if you aren't paying, then either ads or investors are. That's the unfortunate reality.</p><h2>How BreezeWiki gets data</h2><p>MediaWiki has extensive APIs. BreezeWiki queries those APIs for HTML page content, search results, category listings, and whatever else it needs.</p><h2>How BreezeWiki presents data</h2><p>Wiki pages are written in wikitext markup, which gets transformed to HTML for display. This can be any HTML at all, so BreezeWiki needs to be flexible and minimal in how it handles the page content so that it can deal with a variety of sites with different appearances and layouts.</p><p>BreezeWiki is written in the Racket programming language, a dialect of Lisp. In Lisp, s-expressions are the core building block of all data structures, and they can be used to hold XML (HTML) representations easily. This means all the core list manipulation tools can be used for editing the structure and content of the HTML, making it a really natural fit for the site.</p><p>BreezeWiki uses the html-parsing module to convert the HTML to a nested tree of s-expressions, then it walks that tree with a recursive function to edit the tree. At each step, the function takes in the current element, and returns a replacement element. This functional style lets the tree be transformed in a consistent and immutable way. Once it's all done, the s-expression content is added to BreezeWiki's page template, and that's all converted back to HTML with the html-writing module and sent to the client.</p><p>This tree walking code is how it converts inter-page links, for example. As it walks the tree, whenever it finds an "a" element with a src attribute that points to the same wiki, it rewrites that attribute and returns the new element.</p><p>You can open <a href="https://gitdab.com/cadence/breezewiki/src/branch/main/src/page-wiki.rkt">src/page-wiki.rkt</a> in the source code to see precisely how it does it.</p><h2>The future</h2><p>You might recall that I recently stopped running Bibliogram, and be wondering, how long will BreezeWiki exist for?</p><p>The answer is, I don't know, so enjoy it while it lasts! What I do know is that it'll be fun as hell. Tell your friends, tell your co-workers, and tell any wiki authors you know to transition to <a href="https://miraheze.org/">another hosting platform.</a></p><p>See you next time!</p><p>Cadence</p>]]></summary>
        <published>2022-11-06T10:10:03.176Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Explaining Lisp's quoting without getting tangled]]></title>
        <id>https://cadence.moe/blog/2022-10-17-explaining-lisp-quoting-without-getting-tangled</id>
        <link href="https://cadence.moe/blog/2022-10-17-explaining-lisp-quoting-without-getting-tangled"/>
        <updated>2022-10-17T10:20:30.241Z</updated>
        <summary type="html"><![CDATA[<style>.fun-highlight { font-style: normal; }
</style><p>Quoting in Lisp is a very important concept in programs that deal with data structures. Here's the concept explained without excessive detail.</p><p>This page specifically uses the Racket dialect of Lisp, but these examples are general enough that they should apply to any kind of Lisp.</p><h2>Definitions</h2><p>You don't need to memorise these right now, you can always come back and check them later for clarification.</p><ul><li><code>value</code> - something like a number, a string, or a symbol. values are data.</li><li><code>list</code> - a one-dimensional list of values (can also include nested lists). lists are data.</li><li><code>variable</code> - a variable stands for a value, but the variable itself is not a value. variables are not data (but their values are).</li><li><code>symbol</code> - a symbol looks like a variable name but it has ' before it. symbols are data.</li><li><code>sexp</code> - stands for s-expression. a sexp is anything between parentheses. to be more specific, it starts with an open parenthesis and continues until the matching closing parenthesis. there may be nested sexps inside it. sexps might be data or might not be - you'll see.</li><li><code>word</code> - this <em>isn't</em> Lisp terminology, this a term that I made up to represent a sequence of letters that appears within a program.</li></ul><p>It's okay if these don't make sense right now, because the rest of this page will serve as examples for all of these.</p><h2>Sexps can be code</h2><pre class="outline-pre">(define x 42)</pre><p>This can be executed as code. The first word inside the opening parenthesis is the function to call, and the other words are its arguments.</p><p>Here, x is a variable, 42 is a value, and (define x 42) is a sexp. (define x 42) is not a value because it will be executed as code.</p><h2>Constructing lists</h2><p>The function list creates a list out of its arguments:</p><pre class="outline-pre">(displayln (list 39 40 41))</pre><p>Try writing this as a program and executing it. The output area will show the result (39 40 41). The result displayed in the output area is a list (and also a value, and also a sexp).</p><h2>Quoting lists</h2><p>Rather than constructing lists, they can be directly represented in the program by writing the list with a quote mark ' before it:</p><pre class="outline-pre">(displayln '(39 40 41))</pre><p>Try writing this as a program and executing it. The output area will show the list (39 40 41) which is the same as before.</p><p>Since the quote mark ' affects the entire sexp that follows, you can quote nested lists too, using just a single quote mark:</p><pre class="outline-pre">(displayln '(39 40 (41 42) 43))</pre><p>If you didn't write the quote, the interpreter would treat this sexp as a program to execute. It would try to call <code>41</code> as a function, and then try to call <code>39</code> as a function. Numbers aren't functions, so you'll get an error if you try.</p><pre class="outline-pre">(displayln (append '(1) (list 2)))</pre><p>The quote only applies until the end of the sexp. It applies to <code>'(1)</code> but does not apply to <code>(list 2)</code>.</p><h2>Context: displayln</h2><p>Up until now, we've been using <code>displayln</code> to display the values in the output area.</p><p>From now on, we're just going to write the values directly. One difference in doing this is that when not using <code>displayln</code> the output area will also include a quote for any printed list.</p><pre class="outline-pre">(list 39 40 41) ; example one
'(39 40 41) ; example two
</pre><p>When each of these is evaluated, the output area shows <code>'(39 40 41)</code>, with a quote mark. This fact isn't particularly significant, I just want to make sure we're on the same page.</p><h2>Quoting other things</h2><p>Quoting a word results in the concept of a "symbol" that was alluded to earlier.</p><p>Executing this program gives the symbol <code>'x</code> in the output area:</p><pre class="outline-pre">'x</pre><p>Conceptually, symbols are just arbitrary values. One use for them is like enums from other programming languages.</p><p>Now that you know what a symbol is, I can show you that entire sexps can be quoted too:</p><pre class="outline-pre">'(39 40 41 x 43)</pre><p>Since the quote mark ' affects the entire sexp, the <code>x</code> here is quoted too, and becomes a symbol. The result displayed in the output area is <code>'(39 40 41 x 43)</code>. <code>x</code> is not evaluated as a variable, because it isn't a variable. Because it is quoted, it is a symbol, and symbols are just values.</p><p>Observe:</p><pre class="outline-pre">(require racket/list)
(second '(39 40 41 x 43)) ; -> 40
(fourth '(39 40 41 x 43)) ; -> 'x
</pre><h2>So you can use this for data structures</h2><pre class="outline-pre">&lt;p&gt;Welcome to my &lt;b&gt;cool website!&lt;/b&gt;&lt;/p&gt;</pre><p>X-expressions are a Lisp-y representation of XML. They represent XML as list structures, which can then be manipulated with the usual sexp-related functions like <code>list</code> and <code>car</code>. It's easiest to explain with an example:</p><pre class="outline-pre">'(p "Welcome to my " (b "cool website!"))</pre><p>The quote mark ' at the start is required because <code>'p</code> and <code>'b</code> shouldn't be called as functions. This sexp is a store of data, not a program to be executed. <code>'p</code> and <code>'b</code> are actually symbols, and in this case they represent the XML tag name.</p><h2>A practical example of manipulating lists</h2><p>The <code>&lt;b&gt;</code> tag is deprecated in HTML 5, so let's replace it with the semantic <code>&lt;strong&gt;</code> instead.</p><p>In other programming languages, you might expect to use an object-oriented XML parser to do the work, but quoting and the x-expression notation lets us take a different approach in Lisp.</p><pre class="outline-pre">(define old '(p "Welcome to my " (b "cool website!")))
(define (replace-strong sexp)
  (cond [(symbol? sexp) (if (eq? sexp 'b) 'strong sexp)] ; recursion target: replace 'b with 'strong
        [(pair? sexp) (cons (replace-strong (car sexp)) (replace-strong (cdr sexp)))] ; recursion: reached a cons cell, replace its contents
        [#t sexp] ; don't touch other types like strings
        ))
(replace-strong old) ; -> '(p "Welcome to my " (strong "cool website!"))
</pre><p><em class="fun-highlight">DON'T PANIC if this example is beyond you.</em> If you understand it, awesome! If you don't understand it, you're not missing out.</p><h2>Quasiquote and unquote</h2><p>Touching on the example from earlier:</p><pre class="outline-pre">'(39 40 41 x 43)</pre><p>What if you wanted <code>'x</code> to actually be used as a variable, not a symbol? What if you did want to create the list <code>'(39 40 41 42 43)</code>? Without quoting, this can be done as follows:</p><pre class="outline-pre">(list 39 40 41 x 43)</pre><p>But this can get messy if the data structure is complex, with several nested lists.</p><p>The quasiquote feature allows this in a compact notation. The quasiquote character, also known as backquote or backtick ` acts just like the normal quote ' most of the time:</p><pre class="outline-pre">`(39 40 41 x 43)</pre><p>But using a quasiquote enables two additional features. Using a comma, you can unquote a specific value anywhere in the tree, such as inside nested lists:</p><pre class="outline-pre">`(39 40 41 ,x 43) ; -> '(39 40 41 42 43)
`(39 40 (41 (,x)) 43) ; -> '(39 40 (41 (42)) 43)
</pre><p>Quasiquote is often much easier and less messy than the alternative:</p><pre class="outline-pre">(list 39 40 (list 41 (list x)) 43) ; -> '(39 40 (41 (42)) 43)</pre><h2>The second additional feature</h2><p>You can splice lists into other lists using <code>,@</code> inside a quasiquoted list. Wow, that was a lot of jargon. Check out the example:</p><pre class="outline-pre">(define y '(5 6 7 8))
`(4 ,y 9) ; -> (4 (5 6 7 8) 9)
`(4 ,@y 9) ; -> (4 5 6 7 8 9)
</pre><p>Using unquote , puts the value directly into the other list. Using unquote-splicing ,@ puts each list element into the other list, flattening them together.</p><h2>Need more?</h2><p>If you want to read a longer and more thorough explanation, an excellent option is available in the <a href="https://htdp.org/2022-8-7/Book/i2-3.html">How to Design Programs</a> book.</p><p>If you want to learn about how code and data are the same structures and how this naturally connects into macros, see <a href="https://courses.cs.washington.edu/courses/cse341/04wi/lectures/14-scheme-quote.html">CSE341 Lecture Notes 14</a> and then <a href="https://cl-cookbook.sourceforge.net/macros.html">Macros in the Common Lisp Cookbook</a>.</p><p>If you want to learn more Lisp basics, check <a href="https://cs.gmu.edu/~sean/lisp/LispTutorial.html">Lisp Quickstart - Learning Lisp Fast</a> for the short version and <a href="https://docs.racket-lang.org/guide/">The Racket Guide</a> for the long version.</p><p>If you want to learn how to design programs, read the <a href="https://htdp.org/">How to Design Programs</a> book for beginners.</p><h2>Did you try the examples?</h2><p>Hopefully this guide was an appropriate length to get you get to grips with quoting. Knowing you, you just read through this whole thing without trying the code examples in <a href="https://docs.racket-lang.org/drracket/index.html">your editor</a>, and that's okay! I designed this guide so that it should make sense just reading it, but I really really do recommend pasting the examples into your editor if you want to explore them and deepen your understanding.</p><p>Okay, that's the end. See ya!</p><p>— Cadence</p>]]></summary>
        <published>2022-10-17T10:20:30.241Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[I don't have emotions about significant changes in my life]]></title>
        <id>https://cadence.moe/blog/2022-10-16-emotions-about-significant-changes-in-my-life</id>
        <link href="https://cadence.moe/blog/2022-10-16-emotions-about-significant-changes-in-my-life"/>
        <updated>2022-10-16T06:09:22.181Z</updated>
        <summary type="html"><![CDATA[<div class="gemtext-link"><a href="gemini://cadence.moe/gemlog/2022-10-16-emotions-about-significant-changes-in-my-life.bliz">You can read this post on Gemini, if you want. The words are the same.</a></div><p class="gemtext-paragraph">I have noticed this for several years but not known whether or how to put it into words. After thinking about it more than usual in the past weeks, this is my attempt to describe my feelings.</p><p class="gemtext-paragraph">When significant changes occur in my life it feels like they are occurring around me without my agency. They don't have an impact on my feelings or emotions, they are just things that happen.</p><p class="gemtext-paragraph">Examples of this occurring in the past:</p><ul><li>When my family permanently moved from one country to another.</li><li>When my family moved house.</li><li>When my parents got the first family pet.</li><li>When I moved from the family home to a university hall.</li><li>When I moved from a university hall to flatting.</li><li>When I finished my university degree.</li><li>When I started a full time job.</li></ul><p class="gemtext-paragraph">As for romance and dating in my life, sometimes I do have feelings and emotions about these, and often when I feel them they are very strong. But that's only sometimes; an equal or greater amount of the time I don't feel anything about them.</p><h2>Am I supposed to feel things?</h2><p class="gemtext-paragraph">Many people around me ask me &quot;how did it feel to ...&quot; for each of these life events, and &quot;I didn't feel anything&quot; is not the answer they're expecting. So I think most people around me would feel things in these situations. So I expect it's normal and natural to feel things.</p><p class="gemtext-paragraph">Which begs the question, why don't I?</p><h2>What are the possible causes of this?</h2><p class="gemtext-paragraph">I've figured out a few things that are potentially related.</p><ul><li>Maybe it's because I'm autistic.</li><li>Maybe it's because I'm autistic, and I'm masking.</li><li>Maybe it's because all of the life events I mentioned above are &quot;priced in&quot;, that is, my brain is already aware of them and that they are an inevitability, so it has already processed the meaning of them, and when these events actually happen there is nothing new to know about.</li><li>Maybe I don't internalise the events as real, as if I'm not &quot;present&quot; for them. (depersonalisation/derealisation)</li><li>Maybe it's because I haven't been deliberately letting myself spend time with my feelings — something this blog post is intended to combat.</li></ul><p class="gemtext-paragraph">Maybe it's a combination of all of these.</p><h2>Do I need to do anything about this?</h2><p class="gemtext-paragraph">A better question would be, do I want to feel things?</p><p class="gemtext-paragraph">I believe so! It would be important and valuable to connect with my feelings more. I imagine it would also have wider positive impacts on my life and my brain.</p><h2>Is there anything I can do to feel more feelings?</h2><p class="gemtext-paragraph">I don't know for sure.</p><p class="gemtext-paragraph">I'm going to try spending more time thinking about my feelings rather consuming the internet and turning off my brain. I'm going to take my own advice on the matter.</p><div class="gemtext-link"><a href="https://tube.cadence.moe/cant-think">After all, I've known this for a long time.</a></div><p class="gemtext-paragraph">And if this doesn't help, well, I'll still be in a healthier place than I am currently.</p><p class="gemtext-paragraph">I can also research each of the potential causes I mentioned above to see if other people affected by those things have had similar experiences to mine.</p><p>I guess there's nothing more to say. Feel free to <a href="/contact">get in touch</a> if you know anything about these feelings, or if you have a response to my words.</p><p>— Cadence</p>]]></summary>
        <published>2022-10-16T06:09:22.181Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Discontinuing Bibliogram]]></title>
        <id>https://cadence.moe/blog/2022-09-01-discontinuing-bibliogram</id>
        <link href="https://cadence.moe/blog/2022-09-01-discontinuing-bibliogram"/>
        <updated>2022-09-01T12:13:07.125Z</updated>
        <summary type="html"><![CDATA[<p>Before we start: If Bibliogram has been helpful to you, please consider <a href="/donate">making a donation!</a> Donations help me pay for servers on my current and future projects, not to mention the time I put into writing code.</p><p><a href="https://craigbarnes.bandcamp.com/track/final-floor-the-mayors-lament">BGM: The Mayor's Lament</a></p><div class="announcement"><h2>the short version</h2><p>Instagram is really annoying, and I've given enough, and I don't want to deal with it anymore. Bibliogram will remain mostly broken unless somebody steps up to fix it. The main instance, bibliogram.art, will shut down, unless somebody wants to take it over. If you want to try fixing Bibliogram, you should read through the rest of this post for helpful tips about the current situation.</p></div><h2>The origin</h2><p>I started Bibliogram in early 2020 because Instagram was pissing me off. This may sound surprising, but I have never really used Instagram before starting Bibliogram, and I have never had an account, so I didn't personally care much about looking at Instagram posts. The story is that I encountered Instagram links sent by friends too frequently for my taste and wanted to make a workaround.</p><p>It was annoying to see a login wall in the browser when the server didn't try to stop you from accessing the data at all. So Bibliogram accessed the server and put the posts into a friendlier page layout and that was it.</p><p>A much-requested feature I added early on was RSS feeds. <a href="/blog/2020-04-24-bibliogram-stats-ii">This ended up getting quickly turned off for the main instance,</a> because RSS usage was dwarfing interactive usage. Many of these feeds had been added to people's readers and forgotten about. Even today I still receive a decent number of forgotten requests for feeds — these forgotten feeds haven't returned useful data for more than two years. Feed requests aren't free. Bibliogram needs to make an outgoing web request, wait for it, and convert the response data. This also uses up a piece of Bibliogram's rate limit to Instagram, even if nobody's there to see the feed that Bibliogram generates.</p><h2>The rate limit</h2><p>Instagram rate-limits access to its servers to stop people from doing the exact thing I'm doing. I'll try to document here the phases that I went through, but I might have forgotten some of those phases.</p><p>Don't panic: I am not documenting any of the currently working workarounds, only the past ones which are useless except for historical interest.</p><p>I'll be using <code>rkrkrk</code> as a sample username.</p><h3>Before my time: rhx_gis</h3><p>There's a parameter in profile pages called rhx_gis and your application needed to remember this parameter so that it can use it in subsequent requests. If you use the wrong rhx_gis, you're locked out. Instagram used this in the past, but didn't require it when I started working on Bibliogram in January 2020.</p><h3>January 2020: main profile page</h3><p>After 100 or so requests to profile pages like <code>instagram.com/rkrkrk</code> they'll stop returning a useful response until you cool down. Timeline continuations weren't limited, but you could only access the timeline if you knew the internal user ID, and you could only get that ID from the profile page. So if you'd accessed a profile page in the past, you could store the ID and you only needed to access the timeline continuation from then on, which wasn't limited. Problem solved.</p><p>(Currently, the limit on requests to profile pages is <em>way</em> less than 100. It's more like 3. I don't remember when they lowered it.)</p><h3>June 2020: profile page blocked for servers</h3><p>You can now only access a profile page if you're in somebody's house in real life — so not if you're a server on the internet. <a href="https://git.sr.ht/~cadence/bibliogram-docs/tree/master/item/docs/Instagram%20rate%20limits.md">This era was documented here,</a> and it was the first time people saw the notice that an instance was blocked. This limitation means Bibliogram could only load profiles it already knew the user IDs of. I developed a few ways of working around this:</p><p>For finding user IDs, the <em>assistants</em> feature was added. Trusted people could run the assistant program at home, which would collect user IDs (and nothing else) on behalf of Bibliogram, and Bibliogram instances could share between each other all the user IDs they already knew about.</p><p>Similarly, there was <a href="https://git.sr.ht/~cadence/bibliogram/tree/master/item/scripts/import_users.js">the import script</a>, which copied all user ID mappings from one instance to another. It would output numbers like <code>Imported 492381 entries (37161 new, 138 overwritten, 455082 skipped)</code> which means that 37,161 previously unknown users can now be looked up on that instance thanks to sharing IDs.</p><p>Finally, there was a browser userscript people could install to let them access a specific user ID.</p><p>These bypass methods are all part of Bibliogram's code still, but they're not used any more because they're totally useless.</p><h3>July 2020: /feed/ bypass</h3><p><a href="https://git.sr.ht/~cadence/bibliogram/commit/82ee6e6d6462dc16caa44dd58ae94d77d0435661">I'm Cool.</a> I was messing around with google search and entered the query <code>site:instagram.com</code> just to see what would come up. Curiously, I found a URL like <code>instagram.com/rkrkrk/feed/</code> which is just like a regular profile URL but with <code>/feed/</code> on the end. I clicked it, but the page didn't load properly. I checked out the page source, and all the data needed for Bibliogram to work is in there. And then I decided to check it out on my server, and it wasn't blocked at all. In conclusion, Instagram's internal code is absolutely dogshit. You'll see more instances of their dogshit code as we continue.</p><p>I put /feed/ into the Bibliogram code and all is well. Total bypass.</p><h3>December 2020: /feed/ blocked for some servers</h3><p><a href="https://lists.sr.ht/~cadence/bibliogram-announce/%3C20201218014302.855fa8a816be2f19da2f56e3%40disroot.org%3E">Here's the update post for this one.</a> This is INSTAGRAM_BLOCK_TYPE_DECEMBER in the code. /feed/ requests are now blocked for some servers - but not all. I moved Bibliogram to Iperweb, the first suggestion I got, and it works again. (Iperweb has poor value for money servers though, I wouldn't recommend you use that particular company.) Requests now work most of the time. My memory is a bit fuzzy on this one.</p><h3>Late January 2021: graphql mostly blocked</h3><p>Each graphql request has a different set of rules based on the matrix of whether you're at home or a cloud server or accessing via Tor, and which query_hash you're accessing. There's about 4 different behaviours that are fixed for a particular location-endpoint combination, but are seemingly assigned randomly. Why? Probably because its code is dogshit. Anyway, I route through Tor <a href="https://git.sr.ht/~cadence/bibliogram/tree/d576b3ef7655a42128eafb0224be2d2219e5338f/item/src/lib/constants.js#L31">but only for the ones that work through Tor.</a></p><p>After fixing this, I guess nothing really happened for a while? Bibliogram was in a state of mostly-working. It worked the best I could make it work while always scraping from logged-out resources. If you're logged into an account, it's another matter entirely. A whole world of endpoints opens up to you, especially ones used by the official app. However, if you make a wrong move, Instagram will not hesitate to shut down the account for supposedly suspicious activity, and creating an account also means agreeing to the Instagram terms of service, which I do not wish to do.</p><h3>July 2022: overhaul</h3><p>Instagram radically changed the way it internally arranges the data in its pages, requiring new ways to make requests and new ways to parse through it.</p><p>For the profile page, there are 4 different ways that the data might be provided, and your extractor has to handle all 4. It seems to switch which format is being used every few hours. If it's not the right time, then the exractor you're using will fail. Here are the formats:</p><ul><li>iweb, pass in the username, get user object json. rate limit maybe 50 or 100 per hour?</li><li><code>instagram.com/rkrkrk/?__a=1</code> ajax after original page load, tiny tiny tiny rate limit.</li><li><code>instagram.com/rkrkrk</code> and extract _sharedData, similarly tiny tiny tiny rate limit. You can try the /feed/ workaround, which used to give more requests, but this appears to finally be patched now. /feed/ might only work from specific classes of IP addresses.</li><li><code>instagram.com/rkrkrk</code> or /feed/ and extract PolarisQueryPreloaderCache.</li></ul><p>While it is still possible to write code to handle these methods and switch between them, some of them are rate limited too heavily to make Bibliogram viable at those times. Tor seems to be restricted further, though not completely.</p><h2>Bots accessing Bibliogram</h2><p>From as soon as mid-2020 I began to deal with a serious problem of poorly coded bots accessing Bibliogram and using up its rate limit. These bots were created without regard for whether their requests succeed and they don't acknowledge my requests to slow down. They were designed specifically to scrape data from Bibliogram, and the owners were apparently too lazy to run their own instance of Bibliogram, or to contact me asking for help setting one up. The bots are a problem because they appear to be unmonitored, and they're using up the rate limit that would be better if it were helping real people. In August 2020 I blocked various proxy networks from accessing my site, then dealt with the really bad offenders on a case-by-case basis. <a href="https://meta.bibliogram.art/quota-list/">Here's the list that's currently being used.</a></p><p>Later on, I'd create a system where Bibliogram dynamically applies its own rate-limiting system to anyone accessing it.</p><p>I think a mistake I made here was the faceless approach to blocking people who are being a problem. They treat being blocked as a <em>puzzle</em> to overcome, and Bibliogram as just another faceless website, rather than something being run by real people who want to help. In the future I'd approach this differently by giving bots a custom error message that appeals to the operators' humanity and asks them to contact me rather than just trying to work around the block. <a href="https://youtu.be/Ae5yV4p7uh8?t=35">Kind of like the anti-piracy screen in Just Shapes And Beats.</a></p><h2>Why is Bibliogram discontinued?</h2><p>The simultaneous crackdown on /feed/ and Tor and with needing to write new code to scrape the page is too much for me to bother with, especially when I am working on it in my spare time and have no personal interest or incentive.</p><h2>What does discontinued mean?</h2><p>You can't look at profiles. You can still look at individual posts, but if this breaks in the future, I probably won't fix it.</p><p>The main instance, bibliogram.art, will shut down unless somebody offers to take over running it.</p><h2>Can it be revived?</h2><p>Bibliogram is open source, and it is still excellent code to build on top of, since it has the interface design, the post models, and the structures set up to perform several workarounds.</p><p>All that is needed to make it work is a function in collectors.js or body.js to access the data in the new format.</p><p>More Instagram workarounds are definitely possible due to its code still being dogshit, but I don't have the energy to look for more workarounds myself.</p><p>Yes, Bibliogram can be revived. But I won't be the one to make it happen.</p><p>If you decide to take up the task, I have three simple but important requests.</p><ol><li>Get in touch. <a href="/contact">Reach out to me</a> via email or Matrix or something. Maybe even join the existing chatroom. Let me know that my efforts weren't in vain. I might even be able to help you work with my code. I'm a generous person and I would really love to see Bibliogram revived!</li><li><em>Please</em> immediately edit the homepage and the readme to not mention me or my repos. I don't want people to assume that I'm still in charge of the project. Either put your own links in those places <a href="https://git.jordanplayz158.xyz/JordanPlayz158/bibliogram/commit/dd111b1e2eae13eb8713bcad84463c59bc1cc88d">like this,</a> or cut them out entirely.</li><li>I would suggest changing the name. If you're stuck for names, "Bibliograph" has been bouncing around in my head for a while, try that as a name. I'm okay with you keeping the name the same if you don't want to change it.</li></ol><h2>Shoutouts</h2><p>Huge huge massive thanks to the volunteers that translated Bibliogram's interface to their language, and I'm sorry that I let down your hard work a bit by discontinuing Bibliogram. I've credited you all again here to show just how important you are!</p><ul><li>Esmail, for the Arabic (العربية) translation</li><li>Plamen, for the Bulgarian (Български) translation</li><li>Philipp Beckers, for the German (Deutsch) translation</li><li>tagomago, for the Spanish (Español) translation</li><li>Mostafa, for the Persian (فارسي) translation and their patience helping me understand bidirectional text</li><li>bopol, for the French (français) translation</li><li>XoseM, for the Galician (Galego) translation</li><li>Musthafa, for the Indonesian (Bahasa Indonesia) translation</li><li>Saverio Morelli, for the Italian (Italiano) translation</li><li>learnpastsole, for the Malay (Bahasa Melayu) translation</li><li>sech1p, for the Polish (Polski) translation</li><li>tmpod, for the Portuguese (Português) translation</li><li>TotalCaesar, for the Russian (Русский) translation</li><li>Ahmet, for the Turkish (Türkçe) translation</li><li>Суспільне, for the Ukrainian (Українська) translation</li></ul><p>Thanks to the Bibliogram chatroom for keeping me company and coming along on the ride with me.</p><p>Thanks for Austin Huang for creating a real alternative to the Instagram app. May Barinsta rest in peace.</p><p>For the people in #87806986 on /g/, you are fucking <em>hilarious.</em> Maybe the best way to cheer somebody up really is by showing them a clown.</p><h2>What's next?</h2><p>Something very exciting is coming next. Stay tuned for my next project: <strong><a href="https://breezewiki.com">Announcing BreezeWiki.</a></strong></p><p>See ya!</p><p>— Cadence</p>]]></summary>
        <published>2022-09-01T12:13:07.125Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advanced: How to manually decrypt a Matrix JSON event using Element]]></title>
        <id>https://cadence.moe/blog/2022-08-06-advanced-how-to-manually-decrypt-a-matrix-json-event-using-element</id>
        <link href="https://cadence.moe/blog/2022-08-06-advanced-how-to-manually-decrypt-a-matrix-json-event-using-element"/>
        <updated>2022-08-06T04:15:13.986Z</updated>
        <summary type="html"><![CDATA[<p>This is not a security issue or a hack.</p><p>This guide assumes you have Element desktop logged in and you're able to decrypt the messages in your client. If Element refuses to decrypt then this guide isn't for you, sorry.</p><p>This guide is for people who have a bunch of JSON of an encrypted event, perhaps obtained from their homeserver, and they want to legitimately decrypt it using their own client's keys.</p><p>Also, if you want to decrypt the history of an entire room to save as plaintext, you can do this using the built-in "export chat" button. Save as plain text and turn up the size limit to 100 MB. For massive rooms (>100k events) this could take a couple of hours. Element may appear to be frozen during the process but it will finish eventually.</p><h2>How to do it</h2><p>Press <kbd>Ctrl-Shift-I</kbd> to open the console, then paste the following code, replacing the middle line with your event JSON.</p><pre class="outline-pre">(e => mxMatrixClientPeg.matrixClient.crypto.decryptEvent.bind(mxMatrixClientPeg.matrixClient.crypto)(new (mxMatrixClientPeg.matrixClient.store.getRooms()[0].timeline[0].constructor)(e)).then(c => console.log(c.clearEvent)))(
  { PUT YOUR EVENT JSON HERE WITH THE CURLIES }
)
</pre><h2>How it works</h2><ul><li><code>mxMatrixClientPeg.matrixClient.crypto.decryptEvent.bind(mxMatrixClientPeg.matrixClient.crypto)<br/></code>Prepares the built-in decryptEvent function so that it can be called.</li><li><code>mxMatrixClientPeg.matrixClient.store.getRooms()[0].timeline[0].constructor<br/></code>Gets a copy of the MatrixEvent type. This is done by looking up an existing event, and getting its constructor.</li><li><code>new (...)(e)<br/></code>Constructs a new MatrixEvent on the provided JSON.</li><li><code>.then(c => console.log(c.clearEvent))<br/></code>Once it's done decrypting, displays the result.</li><li><code>(e => ...)({})<br/></code>An anonymous function to make it easier to see where to paste the event JSON.</li></ul><p>Hope this helps!</p><p>Cadence</p>]]></summary>
        <published>2022-08-06T04:15:13.986Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to start an unencrypted chat on Matrix (Element)]]></title>
        <id>https://cadence.moe/blog/2022-07-29-how-to-start-an-unencrypted-chat-on-matrix-element</id>
        <link href="https://cadence.moe/blog/2022-07-29-how-to-start-an-unencrypted-chat-on-matrix-element"/>
        <updated>2022-07-29T07:17:34.425Z</updated>
        <summary type="html"><![CDATA[<h2>Starting a regular, ordinary, encrypted chat</h2><p class="gemtext-paragraph">This is nice and easy because encryption is the default. On the &quot;people&quot; section on the left side, click the plus icon. Search for a person's name, or enter their full @username:matrix.org handle into the box. Click Go. All done!</p><p class="gemtext-paragraph">If you like encryption - most people do - then you don't need to read the rest of this post.</p><p class="gemtext-paragraph">---</p><h2>About unencrypted chats</h2><p class="gemtext-paragraph">Starting one is really difficult and annoying. You used to be able to do this by flipping a switch, but the functionality has been removed now.</p><p class="gemtext-paragraph">To get into the technical details, Matrix's representation for whether chats are direct or not is also a pain. Rather than being a property that's set on the room and consistent for everybody, the is-direct state of a chat is determined for each user by their own account data, and can only be broadcast to other users when inviting them during room creation.</p><p class="gemtext-paragraph">This article will mostly be avoiding the technical details.</p><h2>Starting an unencrypted direct chat in Element</h2><p class="gemtext-paragraph">First, go to the rooms section and create a new room. Make sure the room is private, but make sure it's *not* encrypted by flipping the switch off.</p><p class="gemtext-paragraph">Then, invite the other person to the room. (You can click on &quot;people -&gt; invite to this room&quot; in the side bar.)</p><p class="gemtext-paragraph">Once everybody is in the room, run the command &quot;/converttodm&quot;. This will give the chat the correct name and picture, and it will warp up to the &quot;people&quot; section in the left side list. Each person needs to run this command because the command does not synchronise between people.</p><p class="gemtext-paragraph">This is, currently, the only way to do it in Element.</p><h2>For Linux users: A more convenient shell script</h2><p class="gemtext-paragraph">This is a long shell script because creating the chat is a three step process with many opportunities to fail along the way. I have used the non-POSIX-compatible fish shell, but feel free to port this to another shell. You need curl and jq to run it.</p><div class="gemtext-link"><a href="/static/documents/matrix-start-chat.fish">/static/documents/matrix-start-chat.fish</a></div><p class="gemtext-paragraph">Put this file into the `~/.config/fish/functions` folder. You'll need to put your access token in the script (or read it interactively); you can find an access token under &quot;settings -&gt; about -&gt; access token&quot; in Element. You can now immediately invoke `matrix-start-chat @user:server.tld` (multiple recipients allowed) in the shell to start a new unencrypted chat. The people you're inviting to chat don't need to do anything special.</p><h2>Why is it so complicated?</h2><p class="gemtext-paragraph">Step 1: Call the createRoom API endpoint with all the users you want to invite, saying that you'd like the chat to be direct. This does create the chat and asks all *other* users to make the chat direct on their side, but we still need to mark it direct on our side.</p><p class="gemtext-paragraph">Step 2: Query the m.direct account data, which stores which chats are displayed as direct chats on our side.</p><p class="gemtext-paragraph">Step 3: Insert the new chat into this field, which is a non-trivial process, even with jq. The modified m.direct can be sent back to the account data. All done.</p><p class="gemtext-paragraph">Hope this post helps you!</p><p class="gemtext-paragraph">Cadence</p>]]></summary>
        <published>2022-07-29T07:17:34.425Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Userscript to improve notification sounds in Element (Matrix)]]></title>
        <id>https://cadence.moe/blog/2022-07-04-userscript-to-fix-notification-sounds-in-element-matrix</id>
        <link href="https://cadence.moe/blog/2022-07-04-userscript-to-fix-notification-sounds-in-element-matrix"/>
        <updated>2022-07-04T11:49:16.700Z</updated>
        <summary type="html"><![CDATA[<style>.x { color: #ff4; }
.e { color: #f93; }
</style><h2>Just Use SchildiChat</h2><p><a href="https://schildi.chat/"></a></p><p>SchildiChat is a much improved version of Element for desktop, web, and Android. I have since added these sound effects to it <a href="https://github.com/SchildiChat/matrix-react-sdk/pull/12">in a PR.</a> The softer sounds are default (but you can switch back to Element's, if you desire).</p><p>Please just use SchildiChat.</p><p>The original post continues below.</p><h2>Background</h2><p>There are two problems with Element's notification sound. Firstly the sound, secondly its frequency.</p><p>On the internet, text conversations are often fragmented into several small messages as one person thinks of more things to say. The other person then replies.</p><p>Conversations are also <em>asynchronous,</em> which means that they don't take place in real time. Somebody can walk away from their computer, come back later, and reply to the message without breaking the flow too badly. You can't do this with a phone call, for example. Taking time to reply is acceptable etiquette.</p><p>Because of this, you don't need to notified for <em>every</em> message you receive. If somebody tells you something over the course of a couple of minutes in 4 separate messages, you only need one notification sound for that. You'll remember that you have something to check, and when you do check, you'll see the conversation. Having an extra 3 notification sounds won't make a difference, it only serves to be annoying.</p><h3>The userscript</h3><p>The userscript solves the first problem by replacing the sound, and the second problem by limiting the frequency of notification sounds.</p><p>The new ringtone was created by Ana Gelez and the new message sound was created by <a href="https://heyquark.com/general/2022/07/04/microblogging-2/">my friend Quarky.</a></p><p>Here is the first part of the userscript, to show you how to change the settings:</p><pre class="outline-pre wrap"><span class="e">// **** CUSTOM SETTINGS HERE **** //

// after the application makes an audible notification sound, all sounds arriving in the next [TIME] will be completely silenced.
<span class="x">const gapBetweenSounds = 10*60*1000</span> // 10 minutes

// when you focus the application and check messages, this will reset the timer so the next received message will always notify again.
// depending on your system, this focus detection could be unreliable, causing you to miss notification sounds!
<span class="x">const resetOnFocus = true</span>

// replace the default sound effects with ones of your own choosing.
// if you want to design your own sounds, you need to put ogg and mp3 files on the server.
const customSounds = {
  messageAudio: { // when you receive a message
    <span class="x">url: "https://umbreon.heyquark.com/files/notif",</span> // default is "media/message"
    <span class="x">volume: 1</span>
  },
  ringAudio: { // when you receive a call
    <span class="x">url: "https://umbreon.heyquark.com/files/ring",</span> // default is "media/ring"
    <span class="x">volume: 1</span>
  },
  ringbackAudio: { // when you place a call
    <span class="x">url: "https://umbreon.heyquark.com/files/ring",</span> // default is "media/ringback"
    <span class="x">volume: 0.5</span>
  }
}

// **** END OF CUSTOM SETTINGS **** 
</pre><p>You can view the whole script and <a href="/static/documents/limit-element-notifications.user.js">install it by clicking here.</a> You must have a browser extension like ViolentMonkey installed already. This linked code is licensed under CC0 meaning you can do anything you want with it. If you want to officially make this part of Element, you have my full blessing - but please just use SchildiChat.</p><p>Have fun!</p><p>— Cadence</p>]]></summary>
        <published>2022-07-04T11:49:16.700Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git forge opinions: GitHub, GitLab, Gitea, Sourcehut]]></title>
        <id>https://cadence.moe/blog/2022-07-03-git-forge-opinions-github-gitlab-gitea-sourcehut</id>
        <link href="https://cadence.moe/blog/2022-07-03-git-forge-opinions-github-gitlab-gitea-sourcehut"/>
        <updated>2022-07-04T11:12:57.941Z</updated>
        <summary type="html"><![CDATA[<p>This isn't a technical comparison. It is a biased rant with hopefully some insight inside. Reader beware.</p><p>You're welcome to not read this if the language is harmful for you, or if you just don't find it interesting or helpful. I love you!</p><h2>GitHub</h2><p>The people read my blog almost certainly are not GitHub's biggest fans and are aware that alternatives exist, so I won't dwell on this much.</p><h3>Bad</h3><ul><li>God fucking damn it Microsoft</li><li>Literally not even open source itself</li><li>Does not respect you</li><li>Will take down your personal data if it feels like it</li><li>Social features</li></ul><h3>Good</h3><ul><li>Everybody has an account anyway so you may as well use it</li><li>The UI is familiar and <em>mostly</em> well designed.</li></ul><h2>GitLab</h2><h3>Bad</h3><ul><li>The user interface is horrible to navigate, relies on icons without labels way too much, eschews conventions</li><li>Loads unbelievably slowly for me. It's SO slow. If you think it loads quickly then move to Australia and tell me again.</li><li>Keeps asking me to log back in every week or so. Sends an email every time you log into your own account. Both of these remain true if you turn on 2FA, so I had to turn off 2FA to not go insane.</li><li>Does not respect you</li><li>Will take down your personal data if it feels like it</li><li>Social features</li></ul><h3>Good</h3><ul><li>It has a billion features, if you, um, really want them.</li></ul><h3>Thoughts</h3><p>GitLab really is the worst thing ever. It doesn't offer any advantages for anything I want to do on a git forge, and using the straightforward features has so many bad parts.</p><h2>Gitea (hosted by somebody else, like Codeberg)</h2><h3>Good</h3><ul><li>It's really fast.</li><li>You can probably contact the person/group that runs it, and they possibly even respect you</li></ul><h3>Bad</h3><ul><li>Most likely to go offline in the future, and while you can ask your friends to download your data, you'll still have to move house, and external links to your stuff will be broken.</li><li>If people want to contact you or contribute to your repository in any form they have to sign up on <em>yet another</em> Gitea instance. "oh blah blah federated identity and decentralised repos will solve this" NO IT WON'T, IT'S NEVER HAPPENING, SHUT UP.</li></ul><h2>Gitea (selfhosted)</h2><h3>Good</h3><ul><li>You own your data!</li><li>You are not Microsoft!</li></ul><h3>Bad</h3><ul><li>You gotta run that shit and keep it online forever</li><li>You won't do that. It's going to disappear in the future and external links to your stuff will be broken.</li><li>If people want to contact you or or contribute to your respository in any form, they have to sign up on <em><strong>yet another</strong></em> Gitea instance.</li></ul><h2>Sourcehut</h2><p>Disclaimer: I pay to use Sourcehut and it is by far the forge that I have used most within the last two years.</p><h2>Thoughts</h2><p>I'm going to organise this as written text since it's really different from the options above, and harder to group into positive or negative things. Most of them are mixed, coming with upsides and downsides.</p><h3>Speed</h3><p>It's really incredibly fast to load, particularly on bad networks like the entirety of Australia.</p><p><a href="https://forgeperf.org/">Check out the totally* unbiased* speed comparison website.</a></p><h3>Management</h3><p>It's run by a real person that you can contact if you have problems and he replies to your emails! That's cool. He respects you (a little bit) and won't take down your data unless he really has to. And he'll let you know and be apologetic about it. (Unless you're being an asshat.)</p><p>He also has a LOT of opinions and will probably not like your feature request because you just don't understand his amazing grand vision. And none of your users understand his amazing grand vision either. If you're asking for help, he'll be helpful, but if you're asking "[this sourcehut feature] should probably work [this different way]", he'll probably reject your suggestion.</p><h3>The repos/lists/todos split</h3><p>On the forges mentioned above, the repository and the issues page and the contributions are all part of the same section. All repositories come with an issues page and a contributions page whether you like it or not. Due to this design, they allow for easy navigation and searching across all the different sections relating to the project.</p><p>Sourcehut has three kinds of pages: repos, lists, and todos. However, rather than being combined with a navigation to go between them, they are completely different web pages that aren't linked together. You also create them on an ad-hoc basis, meaning that for personal projects that you'd like to share with the world but not allow contributions on, you don't have to have a list or a todo.</p><p>Sounds good? It is, and it isn't. I mentioned that all of the different pages you create are not linked together, and <strong>this fucking sucks it sucks so bad.</strong> Pause a moment to think about it. You're looking at some GitHub repo or whatever, and it's a public project that welcomes contributions, <em>but,</em> when you go to find the issues page to report that bug, the "issues" link is not there, and there's no way to get to it unless you figure out the URL. It's dreadful.</p><p>Sourcehut does offer the "project hub" feature, which has <em>outgoing</em> links to the different sub-pages of your project, but once you're there you can't get back to the project hub again. This makes it basically useless for navigation. In addition, the project hub page and the repo page are virtually indistinguishable, leading you to ask multiple times, "wait, where did the button go to get to the mailing list? I swear I saw it in the top bar a minute ago." And you did see it a minute ago, but it's not there now because you've navigated to the sub-page for the repo, and you're never making it back up to the hub page ever again.</p><p>To ameliorate this, you can edit the README of every single page you create to include outgoing links to get to the other sections of your project, finally allowing people to navigate around freely to the places they <em>need</em> to get to, <strong>which fucking sucks it sucks so bad.</strong> <a href="https://git.sr.ht/~cadence/bibliogram">Take a look.</a></p><p>Being able to create mailing lists separately, though, does mean that you can make a list for whatever you want, rather than it having to be strictly related to some repo. (I think I heard somewhere that He doesn't like you doing this, but it's not against the terms of service, and you're paying, so can He <em>really</em> be too mad about it?)</p><p>There is an extra setting for repositories, which is "unlisted", and can only be accessed if you know the URL (so, it's not linked from your user profile). I find myself using this a lot. It's great!</p><h3>Contributing</h3><p>Rather than requiring one-time contributors to create an entire account and fork the entire repo, they can email small code patches into your project. These are displayed on the mailing lists page which also doubles as a code review. You can use git commands to apply their commits directly to your own repository, and then you can edit them if you want to before pushing them back to the main repo. Patches are sent using a tool called <code>git send-email</code>. Awesome!</p><p>People have to learn how to use <git>send-email</git>, and the workflow will be very unfamiliar the first time somebody tries. Sourcehut tries to educate people of how to do this, but does not do it adequately, so on all of your projects that you expect to receive contributions on you need to link out to documentation and tutorials.</p><p>The first time somebody has to do this, due to their unfamiliarity with the workflow, it will be more mentally taxing and time consuming for them to figure it out compared to signing up on your Gitea instance and using the Gitea workflow. Unless your expected contributors are all Linux kernel developers. If that's the case, Sourcehut is for you.</p><h3>Using lists/todos</h3><p>Lists and todos appear at first glance to be analoguous to GitHub's pull requests and issues, but this is actually not the case. Sourcehut's model is a bit more flexible, as long as all of the other people who are going to be submitting things to your project also understand the nuance and use them appropriately. Hahahaha.</p><p>Lists are for discussions, announcements, code patches, code review, and preliminary bug reports. People should write everything to lists if they can. This is easier for them, too, since they literally just have to write an email and the body of their email appears on the page.</p><p>Todos are for actionable tasks. They look a lot like GitHub's issue page, and there are similarities for sure, but you don't want this to act as the first line for submitted issues. This is because, if you're anything like me, the vast majority of the issues you get are not actionable tasks - either requests for help or issues that are impossible to solve. Somebody will complain about a feature that doesn't work, and you have to say "this just isn't how my code works" or "I don't have enough information to act on this". And you could keep asking them and gather the information you need, but at that point, the whole conversation is in shambles and the info you need is scattered all through the thread.</p><p>The correct way to do it is to use lists for bug report submissions, discuss with the person further until you know what's going on and what to do about it, and then, if you need to do anything about it, create your own actionable task on the todos page with all the information you found out in the top post. And if the problem they emailed in was something that you can't solve, you can tell them "I can't solve this" and you don't have to worry about the (1) indicator on the issues tab, because the conversation will be lost to time. This is good.</p><h3>Social media features</h3><p>There aren't any stars or other gamified metrics. This is a good thing!</p><p>However, it also means that you can't show off to a future employer about how many people love your code and rely on it <a href="https://web.archive.org/web/20210704022108/https://github.com/Marak/faker.js/issues/1046">in order to convince them to hire and pay you.</a></p><h3>Payment</h3><p>Sourcehut is a paid service.</p><p>This means you have to pay, and it's another subscription coming out of your bank account and where did all my money just go again?</p><p>This also means the platform won't do things that are bad for its users, which is not a guarantee you get with GitHub or GitLab, because they are owned by investors. Sourcehut can pay its employees and it can plan to add features that will help its paying users and it should be around for the forseeable future.</p><h3>JavaScript</h3><p>No JavaScript. This is a good thing! Gitea <em>mostly</em> works with JavaScript disabled, GitLab doesn't work at all. Sourcehut doesn't have any JavaScript on the site. For basically everybody this doesn't matter in the slightest.</p><h3>CI</h3><p>i haven't used it but it looks pretty cool and it looks like it could avoid some of my current frustrations regarding CI.</p><h2>Conclusion and recommendations</h2><p>Sourcehut is really great for personal projects that you occasionally want to show to other people because it loads quickly and you can create lists and todo on an ad-hoc basis rather than them being linked to some repo.</p><p>The contribution process is where it falls apart. It seems like it would be pretty great to contribute to because you don't need an account to discuss, report bugs, or send code patches (once you've learned how to do that). And it is pretty great, but only under the condition that you already know the URLs for the repo page and the mailing list, because you can't get from one to the other without guessing the URL.</p><p>As such, if you want to invite contributions from novice users, or don't want to manually write navigation links into literally all of your READMEs, then you should probably stick with one of the forges that uses the classic interface and contribution process, like GitHub or Gitea. Gitea does have the signup process as a barrier. Make your choice depending on how much you and your users hate Microsoft.</p><p>GitLab isn't good for anything. Fuck GitLab.</p><p>— Cadence</p>]]></summary>
        <published>2022-07-04T11:12:57.941Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Explanation of Wii disc image formats]]></title>
        <id>https://cadence.moe/blog/2022-05-24-explanation-of-wii-disc-image-formats</id>
        <link href="https://cadence.moe/blog/2022-05-24-explanation-of-wii-disc-image-formats"/>
        <updated>2022-05-24T04:10:57.456Z</updated>
        <summary type="html"><![CDATA[<p>Everything here is based on what I could find out online. If any of it is wrong, please let me know.</p><h2>.iso</h2><p><strong>All-purpose. Timeless.</strong></p><p>.iso is a generic disk image format. There are many kinds of .iso files for many different kind of discs. Wii, PlayStation 3, and generic CDs and DVDs can all be stored in a .iso file. In the case of the Wii, a .iso is a copy of literally everything on the disk. It's straightforward and works for literally every purpose, although the file size is large.</p><p>It can be played directly on Dolphin, and on hardware with an ordinary USB loader.</p><p>Dolphin Emulator says,</p><blockquote>A simple and robust format which is supported by many programs. It takes up more space than any other format.</blockquote><p>You can mess around and convert ISO files using <a href="https://wit.wiimm.de/wit/">Wiimm's ISO Tool</a>, or Dolphin's right click menu, as well as many other programs.</p><h2>.nkit.iso</h2><p><strong>All-purpose. Timeless. Smaller size.</strong></p><p>NKit is a software package that shrinks the size of .iso files by removing junk data (keeping the actual game data). If you want the original .iso back, you can use NKit again to reconstruct the full thing, so it can be used for game preservation.</p><p>The filename ends in .iso because it is still a regular .iso, it just has everything except the game data stripped out. As such, it has the same compatibility as a regular .iso.</p><p>It can be played directly on Dolphin, and on hardware with an ordinary USB loader.</p><p>To convert both ways between regular .iso and .nkit.iso, <a href="https://vimm.net/vault/?p=nkit">download the NKit program.</a></p><p>On Dolphin Emulator, game data may take 10-20% longer to read because Dolphin emulates Constant Angular Velocity and NKit moves data towards the inside of the disc.</p><p>NKit has a unique feature where it can deduplicate update partitions and reuse them between discs, allowing you to save more storage space for large collections of games.</p><h2>.wbfs</h2><p><strong>De-facto format for downloaded games.</strong></p><p>Stands for Wii Backup File System. (Probably.) If you download games from the internet, you'll most likely see this format, due to its small size and wide compatibility. It removes junk data and update partitions from the disc, leaving just the actual game data, so it's smaller than .iso files and not suitable for game preservation. It's most used by people who download and play games. USB Loader GX dumps games in this format.</p><p>It can be played directly on Dolphin, and on hardware with an ordinary USB loader.</p><p>You cannot convert WBFS to other formats using Dolphin, but even if you could there would be no reason to.</p><p>You can convert and mess around with the contents of WBFS files using <a href="https://wit.wiimm.de/wwt/">Wiimm's WBFS Tool</a>, among other programs.</p><h2>.gcz</h2><p>Dolphin Emulator says,</p><blockquote>A basic compressed format which is compatible with most versions of Dolphin and some other programs. It can't efficiently compress junk data (unless removed) or encrypted Wii data.</blockquote><p>It's a compressed format for GameCube games. It's not helpful for Wii games.</p><p>It can be played directly on Dolphin, and not on hardware.</p><p>You can convert it in Dolphin's right click menu.</p><h2>.nkit.gcz</h2><p>NKit removes junk data, GCZ compresses the rest. Nowadays, the NKit software package will do both steps for you at once.</p><p>It can be played directly on Dolphin, and not on hardware.</p><p><a href="https://vimm.net/vault/?p=nkit">Download the NKit program</a> to convert .iso to .nkit.gcz and back. Dolphin's right click menu can probably convert it for you, too.</p><h2>.wai</h2><p><a href="https://wit.wiimm.de/info/wia.html">It was one of the earliest file formats for compressing Wii game data.</a></p><p>Dolphin Emulator says,</p><blockquote>An advanced compressed format which is compatible with Dolphin 5.0-12188 and later (July 2020 and later), and a few other programs. It can efficiently compress encrypted Wii data, but not junk data (unless removed).</blockquote><p>It can be played directly on Dolphin, and not on hardware.</p><p>You can convert it using <a href="https://wit.wiimm.de/wdf/">Wiimm's WDF Tool</a>, as well as the Dolphin right click menu.</p><h2>.rvz</h2><p><strong>Dolphin only.</strong></p><p>Dolphin Emulator says,</p><blockquote>An advanced compressed format which is compatible with Dolphin 5.0-12188 and later (July 2020 and later). It can efficiently compress both junk data and encrypted Wii data.</blockquote><p>This format can be used for game preservation, like NKit.</p><p>It can be played directly on Dolphin, and not hardware unless converted.</p><p>You can convert it using the Dolphin right click menu.</p><h2>WHICH FORMAT SHOULD I DUMP AS/CONVERT TO</h2><ul><li>If you want to play your games on hardware and don't care about game preservation, use WBFS.</li><li>If you do not want to play your games on hardware, use RVZ, since it fits all other purposes.</li><li>If you want to play your games on hardware while keeping them as properly preserved copies with a fairly small file size, use .nkit.iso.</li><li>If you're terrified of the <em class="fun-highlight">2 new formats and counting</em> that Dolphin has created, use .iso. It fits all purposes, it has universal compatibility, and it's not going anywhere. (The downside is file size.)</li></ul><h2>Format benefits data matrix</h2><p>Same data in a tabulated form.</p><table class="wii-format-table" border="1"><thead><tr><th>Format</th><th>Playable on hardware</th><th>Can reconstruct original file</th><th>Compresses GameCube data</th><th>Compresses Wii data</th><th>Removes junk data</th><th>Overall file size</th></tr></thead><tbody><tr><th>.iso</th><td>✅</td><td>✅</td><td>-</td><td>-</td><td>-</td><td>Largest, always 4.7 GB</td></tr><tr><th>.nkit.iso</th><td>✅</td><td>✅</td><td>-</td><td>-</td><td>✅</td><td>Decent</td></tr><tr><th>.wbfs</th><td>✅</td><td>-</td><td>-</td><td>-</td><td>✅</td><td>Decent (Wii only)</td></tr><tr><th>.gcz</th><td>-</td><td>✅</td><td>✅</td><td>-</td><td>-</td><td>Decent (GameCube only)</td></tr><tr><th>.nkit.gcz</th><td>-</td><td>✅</td><td>✅</td><td>-</td><td>✅</td><td>Very small (GameCube only)</td></tr><tr><th>.wai</th><td>-</td><td>✅</td><td>-</td><td>✅</td><td>Unsure</td><td>Smallest (Wii only)</td></tr><tr><th>.rvz</th><td>-</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td><td>Smallest</td></tr></tbody></table><h2>Further reading</h2><ul><li><a href="https://wit.wiimm.de/info/iso-images.html">ISO Images (file formats) - Wiimm</a></li><li><a href="https://wiibrew.org/wiki/Wii_Disc">Wii Disc - WiiBrew</a></li><li><a href="https://dolphin-emu.org/blog/2020/07/05/dolphin-progress-report-may-and-june-2020/#50-12188-support-for-rvz-and-wia-disc-formats-by-josjuice">5.0-12188 - Support for RVZ and WIA disc formats - Dolphin Progress Report</a></li></ul>]]></summary>
        <published>2022-05-24T04:10:57.456Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Thoughts on Wii Sports Resort]]></title>
        <id>https://cadence.moe/blog/2022-04-16-thoughts-on-wii-sports-resort</id>
        <link href="https://cadence.moe/blog/2022-04-16-thoughts-on-wii-sports-resort"/>
        <updated>2022-04-16T07:36:36.908Z</updated>
        <summary type="html"><![CDATA[<h2>About this post</h2><p>I'd last played Wii Sports Resort in depth about a decade ago. It got into my head recently and wouldn't leave, so I decided to write a post about it. To refresh my memory of what the sports and the game as a whole were like, I watched <a href="https://www.speedrun.com/wsr/run/z05krrjm">a 6h20m "all stamps" speedrun.</a></p><p>If you haven't played Wii Sports Resort, this post likely won't make a lot of sense. I wrote this post <a href="https://cadence.moe/blog/2022-02-08-what-goes-into-my-writing">for myself,</a> and it's a collection of my thoughts <em>after</em> I've played the game, it's not exactly a review or a recommendation of the game. I've tried to include little video clips of the gameplay of each sport to allow you to to quickly familiarise yourself with the sports if you don't know them, so hopefully you can get some meaning out of my words even if you haven't played the game. Fortunately, Wii Sports Resort <a href="https://www.youtube.com/watch?v=rLeKHgKysRs">doesn't have any lore,</a> so I won't be spoiling anything about the game here.</p><p>This post is also a Web 1.0 exclusive. In other words, it's not available on Gemini. Sorry!</p><h2>Introduction</h2><p>Right, the all stamps speedrun.</p><p>Watching the all stamps speedrun was <em>fascinating!</em> I remembered so many things about the game and also discovered a lot of things that I never knew before. For example, I never realised that the victory music for each sport is different from each other! Usually this reflects the sport in some way. For example, the basketball music sounds... I don't know how to describe it, but it sounds basketball-y!</p><p>The music and sound composition for the whole game is really incredible. The in-your-face-ness of basketball, the wind and ambience of the golf courses, and the menacing beat of swordfighting showdown... wow!</p><p>A lot of the stamps in this game were incredibly challenging. I remember that I'd obsess over them a lot when I was younger, either thinking about how I could get them, or wondering if I was skilled enough to achieve the stamp's high demands. For example, the archery stamp that requires a perfect game (difficult execution!!), or the power cruising stamp that requires first locating all 5 time balloons and then popping them in a single run (difficult planning!!). I think I could have had more fun if I focused on the actual gameplay of the sports, but I'm not upset at my past actions.</p><h2>Swordplay</h2><p><a href="https://youtu.be/oNVHiSx1H-8?t=1327">Gameplay video</a></p><p>My whole family were huge fans of this mode and it has always had the "Most Popular" banner above it. We played it for hours the first day we got the game, then woke up the next day with really sore shoulders and arms. As well as the versus mode we also played the mode where a single player fights against an opposing army, though my siblings played this one more than me. They managed to get to level 20, volano reverse, but not complete it. As time went on, they became far better at the versus mode than I did, but I still enjoyed playing against them. I like the way the characters move and step around each other on the circular platform.</p><h2>Flying</h2><p><a href="https://youtu.be/a_JdRgfJL4o?t=50">Gameplay video</a></p><p>Looking back, I realise that the island flyover mode made me fall in love with this game. It's not merely a free roam around the island, there's all sorts of balloons to pop, locations to explore, and of course i-point message boxes to read, which add a huge amount of flavour to the whole island and its setting. The text is different depending on the time of day, meaning that there's 240 individual tweets of lore about the island to find. It's so interesting and it contextualises the whole setting of the game and makes it seem like a real place. It's so awesome! It turns out that the US and PAL versions have differing i-point text, so now I want to read the US version's lore too. For example, the PAL version never says that the tennis court balls were stolen by dogs, merely that they were stolen. I spent <em>so</em> much time playing island flyover.</p><p>I always wished that it didn't have the time limit, so that I could truly roam free, but I guess the fitness-themed game didn't want you to spend all day in front of the teevee without realising where the time had gone. The plane controls were really fun to use, aside from constantly having to thrust the remote forward to get temporary speed boosts, which is super annoying.</p><h2>Power cruising</h2><p><a href="https://youtu.be/QQVKm6O628Q?t=582">Gameplay video</a></p><p>Power cruising has a free roam mode too which lets you get up a lot closer to the game world due to the camera, but you move a lot slower than the aeroplane flyover and the pitch of the engine is more annoying. And you have to stay in the ocean, you can't go on land in your tiny boat, but there are a lot of interesting parts of the ocean that are tricky to access by plane. The regular power cruising game is decent enough, and going through the floating goalposts is satisfying, but overall the game isn't deep and doesn't feel like a sport.</p><h2>Golf</h2><p><a href="https://youtu.be/5tI6LkjHN_o?t=101">Silly gameplay video</a></p><p>I should have played golf more, I think it was definitely one of the more interesting and skillful modes in the game. I played a round with my dad just a couple of years ago and it was fun to watch each other try to line up shots and make jokes. It really puts the pressure on when you have to make a tricky shot and you have to use the motion controls to do it. It's also a lot of fun when you get a lucky red bar and the shot exceeds your expectations. Trying to balance the different clubs and the wind speed and the shot angle and the slope of the green is so interesting.</p><h2>Frisbee golf</h2><p><a href="https://youtu.be/aBZpdzn0jzA?t=658">Gameplay video</a></p><p>it's awesome and anticapitalist!!! in real life, that is. i never played it in wii sports resort</p><h2>Basketball</h2><p><a href="https://youtu.be/rRZLLtwGoto?t=15">Gameplay video</a></p><p>I think the basketball 3 vs 3 challenge was my favourite mode to play against my siblings? Unlike some of the other games you can play against the other person in real time rather than turn-taking, and the game is really interactive: trying to pass the ball to a better position, avoiding them snatching, and then juke them out when shooting. And even when shooting you still need to land the shot, which isn't free. The defense part is fun too, trying to snatch the ball at the right moment without falling on your face and giving them a free shot. This is probably the sport that I screamed the loudest at in both triumph and dismay. I want to play it again with someone.</p><h2>Table tennis</h2><p><a href="https://www.youtube.com/watch?v=y93953CIQxQ">Tutorial video that also shows gameplay and doesn't waste time</a></p><p>My dad was absolutely obsessed with this game as well as the return challenge. He would spend hours every evening playing the table tennis return challenge trying to get a higher score, which was both funny and sad to watch. It took him so many attempts to get to 999. He would also tell us all about his games against opponents in the regular mode. Many times he was upset by his mii standing at the wrong side of the table to return the serve and not running to where it needed to be. Sometimes he would shout (playful) at the teevee, "stop standing there like a wet lettuce!!!!", a phrase which has remained in my head for a decade. Apparently this is a wider known slang term but I don't know the slang implications. Lucia, the champion, gave him soooooo much trouble.</p><h2>Bowling</h2><p><a href="https://youtu.be/ywda1DLb3Lk?t=4656">Gameplay video</a></p><p>Whenever we had friends around to play we liked the bowling game since we could pass the controllers around for everyone to play and it had just the right amount of luck while still being straightforward to play. I remember playing this against my babysitter a decade ago. I won.</p><h2>Wakeboarding</h2><p><a href="https://youtu.be/5AnXs-_nHOo?t=413">Gameplay video</a></p><p>I found this one relatively fun to play on my own and I enjoyed going for high scores. Nobody else liked it as much as I did. I guess it was never a very deep game mode - just ride off the boat's wave trail, spin the remote, and land on your board. I still liked it in the moment.</p><h2>Canoeing</h2><p><a href="https://youtu.be/dEFyN6VW0xY?t=85">Gameplay video.</a> The video shows the practice mode where you can find ducklings. The main game has you complete a bounded course as fast as you can.</p><p>I think canoeing is the game that made me sweat the most. It's not very deep but it is fun to push the boat around and say hi to the ducks and the fish. I found out from watching the speedrun that the fish give you a speed boost if you row the same way as them, which is,,,, funny,,,,,</p><h2>Cycling</h2><p><a href="https://youtu.be/OIH3ytlZfyo?t=27">Gameplay video.</a> The video shows the co-op mode on a tandem bicycle; the single-player mode is identical but with a single mii on a standard bicycle.</p><p>Cycling does seem to be a fairly deep mode. I never played it a lot in the past, but after watching the speedrun, I've gained a massive appreciation for it. There are 6 courses that span the whole island, and each of them was carefully designed. They ride around different parts of the island including the main landmarks such as the main bridge, volcano, and the town, but the route connects these landmarks using many tiny paths that reach all over the island that you might not have noticed before.</p><p>The music is completely dynamic, made up of many layers, which swell and fall away depending on the game state, including how much energy you have left, which part of the island you're riding on, whether you're behind somebody, and then as Vincenzo leads you into the final section of the course the music is seamlessly replaced with <a href="https://youtu.be/OIH3ytlZfyo?t=158">a much more intense version of the main song,</a> and hearing it makes you feel like you can do <em>anything!</em></p><p>It's important to plan a strategy of when to stick behind to recover and when to use your energy to push ahead, so that you'll be able to eventually pass the race leader. The way the multi-day races are implemented is really interesting - your position from the previous races is carried over, but each rider is released from the start at regular intervals. This means that you still have to pass the same number of people in total, but each day is like a reset for how the riders are distributed over the course, meaning you'll always be able to plan how to get to the next person ahead of you without large gaps between packs forming over the whole event.</p><h2>Conclusion</h2><p>Wii Sports Resort is a very good game with a lot of good sports and a lot of good memories that you can happily play alone or with friends. If you have an old Wii kicking around in your house, why not get the game? It costs $20 to get a second hand game disc, but there's a neat little trick where you can hack your Wii, download the game, and play it for $0. (Though do note: <a href="https://dolphin-emu.org/blog/2019/04/26/mastering-motion/">it will be awful to emulate unless you also have a real Wii Remote</a> due to the way the game interprets the motion inputs from all of the remote's sensors.</p><ul><li><a href="https://cadence.moe/blog/2020-05-16-usb-loader-gx">Wii hacks and USB Loader GX installation guide</a></li><li><a href="https://archive.org/download/wiiusaredump3/Wii%20Sports%20Resort.7z/Wii%20Sports%20Resort%2FRZTE01.wbfs">Direct download Wii Sports Resort, WBFS format, NTSC region from archive.org</a></li><li><a href="https://archive.org/download/Wii-p3-EU-Arquivista/Wii%20Sports%20Resort%20%28EU%29.rvz">Direct download Wii Sports Resort, RVZ format, PAL region from archive.org</a></li><li><a href="https://cadence.moe/blog/2022-05-24-explanation-of-wii-disc-image-formats">Explanation of disc image formats and how to convert them</a></li></ul><p>Seeya! 🚣🏻‍♀️</p><p>— Cadence </p>]]></summary>
        <published>2022-04-16T07:36:36.908Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hacking osu!lazer for fun and fun]]></title>
        <id>https://cadence.moe/blog/2022-04-07-hacking-osu-lazer-for-fun-and-fun</id>
        <link href="https://cadence.moe/blog/2022-04-07-hacking-osu-lazer-for-fun-and-fun"/>
        <updated>2022-04-07T12:53:59.855Z</updated>
        <summary type="html"><![CDATA[<p><a href="gemini://cadence.moe/gemlog/2022-04-07-hacking-osu-lazer-for-fun-and-fun.bliz">You can read this post on Gemini if you want to. The words are identical either way.</a></p><h2>Introduction</h2><div class="gemtext-link"><a href="https://cadence.moe/blog/2020-11-12-osu-mania-is-a-bad-rhythm-game">(This isn't about the osu!mania game mode. For my frustrations with the mechanics of mania, see here.)</a></div><p class="gemtext-paragraph">The circles mode in osu! is a somewhat fun game. I want to play it casually from time to time, and enjoy myself, without taking it seriously. But the game has always fought back against me whenever I've tried to play it more. The life bar is strangely aggressive on some songs and the scoring system places a huge amount of emphasis on combo, to the point where accidentally missing a single note will make your score worthless, no matter what else happened in that attempt.</p><p class="gemtext-paragraph">Something I love to do in rhythm games is improve upon my past scores, but the combo system makes this difficult and frustrating. &quot;Improving&quot; in the circles mode of osu! means &quot;getting lucky and not missing for longer chains&quot;. Some people may find satisfaction in playing easier songs and striving for a full combo, but I find it much more fun to play more difficult and intense songs and try to get a certain % score on them.</p><p class="gemtext-paragraph">The closed-source nature of the original game means that its scoring system is set in stone. Without providing me an avenue to change the numbers to be more friendly and fun for my way of playing, I would always give up and stop playing after only a few days. In the past I attempted to modify opsu!, which is an open-source Java clone of osu!, to calculate scores differently, but I got lost in the code and wasn't able to accomplish my goal.</p><p class="gemtext-paragraph">osu!lazer is open-source and provides easy avenues to modify the gameplay and scoring system to match the way that I want to play. Here I describe what I changed, and how I did it, to document my work and provide help for anybody else who wants to do similar things.</p><p class="gemtext-paragraph">As far as I know, local builds of the game cannot submit plays for online scoring or pp gains. If this is incorrect, and it's possible to submit plays on local builds, please let me know, because I'd be interested in doing that!</p><p class="gemtext-paragraph">Local builds can still log in and use online features like in-game beatmap downloading.</p><p class="gemtext-paragraph">The rest of this post will be a technically-oriented tutorial. Not all the sections may be relevant to you, so feel free to skip around.</p><h2>My system</h2><p class="gemtext-paragraph">I'm using Fedora Silverblue 36 (Kinoite branch) which has the additional challenge that the operating system is immutable and installing system packages is discouraged. Silverblue provides several container systems to help install packages, and we'll be using those to build osu!. If you're not on Silverblue, you can just use your system package manager and ignore the things I wrote about containers.</p><h2>.NET</h2><p class="gemtext-paragraph">osu!lazer is based on .NET 6.0. We need the .NET 6.0 SDK to build it.</p><p class="gemtext-paragraph">.NET is designed so that there is an SDK, which is used to build the application, and a runtime, which is used to run the application. .NET applications don't compile to native code, so whenever anybody needs to run a .NET application, they need the runtime installed on their system. Since this is just for personal use, normally this wouldn't matter. You could install the SDK (which includes the runtime) and you'd be fine.</p><p class="gemtext-paragraph">There's a catch. The container software we're going to use, called Toolbox, is supposed to support X and Wayland forwarding so you can run graphical applications inside the container and they will Just Work. osu! doesn't seem to recognise this, and won't start inside the container. This means you need to build it in the container and then run it on bare metal (i.e. outside of the container). The challenge is that in order to run a .NET application on bare metal you need the runtime installed on bare metal. We're going to work around this requirement for the runtime, but more on that later. For now let's just set up the container and build the lazer source code.</p><h2>Microsoft is Microsoft</h2><p class="gemtext-paragraph">Oh, of course. .NET has telemetry in it. It can be disabled with an environment variable. If you want to disable the telemetry, you should set this enviroment variable now before you install .NET. You just need to change DOTNET_CLI_TELEMETRY_OPTOUT to 1.</p><p class="gemtext-paragraph">In fish shell, you can set the environment variable like this:</p><pre class="outline-pre">set -x DOTNET_CLI_TELEMETRY_OPTOUT 1</pre><p class="gemtext-paragraph">You can add this line to ~/.config/fish/config.fish to make it automatically apply when you open a shell.</p><p class="gemtext-paragraph">In bash, you can set it like this:</p><pre class="outline-pre">export DOTNET_CLI_TELEMETRY_OPTOUT=1</pre><p class="gemtext-paragraph">You can add this to your bash startup file to make it automatically apply when you open a shell.</p><p class="gemtext-paragraph">Once it's in your startup file, if you want to make sure that nothing leaks, it would be safest to log out and back in again to make sure you don't have any old terminals hanging around which could be missing the new setting.</p><h2>Setting up the container</h2><p class="gemtext-paragraph">The first step is to download the osu! source code. Git is available on the default installation, so we'll just clone the repo now.</p><pre class="outline-pre">cadence@ribbon ~/Software&gt; git clone https://github.com/ppy/osu/
cadence@ribbon ~/Software&gt; cd osu
cadence@ribbon ~/S/osu&gt;</pre><p class="gemtext-paragraph">As mentioned, we're going to use the &quot;toolbox&quot; container system, and it's easiest to start from scratch with a brand new toolbox rather than going with your existing one. I'll use the name &quot;lazer&quot; for the container, so that name will appear in my prompt line. You can use whatever name you want.</p><pre class="outline-pre">cadence@ribbon ~/S/osu&gt; toolbox create lazer
cadence@ribbon ~/S/osu&gt; toolbox enter lazer
⬢ cadence@lazer ~/S/osu&gt;</pre><p class="gemtext-paragraph">As mentioned, we need the .NET sdk, so install that. osu!lazer (at time of writing) specifically needs version 6.0, which is the latest version.</p><pre class="outline-pre">⬢ cadence@lazer ~/S/osu&gt; sudo dnf install dotnet-sdk-6.0</pre><p class="gemtext-paragraph">Checkout a past release of lazer. We should use a known-good commit to make sure the build actually works in our environment, before we try editing the source code.</p><pre class="outline-pre">⬢ cadence@lazer ~/S/osu&gt; git checkout 2022.405.0</pre><p class="gemtext-paragraph">(If you're reading this in the far future, you might want to try checking out a more modern release. I don't know.) If this is the case, you can see a list of available releases with:</p><pre class="outline-pre">⬢ cadence@lazer ~/S/osu&gt; git tag</pre><p class="gemtext-paragraph">That's basically all the setup, and now we can make a build.</p><h2>Building the code</h2><pre class="outline-pre">⬢ cadence@lazer ~/S/osu&gt; dotnet build osu.Desktop -c Release</pre><p class="gemtext-paragraph">This will take a while and download some packages. Eventually, you should see &quot;0 Errors&quot;.</p><p class="gemtext-paragraph">If you get a message like:</p><p class="gemtext-paragraph">	The .NET SDK has newer analyzers with version '6.0.0' than what version '5.0.3' of 'Microsoft.CodeAnalysis.NetAnalyzers' package provides. Update or remove this package reference.</p><p class="gemtext-paragraph">If this appears, the nuget cache is for an old .NET version, and you should clear the cache. You can do this with:</p><pre class="outline-pre">⬢ cadence@lazer ~/S/osu&gt; dotnet nuget locals all --clear</pre><p class="gemtext-paragraph">If you're not using Silverblue, then .NET is available system-wide. You can now grab headphones and run osu!lazer with:</p><pre class="outline-pre">cadence@ribbon ~/S/osu&gt; dotnet run --project osu.Desktop -c Release</pre><p class="gemtext-paragraph">Otherwise, for Silverblue, you have to publish the project as a &quot;self-contained&quot; directory, which allows it to be run without the .NET runtime. This is what I was referring to at the start. This trick means that after it's built, we can just run it normally on bare metal.</p><pre class="outline-pre">⬢ cadence@lazer ~/S/osu&gt; dotnet publish osu.Desktop -c Release -r linux-x64 --self-contained</pre><p class="gemtext-paragraph">This puts an executable file in &lt;the osu code directory&gt;/osu.Desktop/bin/Release/net6.0/linux-x64/osu! which can be executed on bare metal to run the game.</p><h2>Making changes</h2><p class="gemtext-paragraph">You should git checkout master now so that you have the latest code. Cool! Go change stuff in the source code!</p><p class="gemtext-paragraph">If you'd like to apply my scoring changes, here they are:</p><h3>Set score portion balance to 0.9 accuracy 0.1 combo</h3><div class="gemtext-link"><a href="/static/documents/0001-Set-score-portion-balance-to-0.9-accuracy-0.1-combo.patch">0001-Set-score-portion-balance-to-0.9-accuracy-0.1-combo.patch</a></div><p class="gemtext-paragraph">osu.Game/Rulesets/Scoring/ScoreProcessor.cs | 4 ++--
1 file changed, 2 insertions(+), 2 deletions(-)</p><p class="gemtext-paragraph">This patch makes accuracy give 90% of the score and combo give 10% of the score. In the default game, this is balanced to 70% combo and 30% accuracy. You can change these numbers to whatever you want.</p><h3>Set SpunOut mod to 1.0x score</h3><div class="gemtext-link"><a href="/static/documents/0001-Set-SpunOut-mod-to-1.0x-score.patch">0001-Set-SpunOut-mod-to-1.0x-score.patch</a></div><p class="gemtext-paragraph">osu.Game.Rulesets.Osu/Mods/OsuModSpunOut.cs | 2 +-
1 file changed, 1 insertion(+), 1 deletion(-)</p><p class="gemtext-paragraph">This is an accessibility thing. I play with a laptop with a touchscreen, and spinning is really tough for me on that touchscreen. The SpunOut mod doesn't even spin very fast, and can even fail very short spinners, so for these reasons changing the mod score multiplier to 1.0x makes sense.</p><h3>Set NoFail mod to 1.0x score</h3><div class="gemtext-link"><a href="/static/documents/0001-Set-NoFail-mod-to-1.0x-score.patch">0001-Set-NoFail-mod-to-1.0x-score.patch</a></div><p class="gemtext-paragraph">osu.Game/Rulesets/Mods/ModNoFail.cs | 2 +-
1 file changed, 1 insertion(+), 1 deletion(-)</p><p class="gemtext-paragraph">Why shouldn't I?</p><h2>Building the game again with your changes</h2><p class="gemtext-paragraph">If you installed the .NET runtime system-wide:</p><pre class="outline-pre">cadence@ribbon ~/S/osu&gt; dotnet run --project osu.Desktop -c Release</pre><p class="gemtext-paragraph">This will build your new changes and then start the game directly.</p><p class="gemtext-paragraph">Self-contained for Silverblue:</p><pre class="outline-pre">⬢ cadence@lazer ~/S/osu&gt; dotnet publish osu.Desktop -c Release -r linux-x64 --self-contained</pre><p class="gemtext-paragraph">This will build your changes and make a new executable. You can start the game on bare metal as before.</p><h2>That's it!</h2><p class="gemtext-paragraph">That's all for today. Go forth and edit your favourite games to be more fun for your brain!! ^▼^</p><p class="gemtext-paragraph">Cadence</p>]]></summary>
        <published>2022-04-07T12:53:59.855Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Planning a hardware keyboard layout remapper]]></title>
        <id>https://cadence.moe/blog/2022-03-03-planning-a-hardware-keyboard-layout-remapper-part-1</id>
        <link href="https://cadence.moe/blog/2022-03-03-planning-a-hardware-keyboard-layout-remapper-part-1"/>
        <updated>2022-03-03T12:59:57.460Z</updated>
        <summary type="html"><![CDATA[<p><a href="gemini://cadence.moe/gemlog/2022-03-03-planning-a-hardware-keyboard-layout-remapper-part-1.bliz">You can read this post on Gemini if you want to. The words are identical either way.</a></p><p class="gemtext-paragraph">I use the Workman keyboard layout, and I've written about that in blog posts in the past. It's lovely for my personal use, but since I haven't used Qwerty consistently in more than 18 months, I have forgotten how to type on it. This makes it much less convenient if I need to type more than a few words on somebody else's computer, or a managed system that I can't install the layout on. Lugging my own keyboard around with me won't do any good, because the keyboard layout is managed in software, not hardware.</p><p class="gemtext-paragraph">For a while I've been thinking about a hardware device that I can carry around with me, that I can plug a keyboard into, and then plug the device into the USB port of a computer. The device would pretend to be a keyboard, and keys typed on the real keyboard would be remapped by the hardware, allowing me to take my layout anywhere without needing to configure any software on the target computer.</p><p class="gemtext-paragraph">For example, when I press the key T (or where the key T should be on the keyboard), the hardware device will intercept and read this keystroke, figure out which letter it is based on the Workman layout, find where that letter would be on the Qwerty layout, and send the Qwerty key position to the target computer.</p><h2>Has somebody already made this?</h2><p class="gemtext-paragraph">As far as I can tell, no. But if somebody has, pleasepleaseplease let me know since it would save me a lot of work reading about USB technicalities and figuring out which hardware will actually work, since I can use the same hardware that they used!</p><h2>A detour: USB modes</h2><p class="gemtext-paragraph">Whatever hardware I use, the key factor of whether it's usable is whether it has USB support. The device needs to accept USB keyboard input and provide USB keyboard output. If it can do that, then writing the code to connect the two is probably the easy part.</p><p class="gemtext-paragraph">The USB protocol is complex. I can't build a keyboard layout remapper using just electronic components; I'll have to use some kind of microcomputer or microcontroller. In particular I'll be investigating the Raspberry Pi microcomputer and the Arduino microcontroller.</p><p class="gemtext-paragraph">Finally, USB can operate in either -host mode- or in -otg mode-. When a computer uses host mode, you can connect peripherals to it. When it uses otg mode, you can connect it as a peripheral to something else. In my case, I need to have one USB port in host mode and a different USB port in otg mode. I cannot use a hub to mix types.</p><p class="gemtext-paragraph">I'm not 100% sure, but I think USB type C may be able to be configured as either type. However I do still need to connect it to USB type A stuff in both directions.</p><h2>Can I use a Raspberry Pi?</h2><p class="gemtext-paragraph">A Raspberry Pi is a Linux computer, so all models of it absolutely supports USB peripherals (host mode). I already own a few of the Raspberry Pi models. However, only some models support otg mode.</p><p class="gemtext-paragraph">The Raspberry Pi Zero has one USB data port which can be configured to either otg mode or host mode at boot time. This isn't suitable for me since I need to connect 2 cables at the same time. (Though, if I were using a physical bluetooth keyboard for this project, then I could run the Pi in otg mode and connect the keyboard through bluetooth and this would work.)</p><p class="gemtext-paragraph">As far as I can tell, all USB hubs sold for the Pi Zero actually jack in to the otg port, they don't create new USB ports. So you can't use this and otg mode at the same time.</p><p class="gemtext-paragraph">The Raspberry Pi model A and its siblings also support otg mode. Like the Zero, they only have one port, so they're not suitable for me.</p><p class="gemtext-paragraph">The Raspberry Pi model 4 B has 4 type-A USB ports which can only be used in host mode, and also 1 USB type C port which is normally used for power input which can additionally be configured to otg mode. If the Pi's power draw is acceptable, then this would work for my project!</p><p class="gemtext-paragraph">However, due to a global chip shortage, it's literally impossible for me to get a Pi 4.</p><p class="gemtext-paragraph">A Raspberry Pi would probably take about 15 seconds to start up, which isn't totally ideal, but would be good enough for this project.</p><h2>Can I use an Arduino?</h2><p class="gemtext-paragraph">The Arduino connects to a computer using its USB type B port, acting as a peripheral (like otg mode). So we just need a way to make it also act as a host.</p><p class="gemtext-paragraph">There *appear* to be USB host shields (a shield is the Arduino name for a hardware expansion). Whether they actually work, or work well, I do not know. It seems easier to obtain these than it is to obtain a Raspberry Pi 4.</p><p class="gemtext-paragraph">I already have an Arduino Uno, and I think it's currently possible to purchase an Arduino if I need a different model. I do not understand the ecosystem or the different models.</p><h2>Can I use a Teensy microcontroller?</h2><p class="gemtext-paragraph">When making a totally custom keyboard, James Stanley used a Teensy as the microcontroller, connecting switches to its digital inputs and sending the output through the micro USB cable (otg mode) using QMK as the firmware.</p><p class="gemtext-paragraph">The PJRC store sells a &quot;USB Host Cable&quot; for the Teensy board, the connections on which are exactly what I'm looking for. It says that it allowed connecting a USB device to the Teensy, and that the &quot;Teensy 4.0 has USB host capability on bottom-side pads&quot;. So, if I understand everything correctly, I believe that I can use this host cable and the regular socket on the Teensy at the same time.</p><p class="gemtext-paragraph">I have no idea whether these assumptions are correct, though. If I decide to acquire a Teensy I'll do some emailing first to make sure I can use both cables at the same time.</p><h2>So what next?</h2><p class="gemtext-paragraph">I'm planning to visit my parents to pick up my old electronics stuff, most notably my Arduino Uno, and see if I can get it to send a fixed sequence of keys to the computer. If I can do this, then I'll start browsing for a USB host shield that looks suitable, and that should be the difficult part of this project all done!</p><p class="gemtext-paragraph">If I'm successful at making the hardware remapper I'll likely try to design a pretty wooden or acrylic box to put things in. I don't have access to a 3D printer, so I'll have to use woodworking tools or off-the-shelf acrylic boxes.</p><p class="gemtext-paragraph">If this gets any further through the planning phase then I'll make a follow-up post. See you then!</p><h2>References</h2><div class="gemtext-link"><a href="https://github.com/c4software/pi-as-keyboard">Using a Pi as a keyboard when otg mode works (GitHub project)</a></div><div class="gemtext-link"><a href="https://raspberrypi.stackexchange.com/questions/71613/how-to-use-raspberry-pi-3-as-a-usb-gadget/73911#73911">Raspberry Pi models that support otg mode (StackExchange)</a></div><div class="gemtext-link"><a href="https://raspberrypi.stackexchange.com/questions/100583/where-is-the-usb2-otg-port-on-the-rpi-4-model-b-located#100585">USB type C otg mode on Raspberry Pi 4 (StackExchange)</a></div><div class="gemtext-link"><a href="https://raspberrypi.stackexchange.com/questions/102294/usb-3-0-otg-on-raspberry-pi-4-usb-gadget#102340">USB otg mode on Raspberry Pi model A (StackExchange)</a></div><div class="gemtext-link"><a href="https://dev.webonomic.nl/4-ways-to-connect-your-raspberry-pi-4-to-the-internet">More about USB otg on a Pi (company blog)</a></div><div class="gemtext-link"><a href="https://www.jeffgeerling.com/blog/2022/its-dire-raspberry-pi-availability-tracker-launched">The global chip shortage (personal blog)</a></div><div class="gemtext-link"><a href="https://www.okdo.com/project/arduino-hid/?ok_ts=1646311195859">Making an Arduino Human Interface Device (ecommerce website)</a></div><div class="gemtext-link"><a href="https://github.com/NicoHood/HID/wiki/">Library for enhanced HID functions (GitHub project with wiki)</a></div><div class="gemtext-link"><a href="https://arduino.stackexchange.com/questions/30931/using-arduino-as-keylogger">Using Arduino as keylogger (StackExchange)</a></div><div class="gemtext-link"><a href="https://hardwarefun.com/tutorials/using-usb-host-shield-with-arduino">USB Host Shield with Arduino (personal blog?)</a></div><div class="gemtext-link"><a href="https://www.elecrow.com/wiki/index.php?title=USB_Host_Shield_for_Arduino">USB Host Shield for Arduino (wiki hosted by an ecommerce website)</a></div><div class="gemtext-link"><a href="https://incoherency.co.uk/blog/stories/jesboard.html">James Stanley's keyboard</a></div><div class="gemtext-link"><a href="https://www.pjrc.com/store/teensy41.html">Teensy 4.1 board (ecommerce website)</a></div><div class="gemtext-link"><a href="https://www.pjrc.com/store/cable_usb_host_t36.html">USB Host Cable for Teensy 4.1 (ecommerce website)</a></div>]]></summary>
        <published>2022-03-03T12:59:57.460Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Keeping my feet warm in bed]]></title>
        <id>https://cadence.moe/blog/2022-03-02-keeping-my-feet-warm-in-bed</id>
        <link href="https://cadence.moe/blog/2022-03-02-keeping-my-feet-warm-in-bed"/>
        <updated>2022-03-02T13:00:14.955Z</updated>
        <summary type="html"><![CDATA[<p><a href="gemini://cadence.moe/gemlog/2022-03-02-keeping-my-feet-warm-in-bed.bliz">You can read this post on Gemini if you want to. The words are identical either way.</a></p><p class="gemtext-paragraph">This will be a fairly short post. I wanted to describe techniques that work for me. This is based on no scientific knowledge whatsoever. Warm your feet at your own risk.</p><h2>Why are my feet cold in the first place?</h2><p class="gemtext-paragraph">If I put my feet, which are already cold, into a cold place, then they will stay cold. I think this is because my body knows that they're cold and tries to redirect blood away from them, so that my body doesn't continue to lose internal heat to the cold place.</p><p class="gemtext-paragraph">If my feet are already warm, and I put them into a place that is too cold, the heat will be sucked out of them, and it'll be the same situation as before.</p><p class="gemtext-paragraph">The difference is when my feet are warm, and I put them into a warm place. The heat of my feet is able to maintain the temperature of that place, and my feet and my blankets then live in a happy symbiotic relationship of warmth for the rest of the night.</p><p class="gemtext-paragraph">(As I said, this probably isn't scientific at all.)</p><p class="gemtext-paragraph">My conclusion is that I need to make a warm place to put my feet in.</p><h2>Um... Wear socks, Cadence?</h2><p class="gemtext-paragraph">What I said above remains true whether I wear socks or not. I do think socks help a bit, but I've had good results with and without them. I don't think they're the most important factor.</p><p class="gemtext-paragraph">I think that the most important factor is whether the foot area is already warm before I put my feet in it.</p><h2>So how do I make the foot area warm?</h2><p class="gemtext-paragraph">Your feet are too small to heat the area initially, which is why they get cold if you put them into a cold space. But a body part that is warm and large, like your legs or your butt, should be successful at initially warming the foot zone.</p><p class="gemtext-paragraph">Here's what I do:</p><p class="gemtext-paragraph">Before I lie down in bed, I pull back the covers and sit down on the area where my feet would go for 15-20 seconds, pulling the inside of the duvet up around my back. I find that this short period of time is enough to make the sheets and duvet comfortably warm. Then, if I lie down and put my feet into that warmed space, they never get cold again for the rest of the night.</p><p class="gemtext-paragraph">If you find that cold air is getting in the foot end of your sheets and ruining the igloo, my final technique is to tuck the end of the duvet underneath your legs, so that your legs are surrounded on all sides and the warm air can't escape. This may require either a long duvet or a short body. If you're stuck, you could get a separate blanket to use to wrap that place.</p><p class="gemtext-paragraph">Hurrah!</p><p class="gemtext-paragraph">— Cadence</p>]]></summary>
        <published>2022-03-02T13:00:14.955Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[What goes into my writing?]]></title>
        <id>https://cadence.moe/blog/2022-02-08-what-goes-into-my-writing</id>
        <link href="https://cadence.moe/blog/2022-02-08-what-goes-into-my-writing"/>
        <updated>2022-02-08T12:12:40.260Z</updated>
        <summary type="html"><![CDATA[<p style="margin: 0 1.2em; font-style: italic"><a href="gemini://cadence.moe/gemlog/2022-02-08-what-goes-into-my-writing.bliz">This post is also available on Gemini.</a> The HTML version you're reading right now is specially crafted with some cute text effects, though, so there's no need to switch protocols unless you really want to.</p><h2>Why I'm writing this</h2><p>I received an awesome email last week from somebody who was struggling with writing their own blog posts. They had identified challenges they wanted to overcome, and they asked for advice on if I'd dealt with those challenges myself.</p><p>I really appreciate that they reached out! I started thinking about how I should compose my reply, and then realised that other people might find my words useful too, which is why I ended up publishing this post! (Fun fact: This was the third paragraph of the post I wrote, and I wrote it in past text.)</p><h2>Who are you writing for?</h2><p>There are many ways to divide and categorise kinds of writing. One possible division you could make is between writing that's private and writing that's to be shared.</p><p>The word blog is derived from "web log" - a log that's on the web. The medium of a blog post implies that your words will be shared with others in some form.</p><p>It doesn't necessarily mean that you're writing <em>for</em> others. Artemis offered me an interesting perspective on this. Despite their blog being readable by anyone, they are the person writing, and the writing is explicitly for them.</p><p><a href="https://artemis.sh/2021/08/09/why-i-dont-use-analytics.html">why i don't use analytics - artemis everfree</a></p><p>Well, I sort of lied: the division of whether your words are for yourself or for others isn't actually a binary. You can compose your writing in several ways that make it more for yourself, or more for others, or even a bit of both.</p><p>If you're writing with others in mind, you might wish to make adjustments in the language you use in order to explain some concepts better for the readers who aren't in the in-group. If you're writing from your heart for yourself, and publishing your words as an afterthought, you might adjust for this by using a pen name and not providing a way for readers to respond. You can do these things to different degrees. For example, a blog where you talk about difficulties you had styling your website could be filled with jargon that only makes sense to you, or you could explain some of the contexts and reasoning behind your styles, or you could write it as a full tutorial for beginners.</p><p>All of these writing styles are totally okay! Before you start writing, though, you should think about who your audience is this time, and to what degree your post is for them, and choose your words and style based on this.</p><h2>Why do I write for myself?</h2><p>I write for myself because I find that processing, organising, and structuring my thoughts into prose means that my ideas arrange themselves in my mind better, and I have a fixed reference that I can look at later if I want to.</p><p>You can that I was writing primarily for myself in my very first blog post.</p><p><a href="https://cadence.moe/blog/2020-03-13-hello-blog">2020-03-13: Hello blog!</a></p><p>I also write because it's fun, provided I treat myself well enough while writing. See the section on "fun" further down.</p><h2>Why do I write for others?</h2><p>I began writing for others because I realised that other people might find my words useful too.</p><p>Before I made my blog, I found that I was talking to my friends in chatrooms about the things I'd been doing, and I really enjoyed sharing my life in this way. But my friends are split into several chatrooms, so I'd have to share my thoughts in all of them if I didn't want anybody to be missed out. Some of my friends aren't in any chatrooms, we just have direct messages.</p><p>I realised that if I organised my thoughts into a structured post, I could send the post link to all of my friends, plus anyone else I wanted who might be interested in the ideas of a specific post, without needing to repeat myself! And we could still talk about the things after I shared my link.</p><p>It does make things feel a tiny bit impersonal and parasocial, though... I'm not sure what to do about that. I wonder if there's a better medium for this purpose. I'm not sure.</p><p>Here's an example of I post that I wrote because I wanted other people to read it, because I was really really mad about something and needed to vent.</p><p><a href="https://cadence.moe/blog/2020-06-13-icons-suck">2020-06-13: Icons suck</a></p><p>Regardless, I still enjoy sharing my ideas with the wider world, and people have told me of the positive impacts or new directions my words have had on them! That's <em>so cool.</em> Thank you all. I love you so much.</p><h2>Passion</h2><p>The most important thing about writing, whether it's for yourself or for others, is the message that you convey.</p><p>Something that the modern web seems to have forgotten is that they need to actually write something of value under the layers of presentation. It's about writing! This is why I consistently enjoy reading personal and indie blog posts. They are always about something meaningful rather than trying to entice readers based on the value of their mouse click. This is a low bar to clear - you can be assured that anything that <em>you</em> write online <em>will</em> have value. :)</p><p>That's what I'd consider to be the core of a "good" post - something that is at least a little meaningful to <em>you.</em> (This is "writing for yourself".)</p><p>And yet you'll find that, most likely, other people will find your words meaningful too. If whatever the topic is is interesting enough that you managed to compose and publish a page about it, then in my experience, it'll be interesting enough for other people to read.</p><p>For example, I don't know anything about motorcycles and I'm ordinarily not excited by them. When I stumble upon somebody online who's excited by motorcycles and talks about them, in a manner that's accessible enough for me to understand with little knowledge of the subject (this is "writing for others"), I really enjoy reading their story. It expands my perspective on the world, I learn new things, and I genuinely find it fun to read from people who are passionate about their topic.</p><p>Please don't be worried about trying to make a "good" post! You can write for yourself, about something you're passionate about, and that <em>is</em> a "good" post. I promise you that if you enjoyed writing it, other people will enjoy reading it too.</p><p>And if you enjoyed writing it... well, isn't that good in its own right?</p><h2>But what if my post is bad? aka, self-confidence</h2><p>If you're writing for other people, it can be very tempting to think that your words are not interesting and that other people do not want to read them. Those beliefs are totally false.</p><p><strong class="fun-highlight">Your thoughts are good, your words are good, and I would love to read about them!</strong></p><p><strong class="fun-highlight">If you write just for youself, you're totally valid too!</strong></p><p><strong class="fun-highlight">These statements are true.</strong></p><p>I think that the reason that I'm not afraid is, well, that it's not scary even if it did happen.</p><p>By making the act of writing itself <span class="fun-highlight">fun,</span> it means that I'm not bothered if people don't like my post. I have no way to know what people think of my words unless they contact me and let me know (that's why receiving emails about my posts is always so welcome).</p><p>If somebody reads my post, doesn't like it, and clicks away, that idea doesn't matter to me because I'll never know about it. I still received personal enjoyment from the act of writing. This is why I think it is important that, no matter what, you should take steps to ensure that you do enjoy writing.</p><p>And as I say, if you write something you're passionate about, and you enjoyed writing it, then I bet other people will enjoy reading it as well.</p><h2>Making the writing itself fun</h2><p>Writing can take a long time. It's important to enjoy that process for the sake of it! If you have a keyboard that feels nice to press, and an application that you enjoy writing words into, then that's an excellent start!</p><p>The tactile part of writing, feeling my fingers hit the keys, watching each letter appear on screen, is satisfying to me in its own right.  If by the end of a paragraph I don't like how the letters are arranged into words and the words are arranged into sentences, it still never feels like a total waste of time because I enjoyed pressing buttons.</p><p>I'll let you in on a secret. I barely proofread my posts. By the time I reach the end and have written out all the sections, my brain is exhausted and I never want to take the time to go back through my own words. I don't find proofreading to be a fun part of writing! So I mostly ignore it and don't do it. And I believe that's okay. (Although I did get a second pair of eyes for this particular post, and they suggested improvements to a couple of the sentences.)</p><p>There are a few posts I've started writing that have just been left in the drafts folder before I managed to finish or publish them. I'm not upset by this; I still appreciate the value of those drafts and I don't see them as hindrances or failures. I enjoyed the tactile part of writing my words, and the ideas that I did manage to write about are now more organised in my own head. I can also see these drafts as opportunities that I may be able to finish in the future!</p><blockquote>...and an application that you enjoy writing words into...</blockquote><p>I personally love to write my blog posts in Textreme 2, a really pretty writing application. It's silly and childish and it's <em class="fun-highlight">fun.</em> Textreme 2 legitimately is half the reason I'm able to write so much, because it makes it more enjoyable for me.</p><p><a href="https://ash-k.itch.io/textreme-2">Textreme 2</a></p><p>(If you think it would help you too, and you're not able to afford a copy, let me know and I might be able to buy it for you!)</p><p>Another way to make the writing process more exciting is to play media around you. I find that videos distract me too much away from my words, but I really like putting on music to listen to. I don't often listen to music while I work, so it's a nice and motivating change.</p><h2>Go write something!</h2><p>Start with a small idea. Figure out roughly how many paragraphs you'd like to write. If your topic would benefit from being structured, put down some headings of the key points you want to mention. Then start filling in the gaps.</p><p>An idea being small does it not make it worse. It will likely make the writing process more enjoyable for you, especially if you can start and finish in a single session.</p><p style="color: #5fea95; white-space: pre-line; margin-left: 1.2em">If you enjoyed the writing process,
then that's good writing
because it was good for you.
</p><p>If you end up writing more or fewer paragraphs than you'd originally planned to, that's not a problem at all. This very post ended up being far, far longer than I expected! And I'm glad about that, because it means that I got to properly explain my thoughts on all the sections I had planned, and hopefully my brain didn't get lost too far down the river.</p><p>If I had written fewer words than I had expected, or I found myself unable to fill in some of the section headers, that's okay too. I would be proud of myself for the things I did write, because they are still valuable, and writing them has benefited myself as well as, I hope, any readers.</p><h2>and so,</h2><p>If you publish a piece of writing after you read my article, send me the link! I will read your article and I will almost certainly like it :)</p><p>I may possibly write a couple of sequels to this post.</p><ul><li>Where do my blog posts go? (Publishing, website design, being visually appealing, being different, and why gemini...)</li><li>How do I put my posts together? (Ideas, trees, laying out section headings, filling in the gaps...)</li></ul><p>But that's all for now. See you next time!</p><p>— Cadence</p><h2>Postscript</h2><style>.chat-lines {
    display: grid;
    grid-template-columns: auto auto 1fr;
    background-color: #130c1a;
    padding: 20px;
    border-radius: 4px;
}
.chat-lines .name {
    text-align: right;
    margin: 0 10px 0 6px;
}
.chat-lines .time {
    text-align: left;
}
.chat-lines .name.cadence {
    color: rgb(230, 79, 122);
}
.chat-lines .name.quarky {
    color: #6a94f9;
}
.chat-lines .name.cadence + .message {
    color: #eeb1c3;
}
</style><div class="chat-lines"><span class="time">[16:53]</span> <span class="name cadence">cadence:</span> <span class="message">I want to write a blog article with the title "how to improve your seo" and the body text just says "write something interesting rather than relying on artificially pushing your shitty content up the list"</span>
<span class="time">[17:40]</span> <span class="name quarky">quarky:</span> <span class="message">it's funny just how weirdly true this is</span>
<span class="time">[17:41]</span> <span class="name quarky">quarky:</span> <span class="message">I don't exactly have a high-traffic blog but I have somehow swept the google results for "ghidra ssl" and "ghidra ssl certificate" because I wrote one highly niche article about a problem I was having lol</span>
<span class="time">[17:42]</span> <span class="name quarky">quarky:</span> <span class="message">every breathy optimised website talking about how cool the new release is</span>
<span class="time">[17:42]</span> <span class="name quarky">quarky:</span> <span class="message">and the search engine just chews on solid technical writing from a random furry</span></div>]]></summary>
        <published>2022-02-08T12:12:40.260Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Command line computing part 3: IRC tutorial with WeeChat]]></title>
        <id>https://cadence.moe/blog/2022-02-04-command-line-computing-irc-weechat</id>
        <link href="https://cadence.moe/blog/2022-02-04-command-line-computing-irc-weechat"/>
        <updated>2022-02-04T12:33:13.270Z</updated>
        <summary type="html"><![CDATA[<h2>About this page</h2><p class="gemtext-paragraph">This page was originally published via the Gemini protocol. However, I've also made the contents available on this blog if you don't have a Gemini client. The translation you are reading is not perfect. Hopefully it is good enough.</p><div class="gemtext-link"><a href="gemini://cadence.moe/gemlog/2022-02-04-command-line-computing-irc.bliz">Read via Gemini</a></div><h2>A note about formatting</h2><p class="gemtext-paragraph">`backticks` around words indicate the boundaries of code that you should type in. You should not actually type the backticks. You may wish to replace words inside them. For example, if you see the text `/query somenick`, you may wish to enter the following into the chat window:</p><pre class="outline-pre">/query cadence</pre><h2>History of IRC</h2><p class="gemtext-paragraph">It may be interesting to briefly discuss some history.</p><p class="gemtext-paragraph">IRC was created in the late 1980s. It grew throughout 1990 and peaked in the early 2000s. IRC has become a lot less popular in recent times, probably due to people moving to the chat features implemented on many social media platforms.</p><p class="gemtext-paragraph">The available interfaces for IRC are fairly complex to get running at first, which is something I hope to partially ameliorate by writing this page. Despite IRC's loss in popularity, it is still used by enthusiasts, dedicated groups, and people who like old technology. Since you're reading this article about command-line computing, you'll likely be in good company with the people currently on there!</p><p class="gemtext-paragraph">IRC is a great fit for text-mode computing because it is entirely text-based and designed to be operated without a graphical interface. It was created before HTTP and HTML, and has no built-in file uploads.</p><div class="gemtext-link"><a href="https://en.wikipedia.org/wiki/Internet_Relay_Chat#History">Wikipedia has more information about IRC's history.</a></div><h2>IRC jargon</h2><ul><li>channel: a channel is a space for sending messages. people can join channels in order to read and send messages there. channels are managed by people known as channel operators, &quot;chanops&quot;.</li><li>nick: a nick is the nickname that a person connects with and is known by.</li><li>network: a network is what you connect to with your client. each network is operated by a set of people, and contains channels. you can join multiple networks.</li><li>server: a server is more of a technical concern. large networks have many servers to distribute load. connecting to the network will typically assign you a random server, and you can see messages from everyone on the network no matter their server.</li></ul><h2>IRC features</h2><p class="gemtext-paragraph">IRC is text chat.</p><p class="gemtext-paragraph">You get text messages, nicknames, multiple channels, private messages, and basic moderation.</p><p class="gemtext-paragraph">Modern chat applications often include message history, file uploads, user avatars, typing notifications, message formatting, message editing, and voice chat. None of these features are available in IRC.</p><h2>About clients</h2><p class="gemtext-paragraph">IRC is not a proprietary protocol, so many clients have been developed for it for a variety of operating systems and time periods.</p><p class="gemtext-paragraph">It is worth noting that several graphical clients for IRC exist, some more easier to use than others. Kiwi IRC (a webapp) and HexChat (a GTK 2 application) are popular choices.</p><p class="gemtext-paragraph">Some more modern IRC clients try to &quot;fill in the gaps&quot; by working around what they consider to be missing features. For example, IRCCloud makes a persistent connection to the IRC network even after you disconnect, allowing you to access message history when you return. Some clients allow you to upload images to another website, and then post a link to them in the chat. Some clients might automatically render these images in the timeline.</p><p class="gemtext-paragraph">This article is about command-line computing, so I'll be explaining how to connect with the command-line client WeeChat. There are also other command-line clients that some people swear by, including irssi and ircII. Connecting with those is left as an exercise for the reader.</p><h2>Connecting with WeeChat</h2><div class="gemtext-link"><a href="https://weechat.org/files/doc/devel/weechat_quickstart.en.html">This information is summarised from the WeeChat quick start guide.</a></div><p class="gemtext-paragraph">I'll assume you want to connect to the largest network, Libera Chat. If you want to connect to a different network in addition or instead, you should visit that network's website. It will contain the parameters you need in order to connect. The procedure should be very similar no matter the network.</p><p class="gemtext-paragraph">After first opening WeeChat, you will be in the system buffer, where you can run commands. To add the network Libera Chat, use this command:</p><pre class="outline-pre">/server add liberachat irc.libera.chat/6697 -ssl</pre><p class="gemtext-paragraph">In this command, `liberachat` is a local alias for the network, `irc.libera.chat` is the network's address, and `6697` is the port. `-ssl` specifies to connect with SSL - you will always want to do this.</p><p class="gemtext-paragraph">Now you can set connection options like your nickname. Use this command to set options:</p><pre class="outline-pre">/fset server_default</pre><p class="gemtext-paragraph">(The options you set here will apply to all networks. To set options for a specific network, use /fset liberachat, or whatever alias you gave that network previously.)</p><p class="gemtext-paragraph">First, set the nicks. The nick is the display name you will have. Only one person can have a nickname at any given time, so pick something unusual.</p><p class="gemtext-paragraph">To set it, scroll to the entry that ends with `.nicks`, press Alt-Return, and enter the replacement value. Press Return to confirm.</p><p class="gemtext-paragraph">Then set your username. This field will rarely be displayed and doesn't have to be unique. Set it to be the same as your preferred nickname.</p><p class="gemtext-paragraph">Then set your realname. It's called realname for historical reasons - you *could* put your real life name there, but most people use the field either as a joke or to display pronouns. This is also rarely displayed.</p><p class="gemtext-paragraph">If you don't know what sasl_username or sasl_password are, you don't need to fill them in. If you do know what they are and you have already registered, now is the chance to enter them!</p><p class="gemtext-paragraph">Press q, Return, to exit fset mode.</p><p class="gemtext-paragraph">Type /save to ensure your settings are saved.</p><p class="gemtext-paragraph">Now you can connect. Type /connect liberachat and see what happens.</p><p class="gemtext-paragraph">(If you get stuck, you may wish to check WeeChat's quick start guide and Libera Chat's guides. If you email me to tell me what the problem was, I can add information about it to this guide too.)</p><h2>Basic WeeChat usage</h2><h3>Joining a channel</h3><p class="gemtext-paragraph">It's no fun being alone. Type `/join #channelname` to join some channel on the network if you know its name.</p><h3>Finding channels</h3><p class="gemtext-paragraph">You can search on the internet for topics you're interested in, or you can find channels on the network that contain a certain name using `/list -re .*help.*` (replace &quot;help&quot; with the term you want to search for).</p><h3>Switching channels</h3><p class="gemtext-paragraph">The left side of the screen is the list of channel you're joined to (WeeChat also calls them &quot;buffers&quot;). The current one you're in is highlighted. To change channel, hold Alt and press the number (for channels numbered 1-10), or press Alt-J and two numbers (for channels numbered 11-99). You can also use F5/F6 to move up and down the list one at a time.</p><p class="gemtext-paragraph">Channels with activity or highlights will be marked in a different colour. You can switch to the next highlighted channel with the shortcut Alt-A.</p><h3>Scrolling</h3><p class="gemtext-paragraph">F1/F2 scroll the channel list. F9/F10 scroll the channel topic. F11/F12 scroll the nicks list on the right side of the screen.</p><h3>Running commands</h3><p class="gemtext-paragraph">You can run commands from any screen, but if they have output, the output will always be sent to the &quot;server buffer&quot;. This buffer is always at the top of the channel list, and you can change to it by pressing Alt-1.</p><h3>Helpful IRC commands</h3><p class="gemtext-paragraph">Without a user interface, IRC interactions are triggered using /slash commands. You can get a command list with /help, and help about a specific command with /help commandname.</p><ul><li>join a room: /join #someroom</li><li>leave the room you're looking at: /part</li><li>list rooms (caution: there are a lot): /list</li><li>open a private message: /query somenick</li><li>see the channel topic: /topic</li><li>kick a user (you must be an op): /kick somenick reason...</li><li>ban a user (you must be an op): /ban somenick reason...</li></ul><h2>Strange things to know about on IRC</h2><h3>What are the mode letters?</h3><p class="gemtext-paragraph">Mode letters indicate the status, privileges, or lack of, of a user or channel. The modes are set by the network, and may be edited by commands. The mode letters and their meanings are different on each network, so you should check your network's documentation.</p><p class="gemtext-paragraph">For example, here are Libera Chat's mode lists:
https://libera.chat/guides/usermodes
https://libera.chat/guides/channelmodes</p><h3>What is NickServ?</h3><p class="gemtext-paragraph">NickServ is a bot account, operated by the network you connect to, that acts as a gatekeeper for authentication. As you have already noticed, you can connect to an IRC server under any nick with no sign-up or login. If somebody disconnects you can connect with their nick to impersonate them, which is obviously an issue! NickServ allows people to &quot;register&quot; their nicknames (akin to signing up for a website) which means a password is required to connect with that nickname in future (akin to logging in).</p><p class="gemtext-paragraph">In the past, you used to /msg your password to NickServ directly to authenticate. This process can be automated by every IRC client. Nowadays, authentication is done at the same moment you connecting using a method called SASL.</p><h3>What is ChanServ?</h3><p class="gemtext-paragraph">This is another network-operated bot that restores the permissions of chanops if they disconnect and reconnect. It generally works automatically and you don't need to worry about it.</p><h2>Registering your nick</h2><p class="gemtext-paragraph">As mentioned just above in the NickServ section, registering your nick stops other people impersonating you on the network, so while it's not necessary, it's a great idea if you are a frequent participant on IRC!</p><p class="gemtext-paragraph">To register your nickname, start a private message with NickServ using the command /query NickServ. You can now send the word &quot;register&quot; to NickServ and it will tell you what to do next.</p><p class="gemtext-paragraph">After registering, you'll need to specify the password when reconnecting. Here's how:</p><p class="gemtext-paragraph">(The following directions will store your password in plain text. If you want to store it securely, read the quick start guide in detail: https://weechat.org/files/doc/devel/weechat_quickstart.en.html#irc_server_options)</p><p class="gemtext-paragraph">Open the settings for your network with /fset liberachat</p><p class="gemtext-paragraph">Find the options for SASL. SASL is for authentication.</p><p class="gemtext-paragraph">Add your username and password to the configuration.</p><h2>A helpful WeeChat plugin</h2><p class="gemtext-paragraph">If you have many channels, you may find the &quot;go.py&quot; plugin useful. You can install it by typing `/script install go.py`.</p><p class="gemtext-paragraph">It can be activated with the hotkey Alt-G. You can now type the name of a channel to quickly switch to it.</p><p class="gemtext-paragraph">There are many many plugins available, and it is expected that you will install plugins to shape WeeChat to your needs. See WeeChat's documentation for a list of plugins!</p><h2>Matrix</h2><p class="gemtext-paragraph">WeeChat doesn't only support IRC. If you're a Matrix fan, there is a weechat-matrix plugin written in Python which is surprisingly really good!</p><p class="gemtext-paragraph">But do note that Matrix users may expect your client to be able to do things like render images or typing notifications or read receipts, which WeeChat cannot. WeeChat includes some workarounds for images, links, formatting, mentions, and quote replies, but remember that a graphical Matrix client may be more appropriate for Matrix, which is designed as a graphical protocol.</p><h2>Conclusion</h2><p class="gemtext-paragraph">Hopefully this was a helpful introduction to IRC and WeeChat and you can get connected easily. See you on the net!</p><p class="gemtext-paragraph">Cadence</p>]]></summary>
        <published>2022-02-04T12:33:13.270Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Command line computing part 2: Difficulties]]></title>
        <id>https://cadence.moe/blog/2022-01-29-command-line-computing-part-2-difficulties</id>
        <link href="https://cadence.moe/blog/2022-01-29-command-line-computing-part-2-difficulties"/>
        <updated>2022-01-29T12:24:04.666Z</updated>
        <summary type="html"><![CDATA[<h2>About this page</h2><p class="gemtext-paragraph">This page was originally published via the Gemini protocol. However, I've also made the contents available on this blog if you don't have a Gemini client. The translation you are reading is not perfect but it should be good enough.</p><div class="gemtext-link"><a href="gemini://cadence.moe/gemlog/2022-01-29-command-line-computing-difficulties.bliz">Read via Gemini</a></div><h2>Challenges with command line computing</h2><p class="gemtext-paragraph">It turns out that I took a lot of things for granted in a graphical environment that I lost when moving to a console environment. (You might have seen this coming.)</p><p class="gemtext-paragraph">I immediately felt the limitations, not only from the things that I had expected to be inaccessible such as viewing images and videos, but things as basic and everyday as _clicking links in a chat client_ and having them open in a web browser. Often times I would be totally unable to do a task and end up switching to the graphical environment.</p><h2>Highlighting, copying, and pasting text</h2><p class="gemtext-paragraph">This is an incredibly natural task to do in graphical windowed environments - moving the windows around the screen and plopping things between them - and I had not even considered that it was something that I would lose.</p><p class="gemtext-paragraph">If you find a link to a git repository and you wish to clone it, you have to get that URL into the shell somehow in order to use the clone command. If it's pretty short, the easiest approach may be to remember it and then type it out by hand. If you find an interesting quote on a web page, and want to share it on IRC, same deal. The most straightforward approach may be to tile the buffers and type out the quote again by hand.</p><p class="gemtext-paragraph">Some individual applications do support an internal clipboard (like Emacs and its &quot;kill ring&quot;), but these don't allow pasting into other applications such as a regular terminal, so you still can't git clone or share to IRC. (For the Emacs fans yelling at me that Emacs *can* do these, the Emacs log post is coming up soon, okay?!)</p><p class="gemtext-paragraph">You can get increased functionality and cross-application pasting by using a terminal multiplexers, allowing you to grab text from the screen and insert it elsewhere, but this is still an incredibly challenging process. You absolutely have to be a power user to even bother trying this. Moving around a full-screen interface is really tedious, and you have to be careful not to copy any data that rests in columns. tmux does the best it can be adding shortcuts to help you quickly get to the space you want to copy, and it's still challenging. Grabbing a quote to share on IRC or a link to git clone in the terminal *are* possible like this, but only if you're brave enough.</p><p class="gemtext-paragraph">Note that if you're using a terminal emulator instead of the console, you do get the mouse and you can use it to highlight text. The terminal emulator can copy and paste.</p><h2>Clicking links</h2><p class="gemtext-paragraph">This is very similar to the last paragraph. As you might expect, a command line web browser allows you to &quot;click&quot; links which will be opened *in the browser*, but URLs that you find anywhere else simply won't be clickable. You once again have to highlight the URL with tmux and put it into the browser's address bar, or remember the link and retype it.</p><p class="gemtext-paragraph">If you're using a terminal emulator, you can ctrl-click links with the mouse to open them.</p><h2>Keyboard shortcuts</h2><p class="gemtext-paragraph">For historical reasons many shortcuts are not available in the console because they are merged with other keys. For example, Ctrl-Backspace does not delete a word because it actually is interpreted as Ctrl-H. Regular backspace is interpreted as Ctrl-/. Depending on the application, Alt-Backspace might be able to delete a word, but Ctrl-Alt-? is also mapped to this combination. As far as I am aware, shortcuts that use Ctrl cannot know whether Shift is pressed or not, so the entire layer of Ctrl-Shift-... is not available. Thankfully, the function keys are all available and distinct, so if your application allows you to make your own keybinds, definitely take advantage of that freedom.</p><p class="gemtext-paragraph">If you're using a terminal emulator, *some* additional shortcuts are available, but still not the full range of keystrokes supported in a graphical application. Shift-arrows are newly available, but Ctrl-Backspace is still Ctrl-H and Ctrl-Shift-O is still Ctrl-O.</p><h2>Applications are less intuitive</h2><p class="gemtext-paragraph">Applications generally present very few or no menu options and require the user to first learn, then memorise, and finally blindly use all of the shortcuts that they will commonly need.</p><p class="gemtext-paragraph">Here are some examples of this:</p><h3>tmux</h3><p class="gemtext-paragraph">There are no key prompts visible. You can see them if you press `PREFIX ?` but you still have to remember them, exit the help screen, and then blindly enter them and hope it works. If you didn't understand the instructions correctly, you have to go right back to the help screen and find your place again in order to learn more.</p><p class="gemtext-paragraph">Once you have the shortcuts committed to memory, they are fairly quick to activate, all relying on a prefix bind first.</p><h3>weechat</h3><p class="gemtext-paragraph">Again, there are no key prompts visible. You can experiment with slash commands to activate things, and read the commands help text, but in order to do even that you still need to read the new user introduction guide to pick up the critical shortcuts, like for buffer switching.</p><p class="gemtext-paragraph">Let's say you start weechat - which is primarily designed to be an IRC client - and want to connect to a popular IRC server. Here are the *minimum* steps to connect:</p><ul><li>/server add libera irc.libera.chat/6697 -ssl</li><li>/set irc.server.libera.nicks &quot;cadence&quot;</li><li>/set irc.server.libera.username &quot;cadence&quot;</li></ul><p class="gemtext-paragraph">Normally you'd /set the SASL data too in secure storage, but I'm skipping that rat's nest. Onwards to connecting...</p><ul><li>/connect libera</li><li>/join #transchat</li></ul><p class="gemtext-paragraph">And now you can use the Alt-[number keys] or Alt-J to change to the right buffer, and start typing.</p><p class="gemtext-paragraph">Reading the user guide is mandatory in order to do this. You are not going to be able to guess these steps or pick them up from the interface.</p><p class="gemtext-paragraph">Experienced users might feel comfortable with weechat after some practice, but I still feel incredibly scared.</p><h3>links2</h3><p class="gemtext-paragraph">Links2 is much more intuitive than the ones I mentioned. There is a menu bar with several critical navigation commands and settings available there. You'll still have to press ? to see the keyboard shortcuts for scrolling, following links, and going back pages, but they are fairly intuitive and you only need to know a small number of them. Accessing the menu bar takes a little time, and shortcuts are available for people who want to activate frequent functions more quickly.</p><h3>Emacs</h3><p class="gemtext-paragraph">It's Emacs. You have a menu bar at the top, but good luck figuring out anything else. Nano beats it in usability but not in features. The menu bar contains thrilling items such as:</p><ul><li>File &gt; Save As</li><li>Edit &gt; Replace &gt; Replace String</li><li>Options &gt; Show/Hide &gt; Battery Status</li><li>Buffers</li><li>Tools &gt; Read Net News</li><li>Help &gt; Emacs Psychotherapist</li></ul><h3>vim</h3><p class="gemtext-paragraph">It's FUCKING VIM.</p><h3>Midnight Commander</h3><p class="gemtext-paragraph">I have barely touched Midnight Commander so far, but it actually looks fantastic. The interface is laid out well and the bottom of the screen has several options which are labeled with the keys that you press to activate them. Pressing the appropriate key either activates the action directly or it opens a new menu containing more clearly labelled options, most of which look pretty helpful.</p><p class="gemtext-paragraph">Great job, Midnight Commander! Hopefully I'll get to write a whole post just about you. :)</p><h2>Colours</h2><p class="gemtext-paragraph">Your terminal emulator might support 256 or even millions of colours, though as far as I can tell, console mode supports just the basic 16. And they aren't very good shades. But it still may be enough for you to get by.</p><h2>Unicode</h2><p class="gemtext-paragraph">Console mode just supports the ASCII base set, as far as I can tell? I haven't investigated this in detail but I do know that esoteric characters and emojis just show up as little blocks. Your terminal emulator should support Unicode, and probably renders it as the correct widths!</p><h2>Conclusion</h2><p class="gemtext-paragraph">Well, that's all for this post. In the next post I'll likely be talking about a specific application that I've been using and provide a cheatsheet of hotkeys you should know. See ya!</p><p class="gemtext-paragraph">— Cadence</p>]]></summary>
        <published>2022-01-29T12:24:04.666Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Command line computing part 1: Introduction]]></title>
        <id>https://cadence.moe/blog/2022-01-28-command-line-computing-part-1-introduction</id>
        <link href="https://cadence.moe/blog/2022-01-28-command-line-computing-part-1-introduction"/>
        <updated>2022-01-28T12:26:57.046Z</updated>
        <summary type="html"><![CDATA[<h2>About this page</h2><p class="gemtext-paragraph">This page was originally published via the Gemini protocol. However, I've also made the contents available on this blog if you don't have a Gemini client. The translation you are reading is not perfect but it should be good enough.</p><div class="gemtext-link"><a href="gemini://cadence.moe/gemlog/2022-01-28-command-line-computing.bliz">Read via Gemini</a></div><h2>Concept</h2><p class="gemtext-paragraph">I was browsing some records of internet history including RFC 1855, RFC 2664, and textfiles.com/history.</p><div class="gemtext-link"><a href="gemini://gmi.noulin.net/rfc/rfc1855.gmi">RFC 1855: Netiquette Guidelines (October 1995)</a></div><div class="gemtext-link"><a href="gemini://gmi.noulin.net/rfc/rfc2664.gmi">RFC 2664: Answers to Commonly Asked &quot;New Internet User&quot; Questions (August 1999)</a></div><div class="gemtext-link"><a href="http://textfiles.com/history">http://textfiles.com/history</a></div><p class="gemtext-paragraph">I realised that I had a longing to have grown up in this kind of internet, where despite its restrictions, everything seems new and wonderous and free, with unlimited possibilities.</p><p class="gemtext-paragraph">In some sick irony, despite the modern web being capable of doing far far more than the days of web 1.0 and the days even before it, the modern web also feels more restrictive and more difficult to touch, more difficult to feel, and more difficult to connect with.</p><p class="gemtext-paragraph">Related to this, I thought it would be exciting to set up an environment for computing in console mode, the Ctrl-Alt-F1 on your Linux computer (and maybe in BSD and UNIX too, but I don't know). In console mode, you get a fully capable shell and environment, but with no graphics, no mouse, and a tiny character set.</p><p class="gemtext-paragraph">If you want to try this at home, you will have a better experience using a terminal emulator within your graphical environment, since this will additionally support millions of colours, Unicode, and occasionally mouse support if you want it. I decided to try console mode for fun, though I can switch to using a terminal emulator at any time if I decide to.</p><h2>Ground rules (very important)</h2><p class="gemtext-paragraph">THERE ARE NO RULES.</p><p class="gemtext-paragraph">Going into this I knew I would hit so many restrictions in things I wanted to do. This is why I decided from the get-go that I wouldn't restrict myself to the console only. If I want to use the graphical environment for any reason, I can switch to it and do whatever I want to. Graphics mode is excellent for...</p><ul><li>Reducing frustration</li><li>Video games</li><li>Surfing the modern web</li><li>Point-and-clicking</li><li>Viewing images and videos</li><li>Copying and pasting betwen windows</li></ul><p class="gemtext-paragraph">And so, I am allowed to switch to graphics mode at any time for any reason. I'm not even trying to make console mode my primary means of computing. The idea is merely to use console mode *some of the time, because it is cool, not because it is required.*</p><h2>Goals</h2><p class="gemtext-paragraph">Even if there are no rules, it would still be good to define some goals for this experiment, so that I can generally focus and target my attention.</p><ul><li>To become more comfortable using applications in the command line.</li><li>To learn about exciting new (or, *old*) software and protocols.</li><li>To write in my [b]log more.</li><li>To see how online understandings and speech around gender, sexuality, and dress have changed over time.</li></ul><p class="gemtext-paragraph">There is no time limit and I should not feel bad if I do not accomplish any goals. These are directions I could travel in, not requirements.</p><h2>So how is it going?</h2><p class="gemtext-paragraph">I'm still early in this experiment, but things are progressing in a more exciting way than I expected. I really like the emotions that the whole project has been making me feel.</p><p class="gemtext-paragraph">I've been organising my links and thoughts in an offline personal document which I will be adding to as the days go by. Once I have enough material to make a focused post about, you can expect more frequent posts here again! I hope I'll be able to share a lot in the coming weeks. Hell yeah. I plan to write about the software I've been using, the difficulties I've encountered, and the wonderful things I've discovered.</p><p class="gemtext-paragraph">(If you're a visitor from the future and I ended up not making follow-up posts, *please* send me an email to remind me to update this section of the site.)</p><p class="gemtext-paragraph">See you soon!</p>]]></summary>
        <published>2022-01-28T12:26:57.046Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mario Kart Double Dash Unlockables]]></title>
        <id>https://cadence.moe/blog/2021-12-10-mario-kart-double-dash-unlockables</id>
        <link href="https://cadence.moe/blog/2021-12-10-mario-kart-double-dash-unlockables"/>
        <updated>2021-12-10T10:28:37.501Z</updated>
        <summary type="html"><![CDATA[<style>.highlight {
    color: #88ee99;
}
</style><p>These have been written about before on the internet. However, all the online guides I found were difficult to understand or contained incorrect information.</p><p>In this guide, rather than simply listing all unlockables, I am presenting information in the form of, <span class="highlight">unlock <em>this</em> by doing <em>that</em>.</span></p><p>Everything in the game is unlocked by achieving first place (gold trophy) on a specific cup in Grand Prix mode. If playing multiplayer Grand Prix, either player can get first place for it to count.</p><h2>Cups and modes</h2><ul><li>Special Cup: Get gold on 100cc Star Cup.</li><li>All Cup Tour: Get gold on 150cc Special Cup.</li><li>Mirror Mode: Get gold on 150cc All Cup Tour.</li></ul><h2>Characters</h2><ul><li>Toad & Toadette: Get gold on 100cc Special Cup.</li><li>Boo & Petey: Get gold on Mirror Mode Star Cup.</li></ul><h2>Battle courses</h2><ul><li>Luigi's Mansion: Get gold on 150cc Mushroom Cup.</li><li>Tilt-A-Kart: Get gold on Mirror Mode Flower Cup.</li></ul><h2>Karts</h2><ul><li>Rattle Buggy: Get gold on 100cc Mushroom Cup.</li><li>Para-Wing: Get gold on 50cc Star Cup.</li><li>Toadette Kart: Get gold on Mirror Mode Mushroom Cup.</li><li>Bullet Blaster: Get gold on 50cc Special Cup.</li><li>Barrel Train: Get gold on 150cc Star Cup.</li><li>Green Fire: Get gold on 50cc Mushroom Cup.</li><li>Bloom Coach: Get gold on 50cc Flower Cup.</li><li>Waluigi Racer: Get gold on 100cc Flower Cup.</li><li>Turbo Birdo: Get gold on 150cc Flower Cup.</li><li>Boo Pipes: Get gold on Mirror Mode Special Cup.</li><li>Parade Kart: Get gold on Mirror Mode All Cup Tour.</li></ul><h2>Alternative title screen background</h2><p>Normally, every single cup gives its own individual unlockable, except for 50cc and 100cc All Cup Tour, which have no associated unlockables.</p><p>However, to unlock the alternative title screen background, you must get gold on <em>every cup on every speed,</em> including 50cc and 100cc All Cup Tour.</p><h2>I hate reading. Can you show me this as a picture?</h2><p>I found a wonderful infographic created by user Zurioko.</p><p>Please see their post: <a href="https://www.reddit.com/r/mariokart/comments/qkznwx/i_had_a_lot_of_fun_with_the_infographic_of_mkw_so/">https://www.reddit.com/r/mariokart/comments/qkznwx/i_had_a_lot_of_fun_with_the_infographic_of_mkw_so/</a> -- <a href="https://i.redd.it/ri025wmn65x71.png">direct image link.</a></p>]]></summary>
        <published>2021-12-10T10:28:37.501Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Depersonalisation]]></title>
        <id>https://cadence.moe/blog/2021-08-04-depersonalisation</id>
        <link href="https://cadence.moe/blog/2021-08-04-depersonalisation"/>
        <updated>2021-08-04T12:56:35.540Z</updated>
        <summary type="html"><![CDATA[<style>body {
    background-color: #120a14;
}
#page .feeling {
    color: #ebc5f5;
}
</style><p class="content-warning">content warning: mental health, feelings, emotional writing.</p><p>I've struggled for a long time with how to describe to people how it feels to be me while I'm experiencing depersonalisation and a total loss of my sense of myself. Today, I found the words.</p><p class="feeling">The feeling of depersonalisation is like living inside a mirror.</p><p class="feeling">It's like being a reflection, living in the world of glass. Everything around me is in motion, and it seems like it should be real, but it just glides past my body with a glossy sheen, unable to be felt.</p><p class="feeling">My eyes can't look, and my mind can't think. I'm a reflection, acting automatically, moving on a separate layer to the world rather than truly living within it. Reflections don't see. Reflections don't think. Reflections don't feel, reflections don't live.</p><p class="feeling">I'm not tangible. I have no impact on the world, nor can I be affected by it. I reflect what's there, without understanding why, without caring why.</p><p>One day I want to place my hand on the mirror, melt down the glass barrier with my touch, step through and feel my body fill with colour, my long legs carrying me forward into rays of sunshine. The rays hit my face and I feel their heat on my skin. I <em>feel</em> the world moving around me and with me now, everything so vibrant and tactile, free from the cold glass prison where everything is smooth.</p><p>I look up at the sun as it blesses me, and finally, I smile.</p><p>Cadence</p>]]></summary>
        <published>2021-08-04T12:56:35.540Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Overcomplication]]></title>
        <id>https://cadence.moe/blog/2021-08-02-overcomplication</id>
        <link href="https://cadence.moe/blog/2021-08-02-overcomplication"/>
        <updated>2021-08-02T13:51:34.214Z</updated>
        <summary type="html"><![CDATA[<style>.chat-lines {
    display: grid;
    grid-template-columns: auto 1fr;
    grid-gap: 0px 10px;
    background-color: #130c1a;
    padding: 20px;
    border-radius: 4px;
}
.chat-lines .name {
    text-align: right;
    margin-left: 6px;
}
.chat-lines .name.cadence {
    color: rgb(230, 79, 122);
}
.chat-lines .name.lepton {
    color: rgb(116, 209, 44);
}
.chat-lines .name.lepton + .message {
    color: #b7d79f;
}
</style><p>Sometimes I think of simple solutions to problems. Sometimes I spend far too long chasing my own tail.</p><p>This is probably best illustrated through a conversation I had online with Lepton.</p><div class="chat-lines"><span class="name cadence">cadence:</span> <span class="message">due to games that use WASD for movement and don't let me configure those keys, maybe I'll make a script that recognises which window I'm in and adjusts the layout to Qwerty if it's one of those games.</span>
<span class="name cadence">cadence:</span> <span class="message">if I use the command line to change layout back to Qwerty, I can play the game fine</span>
<span class="name cadence">cadence:</span> <span class="message">I want to tab out and use instant messaging while playing, it's just so annoying to use the command every time</span>
<span class="name lepton">lepton:</span> <span class="message">can you set this to a hotkey?</span>
<span class="name cadence">cadence:</span> <span class="message">hmm, that would be significantly smarter</span>
<span class="name cadence">cadence:</span> <span class="message">I will consider.</span>
<span class="name lepton">lepton:</span> <span class="message">default for layouts is super+space, very convenient</span>
<span class="name cadence">cadence:</span> <span class="message">there's no default for it due to my window manager, but I could set up a hotkey, yeah! I totally forgot about that</span>
<span class="name cadence">cadence:</span> <span class="message">maybe super+k for keyboard</span>
<span class="name lepton">lepton:</span> <span class="message">well, the K would move, probably</span>
<span class="name cadence">cadence:</span> <span class="message">okay, well, super+keythatdoesn'tmove.</span>
<span class="name cadence">cadence:</span> <span class="message">I can write an easy script for it</span>
<span class="name cadence">cadence:</span> <span class="message">oh wait</span>
<span class="name cadence">cadence:</span> <span class="message">super+k changes to qwerty</span>
<span class="name cadence">cadence:</span> <span class="message">super+n changes to workman</span>
<span class="name cadence">cadence:</span> <span class="message">(same key)</span>
<span class="name cadence">cadence:</span> <span class="message">I don't even need to write scripts then</span>
<span class="name cadence">cadence:</span> <span class="message">there's no command to "toggle layout" so I was going to write a script that reads the current layout and activates the other one</span>
<span class="name cadence">cadence:</span> <span class="message">but you pointed out that I don't even need to</span>
<span class="name cadence">cadence:</span> <span class="message">very productive conversation, thank you</span>
<span class="name lepton">lepton:</span> <span class="message">I didn't contribute much but you're welcome anyway!</span>
<span class="name cadence">cadence:</span> <span class="message">couldn't have done it without you :)</span>
</div><p>Not everything requires writing a script. Step back, pause, and use your mind before writing code, even if it's trivial.</p><p>Cadence</p>]]></summary>
        <published>2021-08-02T13:51:34.214Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Computer niceties]]></title>
        <id>https://cadence.moe/blog/2021-07-30-computer-niceties</id>
        <link href="https://cadence.moe/blog/2021-07-30-computer-niceties"/>
        <updated>2021-07-30T13:03:15.702Z</updated>
        <summary type="html"><![CDATA[<p>Some time ago I got really annoyed with some ways my computer behaves, so I decided to put in the work to figure out how to fix those annoyances.</p><p>Most of these annoyances were things that I had to do manually every time I started my computer. I found that I was keeping my computer powered up for long periods of time so that I didn't have to repeat them.</p><h2>Login screen keyboard layout</h2><p>The login screen on Linux is technically known as the "display manager", and there are many different display managers available depending on preference.</p><p>Ubuntu seems to use GDM (Gnome Display Manager) by default, which gets the job done, except that I couldn't work out how to change the keyboard layout there. GDM was always using Qwerty, which is frustrating when I don't have the Qwerty layout on my keycaps and don't have it memorised either. The password box masks characters, so I couldn't tell if I hit the wrong key by mistake. Usually I would enable the on-screen keyboard and use it to enter my password.</p><p>I solved this problem by installing XDM to replace GDM, because I read online that with XDM we can create a file <code>/etc/X11/xorg.conf.d/90-keyboard.conf</code> with contents:</p><pre>Section "InputClass"
    Identifier "keyboard-workman"
    MatchIsKeyboard "on"
    MatchDevicePath "/dev/input/event*"
    Driver "evdev"
    Option "XkbLayout" "workman"
EndSection
</pre><p>Now XDM uses the Workman layout.</p><p>The default XDM appearance is not to my taste, but I only have to see it for a few seconds, so it won't be worth my time to read how to install a theme.</p><h2>Disk decryption keyboard layout</h2><p>I use full disk encryption, including on the root partition.</p><p>This makes it really annoying to configure, because there's no X server, and I can't access any real files at that point. I'm also scared of messing something up real bad.</p><p>LUKS supports multiple passwords, so as well as my regular password, I also added my password transposed to a different layout.</p><h3>Here's how to do that</h3><p>First, use <code># parted -l</code> to check your partitions. You need to identify where the encrypted partitions are.</p><p>The partitions will always end in numbers, like <code>/dev/sda<mark>3</mark></code> or <code>/dev/sdb<mark>1</mark></code>.</p><p>If you labelled your partitions, you can probably find them easily in that summary. If you didn't, they'll be the partitions that have nothing listed for the "file system" field.</p><p>The things you are looking for are <em>not</em> <code>/dev/mapper/*</code> devices!!</p><p>Once you've identified your encrypted volumes, carry the following steps out for each of them. I'll use <code><em>/dev/sda3</em></code> as the placeholder, so replace that anywhere it appears.</p><ol><li><code># cryptsetup luksDump <em>/dev/sda3</em></code> to check the status. Might be useful to look at, and compare before/after.</li><li><code># cryptsetup luksAddKey <em>/dev/sda3</em></code> to start adding a new key. Enter any existing passphrase to authorise.</li><li>Change your keyboard layout to Qwerty.</li><li>Enter the passphrase you want to add, then confirm it. (Since your keyboard is now Qwerty, and it will also be Qwerty when you unlock it, the locations of the keys that you are pressing now will be the same locations when you want to unlock. I pretended that I was using my favourite non-Qwerty layout and entered my password. If you think about this, it should hopefully make sense.)</li><li>Change your keyboard layout back.</li><li>Check the status again with <code># cryptsetup luksDump <em>/dev/sda3</em></code>. You should see an additional key.</li></ol><p>Don't forget to do this for all your encrypted partitions, and ensure that all of them include the same passphrase. Because when you enter the passphrase on boot, it attempts to use that passphrase to unlock all disks at the same time. If not all disks have that passphrase, you will have to enter multiple passphrases until you have unlocked every encrypted partition.</p><h2>PulseAudio output fixes</h2><p>My 3.5mm output is kind of weird? Like, it doesn't think my headphones are plugged in when they really are, and I think that's the reason that my computer selects the wrong audio device to try to send sound to after I log in. So I have to open <code>pavucontrol</code> and change the output every time.</p><p>Apparently I can add some lines to <code>/etc/pulse/default.pa</code> to change the default devices. I've done this, though currently I'm not sure if they work reliably.</p><p>Anyway, if you're facing the same problem, the instructions in this post seem reasonable: <a href="https://unix.stackexchange.com/a/462671">https://unix.stackexchange.com/a/462671</a></p><h2>Openbox startup language</h2><p>The Openbox startup file, <code>~/.config/openbox/autostart</code>, seems like it always runs in bash, rather than the user default shell. This makes sense. Something that doesn't make sense is that even if the script has a <code>#!</code> line, it still uses bash.</p><p>This piece of code will restart the script if the current shell is not fish. If it is fish, it will continue.</p><pre>test $FISH_VERSION || exec fish $0</pre><h2>Autostart terminals in another workspace</h2><p>Various small web programs that I've written need to run in the background after I log in, but I don't really like it if I can't monitor them and stop them easily. Often I need to look at what my code is currently doing, and it's important that I reduce the friction to that as much as possible.</p><p>Rather than running the programs headlessly, I now have my Openbox startup file run them in terminal windows, then move the terminal windows off screen to a spare workspace so that I don't have to look at them until I want to.</p><p>Now that my startup script is running in fish, it's comfortable to write code that does this. Bash can do it too, but fish is just <em>nice</em>, you know?</p><pre>set next_terminal_offset 0
function terminal_in_workspace
    set workspace $argv[1]
    set title $argv[2]
    set directory $argv[3]
    set command $argv[4..-1]
    if gnome-terminal --working-directory=$directory --title=$title -- $command
        wmctrl -r $title -t $workspace
        wmctrl -r $title -e 0,(math $next_terminal_offset + 52),(math $next_terminal_offset + 20),-1,-1
        set next_terminal_offset (math $next_terminal_offset + 40)
    end
end
</pre><p>And now, starting a program is as simple as...</p><pre>terminal_in_workspace 1 homepages /home/cloud/Code/homepages npm run start</pre><h2>Conclusion</h2><p>My computer is less annoying now. I'm happy when I can shut it down at night, because it no longer resists my efforts to start it up again. Shutting down my computer improves its security and saves power.</p><p>I love my computer.</p><p>Cadence</p>]]></summary>
        <published>2021-07-30T13:03:15.702Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Workman layout, 11 months later]]></title>
        <id>https://cadence.moe/blog/2021-07-20-workman-layout-11-months-later</id>
        <link href="https://cadence.moe/blog/2021-07-20-workman-layout-11-months-later"/>
        <updated>2021-07-20T12:31:22.812Z</updated>
        <summary type="html"><![CDATA[<p><a href="https://cadence.moe/blog/2020-09-28-my-experience-with-the-workman-layout">If you haven't yet seen my previous post, be sure to check it out!</a></p><p><a href="https://workmanlayout.org/">If you need a reminder of what the Workman layout looks like, I got you.</a></p><h2>Technique and hand comfort</h2><p>My hands are definitely more comfortable when typing Workman than they were when typing Qwerty.</p><p>Due to the layout, my fingers are able to stick above the home row, because the most commonly pressed keys are actually there. For the other keys, I can reach each finger out from this base position.</p><p>This typing technique, which I believe is called "touch typing" (??) is greatly encouraged when learning to type, even for the Qwerty layout. Controversially, I don't think it's good advice for Qwerty. The Qwerty layout makes it totally impractical to keep the fingers around the home row, since the home row has very few useful keys on it. (In fact, significantly more time is spent typing on the top row than is spent on the middle row!)</p><p>As a result, when I was typing Qwerty in the past, I would use the first 2 or 3 fingers on each hand and move each hand around quite a lot to hit all the keys. For some words, one hand might even cross into the keyboard half owned by the other hand in order to type it faster.</p><p>The design of the Workman layout, which puts the most commonly used letters on the home keys, and the next most common letters in <em>easy to reach positions,</em> makes it naturally comfortable to use.</p><h2>Typing speed</h2><p>I type faster now with Workman than I did on Qwerty.</p><p>Checking <a href="https://data.typeracer.com/pit/profile?user=cadence_workman">my TypeRacer profile,</a> I can type passages of text at around 115 words per minute, and in my last blog post about Workman, I wrote that my Qwerty speeds were 90-100 wpm. That's about 20% faster. Cool!</p><p>But what if I had spent the same amount of time that I practised Workman for, practising Qwerty instead?</p><p>I don't know, but the answer I expect is that such practice would have caused my Qwerty speeds to improve. Would they have improved to 115 wpm? I can see that being possible.</p><p>And I look online, and I see Workman typers that are much better than me, and I see Qwerty typers that are much better than me. The way I see it, choice of keyboard layout does not grant better speeds. Technique and practice are the things that are important.</p><p>I think typing speed and keyboard layout are almost entirely independent, and that Qwerty is certainly not "slow".</p><h2>How to type quickly</h2><p>Type accurately.</p><p>One really important thing that I noticed from TypeRacer is that I do a lot better if I "slow down" in order to type more accurately. If you go fast, you're more likely to make mistakes. If you do make a mistake, then you will probably type a few letters past it. You must switch modes in your brain, stop typing, move to the backspace key, delete these excess letters, delete the original incorrect letter, move your hands back to the base position, and resume typing again.</p><p>Another way to think of it is: When you make a mistake, it's like you stopped typing entirely for the period of time that it took you to notice and delete the mistake. This is a surprisingly long time!</p><p>Pausing to make sure that you are typing the words correctly if your mind is unsure is faster in the long run, because the micro-pause as you process which fingers to move is still far shorter than the amount of time you would have effectively stopped for if you had made a mistake. </p><p>Consistency and accuracy are <em>extremely</em> important to typing quickly.</p><h2>The nature of typos</h2><p>I <em>have</em> noticed that on Workman I make different kinds of typos than I do on Qwerty.</p><p>On Qwerty a common error would be for me to press the key next to the one I meant to press. This is possible because my hands are floating over the top of the keyboard and moving around. Now that I'm typing "properly", with no hand movement, this isn't an issue.</p><p>The kinds of typos that I make now are much more commonly caused by pressing keys in the incorrect order if the same finger must be used twice in the same word, like typing "tiwce" instead of "twice", or "misidrection" instead of "misdirection", or "characetrs" instead of "characters". (TW are on the same finger, as are SD, and so are TC.)</p><p>I still make errors where I just press the wrong finger entirely and type the wrong letter, but these are much more reduced compared to when I was using Qwerty, and can be further reduced if I take the time to slow down and think about what my hands are doing.</p><h2>Programming</h2><p>When programming, there isn't as large of a difference in typing style compared to Qwerty. Programming requires typing a lot of symbols and punctuation, which means my fingers naturally need to jump all around the keyboard no matter what layout I am using.</p><p>There <em>is</em> a "Workman-P" layout available, which is designed more for programmers to use, and moves some symbols to easier-to-reach places, for example. I haven't tried it yet, and I think it would be a hassle to learn, since the locations of symbols are actually printed on my keyboard.</p><h2>The labels on the keyboard</h2><p>You will type faster if your keyboard has no letter labels on it.</p><p>Think about it. What purpose do the markings serve? Once you know how to type even somewhat effectively, you should know where all the key positions are. If you are looking down at the keyboard, that's bad for three reasons.</p><p>One; if you are looking at the keyboard then you are not looking at the screen, so you can't check how things are being printed out. Have you ever typed an entire paragraph with caps lock on by accident? You won't if you're looking at the screen while you type.</p><p>Two; if your fingers are on the keys then you can't look at the labels on the keys. Your fingers are in the way. If you are reading the labels, then you have your hands off the keyboard and in a terrible pose, which is just <em>awful.</em> If you really need to be reminded of where all the letters are, you should print out a reference of the layout and stick it in your workspace at the same height as your screen.</p><p>Three; a lot of fancy keyboards have keycaps that are shaped differently depending on the row that they're found in. This is to be more ergonomic for the fingers, or something. If you rearrange the keys, the rows that the keys are in will change. Keys that are at different heights to each other will now be next to each other in the same row on the keyboard. It's awful.</p><p>Ideally, if you change keyboard layouts, you have keys without labels on them. If your keys have labels, that's still fine. Leave them as Qwerty no matter the layout you type. You will type better, I promise.</p><h2>Funny moment: Computer science test machine</h2><p>In my computer science class last year, there were a number of programming tests that had to be taken on a machine that did not have access to the internet or to my standard home directory. This was done to avoid cheating by students.</p><p>The Workman layout is not installed on those computers, and I can't download or copy the layout specification to be able to easily install it.</p><p>What I did was use a series of commands to reconstruct an xmodmap specification of the layout. The sandbox computers <em>did</em> have xmodmap installed, so if I could create the file by hand, then I would be able to use the layout.</p><p>If you were curious, here is the process:</p><ol><li>Have the key positions in the new layout memorised.</li><li>Have emacs, xev, setxkbmap, xset, xmodmap.</li><li>Start Emacs, and visit a new file <code>workman.xmodmap</code> somewhere.</li><li><code>C-x h BACKSPACE C-u M-!</code>, <code>xev -event keyboard | grep -Eo 'keycode [0-9]+'</code></li><li>Even though the new layout is not yet installed or enabled, for this step, just <em>pretend</em> that it is. Using the positions from your new layout, type Q, W, E, R, T, Y, across and down the keyboard. (This means you do <em>not</em> press the keys that are labelled Q, W, E, R, T, Y on the physical keyboard. You press where those letters would be if your desired layout was enabled. So for me, I'd actually be pressing the keys that are labelled, Q, R, K, E, F, H...)</li><li>Close the white window <em>using the mouse.</em></li><li>Select all with <code>C-x h</code>. Then <code>M-x delete-duplicate-lines</code>. Then go to the end of the buffer with <code>M-></code></li><li>You should have pressed all 26 letter keys, and also the semicolon key, for a total of 27 keypresses. Verify this by checking that the buffer now has 27 lines of text. You should have pressed the semicolon key immediately after pressing whichever keys are J, K, L in the new layout.</li><li>Select from the end of the first line to the end of the last line. Then execute <code>C-x r t SPACE = SPACE RET</code>. This adds <code> = </code> to the end of each line.</li><li>Go down each line and type the actual QWERTY letters. Q, W, E, R, T, Y... However, instead of symbols like <code>;</code>, you'll need to type the name of all the symbols which appear on that key, like <code>semicolon colon</code>.</li><li>Save.</li><li>Now in a terminal, <code>setxkbmap -option caps:backspace</code> for capslock backspace. (Note that you have to do this <em>before</em> the upcoming <code>xmodmap</code> command. Running <code>setxkbmap</code> with any set of options will reset <code>xmodmap</code> modifications.)</li><li><code>xset r 66</code> makes the capslock-backspace activate repeatedly when held.</li><li><code>xmodmap /path/to/workmap.xmodmap</code></li></ol><p><a href="/friends/workman.xmodmap">Here's my finished xmodmap file produced through this method, if you want to see.</a></p><h2>Hardware keyboard layout considerations</h2><p>That last thing is possible, and quick to do with some practice, but definitely very tedious, and Linux only.</p><p>For a while now I've had a dream of building a hardware module that I can insert between the keyboard and the computer to remap the layout in hardware. So rather than needing to work to install the layout on the computer, which may not even be possible depending on if it is a public computer, I can take the device around with me and then use any computer after taking 5 seconds to connect the device to the keyboard.</p><p>But I'll probably follow this up in another blog post if I decide to actually continue the idea.</p><h2>Conclusion</h2><p>I like Workman! I think it's a good layout. My hands are comfy. My accuracy has improved. My typing speed has not, because typing speed depends on technique and skill rather than layout. Typing on other computers now is very tedious. Using the Workman layout on public computers may be possible, depending on the computer.</p><p>I hope you enjoyed this lengthy insight into how I use computers now.</p><p>— Cadence</p>]]></summary>
        <published>2021-07-20T12:31:22.812Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mystery cylinders]]></title>
        <id>https://cadence.moe/blog/2021-07-14-mystery-cylinders</id>
        <link href="https://cadence.moe/blog/2021-07-14-mystery-cylinders"/>
        <updated>2021-07-14T11:54:43.088Z</updated>
        <summary type="html"><![CDATA[<p>Today I met a friend and we visited the university's queer support centre to see if we could get any pride badges or ribbons to give out at an upcoming event. We didn't find any, but we did have some nice conversations, and one of them was extremely funny and validating, so I wanted to share it.</p><p>As you might expect, the queer support centre views sex and bodies in a positive light, and it gives out free condoms and tampons to students, available in small decorated boxes near the entrance for people to take.</p><p>I saw lots of small wrapped cylinders in the box, about the size and shape of my index finger from the tip to the second joint. I picked one up and asked my friend, "do you know what this is?"</p><p>They told me it was a tampon.</p><p>I stuttered. "Ah. I see. That, makes sense. That's what I expected. Uh, I'm asking because I've never seen one in real life before. Because I, uh, don't need to use them."</p><p>They laughed. "Ahaha, oh right, of course. I keep forgetting that you haven't always been a woman."</p><p>I froze, then began to laugh uncontrollably with joy.</p><p>— Cadence</p>]]></summary>
        <published>2021-07-14T11:54:43.088Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA["Walker"]]></title>
        <id>https://cadence.moe/blog/2021-07-12-walker</id>
        <link href="https://cadence.moe/blog/2021-07-12-walker"/>
        <updated>2021-07-13T03:51:45.981Z</updated>
        <summary type="html"><![CDATA[<p>This evening I went to the weekly local Netrunner event. It's winter, so it gets dark early, and it's definitely dark as I make my way home. I'm walking. Most of the path is lit by street lights, but there's one small section of it that's not.</p><p>It's the end of the first day of the semester. Students are getting drunk, I can hear them on the roads and in the houses around me. I pull my coat tighter to me and continue.</p><p>About halfway home, I reach the dark section, a steep asphalt slope. I slow down to conserve energy for the hill ahead, and as I head up, I notice a person standing on the path ahead of me. I slow more and walk with caution.</p><p>As I approach, I notice that they are holding a box of beer cans, and talking on the phone with a male voice. He drops the box on the ground and some cans roll out, and starts to pick them up, turning around, and noticing me.</p><p>I stop walking, a few metres between us, and ask, "are you alright?", uncertain of if I want to approach. He replies, "yeah, all good", and then after a short pause, talks to the person on the phone, "this... [couple of seconds pause] walker, looks scared of me".</p><p>I'm tempted to say something: "What do you expect? You're drunk, we're on an unlit path with nobody around, and I'm a woman in a skirt." I hold my tongue.</p><p>He steps back and I <strong style="color: #ffd700">pass</strong> by on the narrow path.</p><p>— Cadence</p>]]></summary>
        <published>2021-07-13T03:51:45.981Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Netrunner tournament]]></title>
        <id>https://cadence.moe/blog/2021-06-10-netrunner-tournament</id>
        <link href="https://cadence.moe/blog/2021-06-10-netrunner-tournament"/>
        <updated>2021-06-10T03:18:45.284Z</updated>
        <summary type="html"><![CDATA[<h2>Introduction</h2><p>Last weekend I participated in a competitive Netrunner tournament. <a href="https://nisei.net/about/netrunner/">(What is Netrunner?)</a> Players from Dunedin and Christchurch participated in the tournament, it's cool that the regions were able to get together like that. We played the Startup format, which means there's around 300 legal cards we can play, all of which were created in the last couple of years by the Nisei organisation. In total there were 10 people in the tournament, 4 from Christchurch and 6 from Dunedin.</p><p>I started playing Netrunner around December 2020 when a friend invited me to the weekly local friendly event out of the blue. I enjoyed it quite a bit and I kept returning to continue having fun and to improve my skills as a player.</p><h2>My corp deck</h2><p>I still don't have much experience building decks as corp side, so I brought along a fairly generic Built To Last deck where the aim is to set up extremely strong ice to keep the runner out of the server where you're scoring the agendas. It's a fairly straightforward deck, but very powerful. I was impressed by this identity when I saw it played at locals, which is why I decided to play it in the tournament, though I still chose all the cards myself to put in my deck rather than taking somebody else's build.</p><h2>My runner deck</h2><p>I usually find runner side more fun to play and easier to build for, so I spent more time coming up with an original idea for it and refining it.</p><p>One of the people that I invited to play Netrunner with me in the past took a stab at deckbuilding and ended up making something with the card Chameleon. Though their deck wasn't very cohesive, I applaud their efforts, and while that deck didn't make good use of Chameleon itself, it did put my mind to work wondering what I could do to make Chameleon viable. I ended up creating a whole deck around the idea of using Chameleon.</p><p>The thing about Chameleon is that when it's installed I get to choose which type it is for the rest of my turn. When my turn ends, Chameleon pulls itself back into my hand, ready to be installed again next turn and allow me to choose another type. Sounds great, right? With Chameleon, I can defeat any kind of ice simply by choosing the correct type! But there's a few drawbacks.</p><ul><li>Chameleon cannot increase its strength. It starts at strength 3, so any ice that has strength 4 or higher — which is basically all the ice in Built To Last — can't be broken by it.</li><li>Once a type has been chosen for Chameleon, it retains that single type, so if two ice have different types, they can't be broken with the same Chameleon.</li><li>I must pay credits to install Chameleon on every turn that I want to make a run, which is most turns. That's a lot of credits, when I could instead pay to install some other icebreaker that actually stays out.</li><li>During a run, the corp is able to rez ice that has already been installed in my way, but I have no click window, which means I can't click to install Chameleon mid-run. Which means I have to install Chameleon before the run starts. But since I choose its type on install, there's only a 1/3 chance of guessing correctly if the corp then rezzes new ice in my face during the run. Put another way, I can't see what type unrezzed ice is until I run, and I have to choose Chameleon's type before I start the run.</li></ul><p>I managed to come up with a strategy that completely mitigates all of these drawbacks.</p><p><strong>DZMZ Optimiser</strong>, affectionately called Dizzy Mizzy, reduces the cost of the first program installed on a turn by 1. Chameleon costs 2, so if I can install 2x Dizzy Mizzy, I can install my first Chameleon for free.</p><p><strong>Ice Carver</strong> reduces the cost of all opposing ice by 1, allowing me to break a little more ice than I could otherwise.</p><p><strong>Cybertrooper Talut</strong>. This card is critical. "Whenever you install a non-AI icebreaker, that icebreaker gets +2 strength for the remainder of the turn." On its own, this is just ok, but you may remember that Chameleon comes back into my hand after every turn. Which means that whenever I use it, I have installed it that turn. This straight up just gives it +2 strength forever, getting it up to 5. With Ice Carver, that's 6. This greatly expands my options.</p><p><strong>Paule's Cafe</strong> is the final piece of the puzzle. It reads, "spend click: host a program or piece of hardware from your grip on this resource. spend 1 credit: install 1 card that is already hosted." At first glance, this might sound confusing: why spend 1 more credit for the exact same thing? The answer is that credits can be spent during a run, allowing me to host Chameleon, and then <em>install it and choose its type mid-run</em>. This means I start the run, the corp rezzes ice in my face, I see what type it is, and I can straight away pay a credit to install Chameleon right then, choose the correct type for it, and break the ice.</p><p>I'm playing all of this with the identity <strong>Kit</strong>, which gives the Code Gate type to the first piece of ice I encounter each turn. This means if a server is protected by 1 piece of ice, and if I run that first, then the ice will be Code Gate, so I only need a code gate breaker. Since this is such a common occurrence, I also added <strong>Gordian Blade</strong>, a code gate breaker, into my deck, so that I can get past whatever ice without needing to hassle with Chameleon. Other support cards like Egret (which is in the deck) and Pelangi (which is not) will allow me to set the type of other ice to code gate, creating a massive chain of code gates that I can burn all the way through with only Gordian Blade. So satisfying.</p><p>Alright. That's enough rambling about my deck. I do think it's really cool, and I'm very happy with it and with myself. And — spoiler alert! — it won games!!</p><h2>Built To Last's first win</h2><p>It was fairly early in the game, I installed my first agenda, and they ran the server. I completely forgot that I had already installed Reduced Service in that server before. So I didn't rez it and they stole the agenda, otherwise the 8 credit tax probably would have made them unable to do that, since Reduced Service costs them another 2 credits to run for every advancement on it.</p><p>I was very upset at the time, but it actually turned out okay because I had 2x Punitive in hand so I immediately flatlined them on my next turn.</p><h2>Kit's second win</h2><p>It was a long and epic game.</p><p>Let me set the scene. I have 6 points, my opponent has 5. (7 needed to win.) They were playing Built To Last, and there were a couple of pieces of ice that just had too high strength even for Chameleon. They installed 2 cards in a remote, face down.</p><p>I didn't know what either were, but I <em>had a feeling</em> that one of the cards was a 2 point agenda which they'd be able to score on their next turn and win the game, and I had a feeling that the other one was Cayambe Grid.</p><p>Cayambe Grid would have meant that I'd need to pay another 6 credits to complete a run on that server. I had already made extremely taxing runs on the previous 2 turns. If it wasn't Cayambe, I could <em>maybe</em> have made the run, but if it was, there was absolutely no way.</p><p>I had no way to be certain whether it was Cayambe, but I suspected it was, and if it <em>actually</em> was, then I knew that it would be a disaster. I'd spend my entire turn trying to make that run, and they'd rez Cayambe, and they'd kick me out of the server, and my turn would have gone down the drain, my final turn, as my hopes and dreams flashed before my eyes as play passed to them and they triple-advanced and scored that blasted 3/2 agenda to win the game. That would be a disaster, after coming so far and making it to 6 points myself.</p><p>If that was the case, I would lose the game. So I had to do something else.</p><p>I started my turn. I ran R&D on click 3 with a broken bank and no Imps to speak of. I accessed one card.</p><p>It was an agenda.</p><p>I won the game.</p><h2>Prizes!</h2><p>Despite being a competitive event, we decided ahead of time that it would be nice to relax and give everyone the same prizes for participating no matter where they placed in the tournament.</p><p>Since Netrunner's cards do not come in randomised packs, and anyone can print their own copy of any legal card to play with, it wouldn't be possible to give away rare cards or anything like that as a prize.</p><p>Instead, everybody got some extremely cool <em>alternate arts</em> for popular cards in the game, including Project Beale, Noise, and Diesel. I like them a lot!</p><h2>My standings</h2><p>I placed 6 out of 10 in the tournament and won half of the games that I played in, 2/4 as Built To Last and 2/4 as Kit. I'm extremely happy with these results! These were also the first games that I won as Kit, at all! I didn't actually manage to achive a win earlier when playing at locals or when playing online on jinteki.net. Those games did help me to think more about my game plan and to refine my deck, though, and I definitely couldn't have won at the tournament without the experience that those preparatory games gave me.</p><p>Still though, regardless of my results, I'm very happy to have just played in the tournament at all because all of the games I played were awesome.</p><p><a href="http://cobr.ai/tournaments/2067">See full tournament results</a></p><h2>A note on Textreme</h2><p>I wrote this post in <a href="https://ash-k.itch.io/textreme-2">the Textreme 2 text editor</a>. It sure as hell made writing this a lot more fun, and I don't think I would have written nearly as much if I was using a more traditional text editor. You should totally check it out. It's available as part of the <a href="https://itch.io/b/902/indie-bundle-for-palestinian-aid">itch.io Palestinian Aid bundle</a> for a limited time (2 days left at time of writing) which you should definitely also get if you haven't already. I'll probably make a post in the future recommending items that I liked in the bundle.</p>]]></summary>
        <published>2021-06-10T03:18:45.284Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Safe pattern matching in CloudTube]]></title>
        <id>https://cadence.moe/blog/2021-05-11-safe-pattern-matching-in-cloudtube</id>
        <link href="https://cadence.moe/blog/2021-05-11-safe-pattern-matching-in-cloudtube"/>
        <updated>2021-05-11T13:37:39.565Z</updated>
        <summary type="html"><![CDATA[<p><a href="https://git.sr.ht/~cadence/cloudtube/commit/db7ccabb3bfa7723d41f78b097b742be1f92e3ae">Today I implemented video filters for CloudTube.</a></p><p><a href="https://git.sr.ht/~cadence/tube-docs/tree/main/item/docs/cloudtube/Filters.md">Here is the documentation.</a></p><p>This was more of a challenge than it appears, despite the large size and scope of that commit.</p><p>On New CloudTube, I want all its features to be available without people needing to enable JavaScript. That includes filters.</p><p>When people create a filter it is because they want to avoid some certain kind of content. Rather than matching titles exactly, some form of pattern matching against the title is extremely useful. What kinds of pattern matching do you know about already?</p><p>Here's the only ones I found in my research:</p><ul><li>Regular expressions</li><li>Globs</li></ul><p>Yeah, really. I thought there would be more.</p><h2>Globs</h2><p>Globs are most commonly used to match paths of files, like <code>**/*.png</code>. The disadvantage here is that video titles are not filesystem paths. In particular, <code>**</code> matches <code>/</code> and <code>*</code> does not, which is completely useless for matching video titles. I am also concerned about platform compatibility with that, since Windows's path separator is <code>\</code>.</p><p>Globs aren't what we want here.</p><h2>Regular expressions</h2><p>Regular expressions <em>are</em> what we want! They're commonplace, so at least some people will already be familiar with how to use them precisely. They're straightforward to use, so new people will be able to work out how to match against a simple video title quite quickly. They don't interfere with the alphabet, so people who don't care about pattern matching won't be interfered with. They're great from the perspective of the people using them.</p><p>Unfortunately, we can't have them.</p><p>Regular expressions have no guarantees about how long they will take to run. While running, they block thread execution, which is very bad in the context of the node.js event loop.</p><p>People being able to provide arbitrary regular expressions for the server to match is a documented security issue, called "<a href="https://duckduckgo.com/?q=regular+expression+denial+of+service&amp;t=hd&amp;va=u&amp;ia=web">regular expression denial of service</a>", or "redos" for short.</p><p>There's a <a href="https://www.regular-expressions.info/catastrophic.html">fair bit</a> written <a href="https://blog.superhuman.com/how-to-eliminate-regular-expression-denial-of-service/">about this,</a> but you should read <a href="https://blog.cloudflare.com/details-of-the-cloudflare-outage-on-july-2-2019/#appendix-about-regular-expression-backtracking">Cloudflare's article now if you don't understand the principles.</a></p><p>A regular expressions represents an NFA, a non-deterministic finite state automaton. The key word here is "non-deterministic", which means that when the expression gets to a certain point, there are multiple ways in which it can continue. In DFAs, the matching always advances towards the end of the string, so you know that it will end at some point. With NFAs, this is not so. At the branch, any of the paths may lead to a match, and all of the paths need to be checked to see if they match. This means that every time there is a non-deterministic transition, the amount of computing you must do to verify the expression will increase significantly.</p><p>Cloudflare's report is about an incident that happened by accident. On CloudTube, the patterns and video titles can be set by anyone, so if I were naively using regular expressions, it would be extremely easy to force catastrophic backtracking and make the server unresponsive.</p><h3>Possible solution: Limiting regular expression runtime</h3><p>If the expression can be run in another thread, leaving the main thread alone to respond to other requests normally, then it can also be terminated if it exceeds a runtime that would be dangerous.</p><p>This method still has disadvantages, though, and one of these is that each regular expression will try to consume 100% of the CPU's time until it terminates.</p><h2>My solution</h2><p>My solution was to create a new language for patterns. <a href="https://git.sr.ht/~cadence/tube-docs/tree/main/item/docs/cloudtube/Filters.md">Again, here is the documentation for it.</a></p><p>The key feature of this language is that every step is deterministic. So for each part of the pattern that is processed, the expression will always, unconditionally, advance closer to the end of the string that is being matched. This way, runtime should never be an issue.</p><p>I was also able to recognise problems with the expression and point them out, if the person makes a mistake in the syntax while writing the pattern.</p><p>My pattern grammar cannot recognise the regular languages, but since we're matching video titles here, and it's not crucial to get a 100% hit rate, I think that's okay. Some fairly expressive patterns are still possible, and if I see reports of legitimate use cases, it is possible to extend the language's capabilities to match more things even with no backtracking.</p><h2>Conclusion</h2><p>It's pretty late and my brain isn't working well so I hope this post all made sense.</p><p>Cadence</p>]]></summary>
        <published>2021-05-11T13:37:39.565Z</published>
    </entry>
</feed>