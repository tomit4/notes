<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/"><category term="adventofcode" label="r/adventofcode"/><updated>2023-01-24T03:27:00+00:00</updated><icon>https://www.redditstatic.com/icon.png/</icon><id>/r/adventofcode.rss</id><link rel="self" href="https://www.reddit.com/r/adventofcode.rss" type="application/atom+xml" /><link rel="alternate" href="https://www.reddit.com/r/adventofcode" type="text/html" /><logo>https://a.thumbs.redditmedia.com/4_u3XW4O7vU9Av9QWjUwuzAezfLHPYjwGxANJtuFFr8.png</logo><subtitle>Advent of Code is an annual Advent calendar of small programming puzzles for a variety of skill sets and skill levels that can be solved in any programming language you like.</subtitle><title>Advent of Code</title><entry><author><name>/u/daggerdragon</name><uri>https://www.reddit.com/user/daggerdragon</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;h2&gt;Message from the Moderators&lt;/h2&gt; &lt;p&gt;Welcome to the last day of Advent of Code 2022! We hope you had fun this year and learned at least one new thing ;)&lt;/p&gt; &lt;p&gt;&lt;del&gt;Keep an eye out for the community fun awards post (link coming soon!):&lt;/del&gt;&lt;/p&gt; &lt;p&gt;The community fun awards post is now live!&lt;/p&gt; &lt;h3&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zur64s/introducing_your_aoc_2022_mistiltoe_elfucators/&quot;&gt;-‚ùÖ- Introducing Your AoC 2022 MisTILtoe Elf-ucators (and Other Prizes) -‚ùÖ-&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;Many thanks to &lt;a href=&quot;/z7mp22&quot;&gt;Veloxx&lt;/a&gt; for kicking us off on the first with a much-needed dose of boots and cats!&lt;/p&gt; &lt;p&gt;Thank you all for playing Advent of Code this year and on behalf of &lt;a href=&quot;/u/topaz2078&quot;&gt;/u/topaz2078&lt;/a&gt;, &lt;a href=&quot;/u/Aneurysm9&quot;&gt;/u/Aneurysm9&lt;/a&gt;, the beta-testers, and the rest of AoC Ops, we wish you a very Merry Christmas (or a very merry Sunday!) and a Happy New Year!&lt;/p&gt; &lt;hr/&gt; &lt;h1&gt;--- Day 25: Full of Hot Air ---&lt;/h1&gt; &lt;hr/&gt; &lt;h2&gt;Post your code solution in this megathread.&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Read the &lt;a href=&quot;/r/adventofcode/w/solution_megathreads/post_guidelines&quot;&gt;full posting rules&lt;/a&gt; in our community wiki before you post! &lt;ul&gt; &lt;li&gt;Include what &lt;a href=&quot;/r/adventofcode/w/solution_megathreads/post_guidelines#wiki_state_your_programming_language.28s.29&quot;&gt;language(s) your solution uses&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Format code blocks using the &lt;a href=&quot;https://www.reddit.com/r/adventofcode/wiki/faqs/code_formatting/code_blocks&quot;&gt;four-spaces Markdown syntax&lt;/a&gt;!&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;Quick link to &lt;a href=&quot;https://topaz.github.io/paste/&quot;&gt;Topaz&amp;#39;s &lt;code&gt;paste&lt;/code&gt;&lt;/a&gt; if you need it for longer code blocks. &lt;a href=&quot;/r/adventofcode/w/faqs/topaz_paste&quot;&gt;What is Topaz&amp;#39;s &lt;code&gt;paste&lt;/code&gt; tool?&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt; &lt;h3&gt;&lt;del&gt;This thread will be unlocked when there are a significant number of people on the global leaderboard with gold stars for today&amp;#39;s puzzle.&lt;/del&gt;&lt;/h3&gt; &lt;h3&gt;&lt;em&gt;EDIT:&lt;/em&gt; Global leaderboard gold cap reached at 00:08:30, megathread unlocked!&lt;/h3&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/daggerdragon&quot;&gt; /u/daggerdragon &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zur1an/2022_day_25_solutions/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zur1an/2022_day_25_solutions/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_zur1an</id><link href="https://www.reddit.com/r/adventofcode/comments/zur1an/2022_day_25_solutions/" /><updated>2022-12-25T05:00:36+00:00</updated><published>2022-12-25T05:00:36+00:00</published><title>-üéÑ- 2022 Day 25 Solutions -üéÑ-</title></entry><entry><author><name>/u/daggerdragon</name><uri>https://www.reddit.com/user/daggerdragon</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;In order to draw out the suspense, we&amp;#39;re gonna start with a handful of ~other prizes~!&lt;/p&gt; &lt;h1&gt;Other Prizes&lt;/h1&gt; &lt;h2&gt;Advent of Playing With Your Toys&lt;/h2&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th&gt;Title&lt;/th&gt; &lt;th&gt;Post/Thread&lt;/th&gt; &lt;th&gt;Username&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Plays With Smartwatches&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9i6s4/2022_day_1_monkey_c_solving_aoc_on_my_garmin/&quot;&gt;[2022 Day 1] [Monkey C] Solving AoC on my Garmin Forerunner 235&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/yawnick&quot;&gt;/u/yawnick&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With TI-83s&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9skl0/2022_day_1z80_assembly_going_to_try_to_solve_this/&quot;&gt;[2022 Day 1][Z80 Assembly] Going to try to solve this year on a TI83&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/MarcusTL12&quot;&gt;/u/MarcusTL12&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With Game Boys&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygvtt2/&quot;&gt;2022 Day 1 &lt;code&gt;Solution Megathread&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/NiliusJulius&quot;&gt;/u/NiliusJulius&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With FPGAs&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zqryhy/2022_day_1_both_haskell_clash_twenty_days_later/&quot;&gt;[2022 Day 1 (both)] [Haskell Clash] Twenty days later, Advent of Firmware working! Program an FPGA to make dedicated hardware!&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/IamfromSpace&quot;&gt;/u/IamfromSpace&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With PS/2s&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zanw87/2022_day_2_c_it_wouldnt_be_a_dos_program_without/&quot;&gt;[2022 Day 2] [C] It wouldn&amp;#39;t be a DOS program without some gratuitous output.&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/JohnGabrielUK&quot;&gt;/u/JohnGabrielUK&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With Factorio&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zbrfl3/2022_day_02_both_partsfactorio_this_one_was/&quot;&gt;[2022 Day 02 (both parts)][Factorio] This one was relatively easy. Spirit is still high.&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/jvandillen&quot;&gt;/u/jvandillen&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With Apple IIgs&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zbj3h8/2022_day_3_part_2_applesoft_basic_should_i_have/&quot;&gt;[2022 Day 3 (Part 2)] [Applesoft BASIC] Should I have brought a different computer for the expedition?&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/clyne0&quot;&gt;/u/clyne0&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With Arduinos&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zbvnd2/2022_day_3c_rucksacks_on_an_arduino_uno/&quot;&gt;[2022 day 3][C] Rucksacks on an Arduino Uno&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/ednl&quot;&gt;/u/ednl&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;üÑµ&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zft4cu/2022_day_8_1_first_difficulty/&quot;&gt;[2022 Day 8 # 1] First difficulty&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/Colin-McMillen&quot;&gt;/u/Colin-McMillen&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With Neopixels&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zhkyin/2022_day_10_was_made_for_this_screen/&quot;&gt;[2022 Day #10] Was made for this screen&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/0100100000010001&quot;&gt;/u/0100100000010001&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With Screen Readers&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zhkiq9/2022_day_10_part_2_todays_puzzle_not_screenreader/&quot;&gt;[2022 Day 10 (Part 2)] Today&amp;#39;s puzzle not screenreader accessible&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/xsailerx&quot;&gt;/u/xsailerx&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With Arduinos&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/ziv65r/2022_day_10_any_arduino_fans_here/&quot;&gt;[2022 Day 10] Any Arduino fans here?&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/jablan&quot;&gt;/u/jablan&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With MSPaint + PowerPoint&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zjqjqb/2022_day_12_apparently_long_fall_boots_are/&quot;&gt;[2022 Day 12] Apparently long fall boots are standard equipments for elves&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/xupej04m3&quot;&gt;/u/xupej04m3&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With 3D Printers&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zl05v0/2022_day_12_3d_printed_the_puzzle_input_and_final/&quot;&gt;[2022 Day #12] 3D printed the puzzle input and final route&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/ryansturmer&quot;&gt;/u/ryansturmer&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With 3D Printers&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zp71cd/2022_day_18_3d_printed_obsidian_chunk/&quot;&gt;[2022 Day 18] 3D printed obsidian chunk&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/jstanley0_&quot;&gt;/u/jstanley0_&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With Pen Plotters&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zp61xz/2022_day_18_isometric_plot_of_the_lava_droplet/&quot;&gt;[2022 Day 18] Isometric plot of the lava droplet (made with an AxiDraw pen plotter) &lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/ruuddotorg&quot;&gt;/u/ruuddotorg&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Plays With The Box The Toy Came In&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zseyft/2022_day_22_part_2_its_a_good_thing_i_saved_the/&quot;&gt;[2022 Day 22 part 2] It&amp;#39;s a good thing I saved the box from this yoyo‚Ä¶&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/mayoff&quot;&gt;/u/mayoff&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;h2&gt;Visualizations&lt;/h2&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th&gt;Title&lt;/th&gt; &lt;th&gt;Post/Thread&lt;/th&gt; &lt;th&gt;Username&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td&gt;AAA Title&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9k0sp/2022_day_1_part_1_terminal_visualization_counting/&quot;&gt;[2022 Day 1 (Part 1)] Terminal Visualization! Counting Calories...&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/naclmolecule&quot;&gt;/u/naclmolecule&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;I Can&amp;#39;t Believe It&amp;#39;s &lt;del&gt;Not&lt;/del&gt; Butter&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zh1i77/2022_day_1_solution_illustrated_by_elves_carrying/&quot;&gt;[2022 Day 1] Solution illustrated by elves carrying large trays of butter.&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/elmusfire&quot;&gt;/u/elmusfire&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;üëç&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zaom3t/2022_day_2_part_1nim_using_emojis_to_visualize/&quot;&gt;[2022 Day 2 Part 1][Nim] Using Emojis to Visualize all games of Rock-Paper-Scissors in Nim&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/mrHtheGreat&quot;&gt;/u/mrHtheGreat&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;60 FPS Sugar Magnate&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9l2va/2022_day1c_raylib_peak_sugar_60_fps/&quot;&gt;[2022 Day1][C# + Raylib] Peak Sugar [60 FPS]&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/p88h&quot;&gt;/u/p88h&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Now I Want A Hamburger&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zc4sdc/2022_day_4_mount_of_wasted_effort/&quot;&gt;[2022 Day 4] Mount of wasted effort&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/nbardiuk&quot;&gt;/u/nbardiuk&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ASCII Crane Operator&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zdszct/2022_day_5_1_small_terminal_python_animation_for/&quot;&gt;[2022 Day 5 #1] Small terminal Python animation for part 1 of Day 5, never tried &amp;quot;drawing&amp;quot; on terminal before but quite proud of the result !&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/MrAntex&quot;&gt;/u/MrAntex&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;*&lt;em&gt;horrified OSHA noises&lt;/em&gt;*&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zdmzs3/2022_day_5_do_i_need_to_submit_my_answer_right/&quot;&gt;[2022 Day 5] Do I need to submit my answer right side up?&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/exclamationmarek&quot;&gt;/u/exclamationmarek&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Crates, Voxel Blocks; Same Thing&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/ze1ptd/2022_day_5_my_minecraft_turtles_worked_very_hard/&quot;&gt;[2022 Day 5] My minecraft turtles worked very hard on this one&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/hellvampire&quot;&gt;/u/hellvampire&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Boxen Go &lt;code&gt;beep boop&lt;/code&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zfa4n3/2022_day_6_frequency_bins_for_tuning_trouble/&quot;&gt;[2022 day 6] Frequency bins for Tuning Trouble&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/ednl&quot;&gt;/u/ednl&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Frequency Scanner&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zdymjf/2022_day_6_open_hailing_frequencies/&quot;&gt;[2022 Day 6] Open Hailing Frequencies&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/Boojum&quot;&gt;/u/Boojum&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Not Sure If &lt;code&gt;Visualization&lt;/code&gt; or WinDirStat&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zetnim/2022_day_7_a_random_directory_of_random_blobs/&quot;&gt;[2022 Day 7] A random directory of random blobs &lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/seligman99&quot;&gt;/u/seligman99&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;We Need To Go Deeper&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zgthvc/2022_day_8_tree_house_visualization_with_tree_js/&quot;&gt;[2022 Day 8] Tree house visualization with Tree JS (!)&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/lars-erik-bleedo&quot;&gt;/u/lars-erik-bleedo&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Excellent Implementation of &lt;code&gt;Visualization&lt;/code&gt; Rules&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zhr69b/2022_day_10_part_2_javascript_interactive_browser/&quot;&gt;[2022 Day 10 (Part 2)] [JavaScript] Interactive browser visualization (PHOTOSENSITIVITY WARNING!)&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/simonlydell&quot;&gt;/u/simonlydell&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;That&amp;#39;s Not What Excel Is For!&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zkehl4/2022_day_12_time_for_some_excel_just_because_we/&quot;&gt;[2022 Day 12] Time for some Excel, just because we can&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/pngipngi&quot;&gt;/u/pngipngi&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;That&amp;#39;sss A Nice &lt;code&gt;Visssualization&lt;/code&gt; You Have There&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zjsgaa/2022_day_12_part_2_in_minecraft/&quot;&gt;[2022 Day 12 (Part 2)] in Minecraft&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/Nnnes&quot;&gt;/u/Nnnes&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Advent of Minecraft Zombies&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zjth9u/2022_day_12_part_1_i_tested_whether_minecraft/&quot;&gt;[2022 Day 12 Part 1] I tested whether Minecraft Zombies can solve Advent of Code pathfinding problems&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/Kawigi&quot;&gt;/u/Kawigi&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Sandy Claus&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zliwbh/2022_day_14_part_2_one_very_sandy_christmas/&quot;&gt;[2022 Day 14, Part 2] One very sandy Christmas&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/seligman99&quot;&gt;/u/seligman99&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ASCII Elephant Animator&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zob9rx/2022_day_17_python_playing_a_familiarish_game_in/&quot;&gt;[2022 Day 17] [Python] Playing a familiar-ish game in the terminal!&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/naclmolecule&quot;&gt;/u/naclmolecule&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Best Worst Game of Tetris Ever&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zoxk64/2022_day_17_part_1_didnt_even_score_any_lines/&quot;&gt;[2022 Day 17 (Part 1)] Didn&amp;#39;t even score any lines...&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/Perska_&quot;&gt;/u/Perska_&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;What An Airhead&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zow3f3/2022_day_18_part_2_trapped_air/&quot;&gt;[2022 Day 18 (Part 2)] trapped air&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/Ok-Curve902&quot;&gt;/u/Ok-Curve902&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Fold... Unfold... Fold... Unfold...&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zt3i1w/2022_day_22_part_2_interactive_visualisation/&quot;&gt;[2022 Day 22 Part 2] Interactive visualisation&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/Eutro864&quot;&gt;/u/Eutro864&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ASCII Borg: Resistance is Futile&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zsn23r/2022_day_22_trip_around_the_ascii_cube/&quot;&gt;[2022 Day 22] Trip around the ASCII Cube&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/p88h&quot;&gt;/u/p88h&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;h2&gt;Craziness&lt;/h2&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th&gt;Title&lt;/th&gt; &lt;th&gt;Post/Thread&lt;/th&gt; &lt;th&gt;Username&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td&gt;My Little Pony Is Now a Programming Language&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iygllu2/&quot;&gt;2022 Day 1 &lt;code&gt;Solution Megathread&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/CCC_037&quot;&gt;/u/CCC_037&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;HTML Is Now A Programming Language&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9ezjb/2022_day_1_solutions/iyjumwq/&quot;&gt;2022 Day 1 &lt;code&gt;Solution Megathread&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/skimmet&quot;&gt;/u/skimmet&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Synthesizers Are Now A Programming Language&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zbfe2m/2022_day_02_part1_bitwig_a_rps_scoring_system/&quot;&gt;[2022 Day 02 (Part1)] [Bitwig] A RPS scoring system made with a modular synth&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/Iain_M_Norman&quot;&gt;/u/Iain_M_Norman&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;CSS Is Now A Programming Language&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zeichc/2022_day_4csshtml_css_is_not_a_programming/&quot;&gt;[2022 Day 4][CSS+HTML] csS iS nOT a pROGrAMmiNg langUage :P Should I continue?&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/kap89&quot;&gt;/u/kap89&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Advent of Code Is Now A Programming Language&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zck4nt/2022_day_4_using_aoc_to_visualize_aoc/&quot;&gt;[2022 Day 4] Using AoC to visualize AoC&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/Kattoor&quot;&gt;/u/Kattoor&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;AoC Inputs Are Now A Programming Language?&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zfhfuv/2022_day_7_using_the_input_as_its_own_solution/&quot;&gt;[2022 Day 7] Using the input as its own solution&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/FancyGazelle3936&quot;&gt;/u/FancyGazelle3936&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Calm Down There, Satan&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zf4iur/hardcore_mode/iza7b2q/&quot;&gt;Hardcore - Mode&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/ffrkAnonymous&quot;&gt;/u/ffrkAnonymous&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Why Would You Do This To Yourself&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/ze9lq9/2022_day_1brainfck_because_why_not/&quot;&gt;[2022 Day 1][Brainf*ck] because why not&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/nicuveo&quot;&gt;/u/nicuveo&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;WHY ARE YOU DOING THIS TO YOURSELF&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zkjsfb/2022_day_10brainfck_one_last/&quot;&gt;[2022 Day 10][Brainf*ck] one last?&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/nicuveo&quot;&gt;/u/nicuveo&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;‡≤†_‡≤†&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zmkamn/2022_day_09_part_1brainfck_a_detailed_explanation/&quot;&gt;[2022 Day 09 part 1][Brainf*ck] a detailed explanation&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/nicuveo&quot;&gt;/u/nicuveo&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Coding Poet Laureate&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zdw0u6/2022_day_6_solutions/iz3wfik/&quot;&gt;2022 Day 6 &lt;code&gt;Solution Megathread&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/DFreiberg&quot;&gt;/u/DFreiberg&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;He Is The Very Model Of A Modern Major-Poet&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zifqmh/2022_day_11_solutions/izvczl0/&quot;&gt;2022 Day 11 &lt;code&gt;Solution Megathread&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/DFreiberg&quot;&gt;/u/DFreiberg&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Chops Potatoes With A Zweihander&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zac2v2/2022_day_2_solutions/iymuvgj/&quot;&gt;2022 Day 2 &lt;code&gt;Solution Megathread&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/Unusual-Form-77&quot;&gt;/u/Unusual-Form-77&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Relevant Username&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zac2v2/2022_day_2_solutions/iymj0df/&quot;&gt;2022 Day 2 &lt;code&gt;Solution Megathread&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/Bad-Coder-69&quot;&gt;/u/Bad-Coder-69&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Needs to Watch The Matrix&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zac2v2/2022_day_2_solutions/iylpd7a/&quot;&gt;2022 Day 2 &lt;code&gt;Solution Megathread&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/Smylers&quot;&gt;/u/Smylers&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Heinous (Ab)use of Git&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zexct2/2022_day_5_cratemover_9001_powered_by_git_bash/&quot;&gt;[2022 Day 5] CrateMover 9001 powered by Git + Bash&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/OsipXD&quot;&gt;/u/OsipXD&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;award ...kinda&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zfpnka/2022_day_8_solutions/izfs9ih/&quot;&gt;2022 Day 8 &lt;code&gt;Solution Megathread&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/wzkx&quot;&gt;/u/wzkx&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Playable Rope Snek&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zhcevh/2022_day_9_i_made_a_playable_snake_clone_using/&quot;&gt;[2022 Day 9] I made a playable snake clone using the elf rope physics!&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/flapje1&quot;&gt;/u/flapje1&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Yo, Dawg, I Heard You Like Assembly&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zhuk85/2022_day_10_crossassembler_from_elvish_assembly/&quot;&gt;[2022 Day 10] Cross-assembler from Elvish assembly to x86_64&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/JustinHuPrime&quot;&gt;/u/JustinHuPrime&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;A Bad Apple&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zhy3ln/2022_day_10_bad_apple_played_on_todays_machine/&quot;&gt;[2022 Day 10] Bad Apple played on today&amp;#39;s machine&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/RocketChase&quot;&gt;/u/RocketChase&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Reverse Engineer&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zpbwhl/2022_day_10_part_2_the_compiler_that_goes_beep/&quot;&gt;[2022, Day 10, Part 2] The compiler that goes Beep Beep&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/seligman99&quot;&gt;/u/seligman99&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Double Your Merriment&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zmgf4g/2022_day_15_i_cannot_wrap_my_head_around_how/&quot;&gt;[2022 Day 15] I cannot wrap my head around how unlikely it was to get the exact same rank on part 1 as I did part 2, with over two hours of time between.&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/TheDrlegoman&quot;&gt;/u/TheDrlegoman&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;del&gt;Cookie&lt;/del&gt; Blueprint Clicker&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zr186t/2022_day_19_except_its_an_idleincremental_game/&quot;&gt;[2022 Day 19] ...except it&amp;#39;s an idle/incremental game!&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/lazyzefiris&quot;&gt;/u/lazyzefiris&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;h2&gt;Community Participation&lt;/h2&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th&gt;Title&lt;/th&gt; &lt;th&gt;Post/Thread&lt;/th&gt; &lt;th&gt;Username&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Unofficial AoC Surveyor&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/ztct0p/unofficial_aoc_2022_survey_results/&quot;&gt;Unofficial AoC 2022 Survey Results!&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/jeroenheijmans&quot;&gt;/u/jeroenheijmans&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Never Too Late To Start&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zhuo0k/2015_day_3_part_2_c_code_review_learning/&quot;&gt;[2015 Day 3 (Part 2) [C++] Code Review, Learning.&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/dr3d3d&quot;&gt;/u/dr3d3d&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Cryptocurrency Malware Assassin&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zb98pn/2022_day_3_something_weird_with_copypasting/iyq0ono/&quot;&gt;[2022 Day 3] Something weird with copy-pasting&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/kowasaur&quot;&gt;/u/kowasaur&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;M&amp;#39;Squid *&lt;em&gt;tips beret&lt;/em&gt;*&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zkt28u/2021_day_4_artwork/&quot;&gt;[2021 Day 4] Artwork&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/timewarpper&quot;&gt;/u/timewarpper&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Rebel Without A Claus&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zdessh/2022_day_5_for_all_those_moaning_about_parsing/iz1h5d4/&quot;&gt;[2022 Day 5] For all those moaning about parsing vertical stacks&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/DeFlaaf&quot;&gt;/u/DeFlaaf&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;This Is The Way&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zf8syy/is_it_okay_if_i_continue_with_tutorials_and/izasnzx/&quot;&gt;Is it okay if I continue with tutorials and explanations?&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/Mumbleton&quot;&gt;/u/Mumbleton&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Successfully Completing a Mod Challenge&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zh8q6x/2022_day_8_exploring_the_forest_in_minecraft/&quot;&gt;[2022 Day 8] Exploring the Forest in Minecraft + mod challenge&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/BluePsychoRanger&quot;&gt;/u/BluePsychoRanger&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Senpai of Maths&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zjsi12/2022_day_11_on_the_spoiler_math_involved/&quot;&gt;[2022 Day 11] On the sÃµpÃµoÃµiÃµlÃµeÃµrÃµ math involved&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/MichalMarsalek&quot;&gt;/u/MichalMarsalek&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Advent of &lt;code&gt;Visualization&lt;/code&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zlrjxg/2022_day_14_be_like/&quot;&gt;[2022 Day 14] Be like&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/mvrelgrande&quot;&gt;/u/mvrelgrande&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Come For The Falling Sand, Stay For The Napalm&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zm8aqr/2022_day_14_my_falling_sand_visualization_video/j0aa9ei/?context=2&quot;&gt;[2022 Day 14] My falling sand visualization video&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/ChucklesTheBeard&quot;&gt;/u/ChucklesTheBeard&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;OP Delivers&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zor3i7/2022_day_18_minecraft_a_lovely_bauble/j0olbis/?context=1&quot;&gt;[2022 Day 18] [Minecraft] A lovely bauble&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/AllanTaylor314&quot;&gt;/u/AllanTaylor314&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Evolution Complete&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zptrio/2022_day_19_i_think_i_know_what_tomorrows/&quot;&gt;[2022 Day 19] I think I know what tomorrow&amp;#39;s challenge will be &lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/SLiV9&quot;&gt;/u/SLiV9&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Requires Documentation&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zpihwi/2022_day_19_solutions/j0xsa7w/&quot;&gt;2022 Day 19 &lt;code&gt;Solution Megathread&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/DFreiberg&quot;&gt;/u/DFreiberg&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Dynamic Programmer&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zpihwi/2022_day_19_solutions/j139jgg/&quot;&gt;2022 Day 19 &lt;code&gt;Solution Megathread&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/u/dannybres&quot;&gt;/u/dannybres&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;Y&amp;#39;all are &lt;em&gt;awesome&lt;/em&gt;. Keep being awesome! &amp;lt;3&lt;/p&gt; &lt;hr/&gt; &lt;h1&gt;Advent of Code 2022 MisTILtoe Elf-ucators&lt;/h1&gt; &lt;p&gt;Rules and all submissions are here: &lt;a href=&quot;/z9he28&quot;&gt;AoC 2022:üåøüçí MisTILtoe Elf-ucation üßë‚Äçüè´&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Thank you to the magnificent folks who participated this year! As promised, y&amp;#39;all got your silver for participation. And now, without further ado, your winners!&lt;/p&gt; &lt;h2&gt;Teachers (&lt;em&gt;aka&lt;/em&gt; community favorites)&lt;/h2&gt; &lt;p&gt;In alphabetical order:&lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align=&quot;left&quot;&gt;Title&lt;/th&gt; &lt;th align=&quot;center&quot;&gt;Teacher&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/izjsn3s/&quot;&gt;25 days in 25 languages&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/EatonMesss&quot;&gt;/u/EatonMesss&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/j0m4rkb/&quot;&gt;A Video Guide to Speedcoding&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/jonathan_paulson&quot;&gt;/u/jonathan_paulson&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/j13zlqc/&quot;&gt;A language a day keeps the senior dev&amp;#39; away&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/Zaorhion_&quot;&gt;/u/Zaorhion_&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/izx2d5w/&quot;&gt;AOC on the 1989 Game Boy&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/NiliusJulius&quot;&gt;/u/NiliusJulius&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/j0ayspf/&quot;&gt;Advent of Animations&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/Boojum&quot;&gt;/u/Boojum&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/izfwxme/&quot;&gt;Advent of Poetry 2022&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/DFreiberg&quot;&gt;/u/DFreiberg&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/j1bw3sj/&quot;&gt;Advent(ures) of Code - Edition 2022&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/Key__Strokes&quot;&gt;/u/Key__Strokes&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/izemxsv/&quot;&gt;Doing it like it&amp;#39;s 1989: on the Apple //c&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/Colin&quot;&gt;/u/Colin&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/izrucex/&quot;&gt;Let&amp;#39;s Visualize!&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/TenViki&quot;&gt;/u/TenViki&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/iz92hv9/&quot;&gt;Solving AoC Puzzles on my Garmin watch&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/yawnick&quot;&gt;/u/yawnick&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/j0qlo9n/&quot;&gt;The Beginner&amp;#39;s Guide to Advent of Code 2022&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/jcbbjjttt&quot;&gt;/u/jcbbjjttt&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;Enjoy your Reddit Silver&lt;sup&gt;1&lt;/sup&gt; and have a happy New Year!&lt;/p&gt; &lt;h2&gt;Professors&lt;/h2&gt; &lt;p&gt;In a surprise plot twist this year, the final vote totals have &lt;em&gt;two pairs&lt;/em&gt; of folks tied for top 3, so we&amp;#39;re gonna have &lt;em&gt;five&lt;/em&gt; professors! Congratulations! &lt;del&gt;You&amp;#39;ll have to compete for tenure amongst yourselves...&lt;/del&gt;&lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align=&quot;left&quot;&gt;Title&lt;/th&gt; &lt;th align=&quot;center&quot;&gt;Professor&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/j0ayspf/&quot;&gt;Advent of Animations&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/Boojum&quot;&gt;/u/Boojum&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/izfwxme/&quot;&gt;Advent of Poetry 2022&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/DFreiberg&quot;&gt;/u/DFreiberg&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/j0m4rkb/&quot;&gt;A Video Guide to Speedcoding&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/jonathan_paulson&quot;&gt;/u/jonathan_paulson&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/izemxsv/&quot;&gt;Doing it like it&amp;#39;s 1989: on the Apple //c&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/Colin-McMillen&quot;&gt;/u/Colin-McMillen&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/j0qlo9n/&quot;&gt;The Beginner&amp;#39;s Guide to Advent of Code 2022&lt;/a&gt;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;/u/jcbbjjttt&quot;&gt;/u/jcbbjjttt&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;Enjoy your Reddit Gold&lt;sup&gt;1&lt;/sup&gt; and have a happy New Year!&lt;/p&gt; &lt;h2&gt;Senpai Supreme&lt;/h2&gt; &lt;p&gt;And finally, just like in Rock Paper Scissors, there can only ever be &lt;em&gt;one&lt;/em&gt; winner, and there is indeed one epic-level elf-ucator this year. Please welcome your Senpai Supreme of 2022:&lt;/p&gt; &lt;h1&gt;&lt;a href=&quot;/u/Boojum&quot;&gt;/u/Boojum&lt;/a&gt; for their truly magnificent &lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/z9he28/advent_of_code_2022_mistiltoe_elfucation/j0ayspf/&quot;&gt;Advent of Animations&lt;/a&gt;!&lt;/h1&gt; &lt;p&gt;Enjoy your Reddit Platinum&lt;sup&gt;1&lt;/sup&gt; and have a happy New Year!&lt;/p&gt; &lt;hr/&gt; &lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; &lt;del&gt;Since there&amp;#39;s so many awards to give out, I will award all metals after this post goes live. I&amp;#39;ll update when I&amp;#39;ve completed all awardings.&lt;/del&gt; All awards have been given out! Let me know if I&amp;#39;ve somehow overlooked somebody.&lt;/p&gt; &lt;hr/&gt; &lt;p&gt;Thank you all for playing Advent of Code this year and on behalf of &lt;a href=&quot;/u/topaz2078&quot;&gt;/u/topaz2078&lt;/a&gt;, &lt;a href=&quot;/u/Aneurysm9&quot;&gt;/u/Aneurysm9&lt;/a&gt;, the beta-testers, and the rest of AoC Ops, we wish you a very Merry Christmas (or a very merry Sunday!) and a Happy New Year!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/daggerdragon&quot;&gt; /u/daggerdragon &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zur64s/introducing_your_aoc_2022_mistiltoe_elfucators/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zur64s/introducing_your_aoc_2022_mistiltoe_elfucators/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_zur64s</id><link href="https://www.reddit.com/r/adventofcode/comments/zur64s/introducing_your_aoc_2022_mistiltoe_elfucators/" /><updated>2022-12-25T05:09:07+00:00</updated><published>2022-12-25T05:09:07+00:00</published><title>-‚ùÖ- Introducing Your AoC 2022 MisTILtoe Elf-ucators (and Other Prizes) -‚ùÖ-</title></entry><entry><author><name>/u/rafaelleru</name><uri>https://www.reddit.com/user/rafaelleru</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;I am trying to model the filesystem as a tree, manually creating and managing nodes, but it is very hard. I am following this article but I am a bit lost, any advices or hints to deal with this puzzle?&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://applied-math-coding.medium.com/media/324b8a6381d9870da60a2c7384f6d2c8&quot;&gt;https://applied-math-coding.medium.com/media/324b8a6381d9870da60a2c7384f6d2c8&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;Here is my code so far, but I am a bit los with the Rc and RefCell crates.&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;use std::rc::Rc; use std::cell::RefCell; #[derive(Default)] struct File { name: String, size: usize } struct FileSystemNode { childs: Vec&amp;lt;Rc&amp;lt;RefCell&amp;lt;FileSystemNode&amp;gt;&amp;gt;&amp;gt;, files: Vec&amp;lt;Rc&amp;lt;RefCell&amp;lt;File&amp;gt;&amp;gt;&amp;gt;, parent: Option&amp;lt;Rc&amp;lt;RefCell&amp;lt;FileSystemNode&amp;gt;&amp;gt;&amp;gt;, name: String } impl FileSystemNode { fn new(name: String) -&amp;gt; FileSystemNode { return FileSystemNode { name: name, childs: vec![], files: vec![], parent: None } } } fn main() { let input : Vec&amp;lt;&amp;amp;str&amp;gt; = include_str!(&amp;quot;../example.txt&amp;quot;).trim().lines().collect::&amp;lt;Vec&amp;lt;&amp;amp;str&amp;gt;&amp;gt;(); let root = Rc::new(RefCell::new(FileSystemNode::new(&amp;quot;/&amp;quot;.to_string()))); let current_node = Rc::clone(&amp;amp;root); // skip 1 element because I am building / manually as teh start node for line in input.iter().skip(1) { if line.starts_with(&amp;quot;$&amp;quot;) { if line.contains(&amp;quot;cd&amp;quot;) { if line.contains(&amp;quot;..&amp;quot;) { //if !current_node.parent.is_none() { //current_node = current_node.parent.unwrap(); //} } else { let new_node = FileSystemNode::new(line.trim().split(&amp;quot; &amp;quot;).collect::&amp;lt;Vec&amp;lt;&amp;amp;str&amp;gt;&amp;gt;().last().unwrap().to_string()); let current_node = new_node; } } } } println!(&amp;quot;Node is: {}&amp;quot;, current_node.name); } &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/rafaelleru&quot;&gt; /u/rafaelleru &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10je75e/2022_day_7rust_working_with_trees_seems_like_a/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10je75e/2022_day_7rust_working_with_trees_seems_like_a/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10je75e</id><link href="https://www.reddit.com/r/adventofcode/comments/10je75e/2022_day_7rust_working_with_trees_seems_like_a/" /><updated>2023-01-23T14:49:16+00:00</updated><published>2023-01-23T14:49:16+00:00</published><title>[2022 Day 7][Rust] Working with trees seems like a pain in the ass with Rust.</title></entry><entry><author><name>/u/GiNgErMaN-</name><uri>https://www.reddit.com/user/GiNgErMaN-</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Im going back and solving old years if it isn&amp;#39;t clear lol. So I have a solution but it&amp;#39;s super inefficient, basically going through the input and recursively finding combinations. It works for small data sets but gets slow fast. In the solution megathread there&amp;#39;s just a bunch of solutions but I am having trouble understanding. Anyone know a concept or method I can research to solve this more elegantly? Thanks y&amp;#39;all got help a lot quicker than i thought :)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/GiNgErMaN-&quot;&gt; /u/GiNgErMaN- &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10jg0eu/2015_day17_part1/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10jg0eu/2015_day17_part1/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10jg0eu</id><link href="https://www.reddit.com/r/adventofcode/comments/10jg0eu/2015_day17_part1/" /><updated>2023-01-23T16:05:47+00:00</updated><published>2023-01-23T16:05:47+00:00</published><title>[2015 Day17 Part1]</title></entry><entry><author><name>/u/TheSunshinator</name><uri>https://www.reddit.com/user/TheSunshinator</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;I&amp;#39;m stuck. I always get the same answer. There are multiple possibilities. It makes no sense, yet it works fine for the example. Is there a place that provides more test cases, examples of input with answers that might help pinpoint the problem?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/TheSunshinator&quot;&gt; /u/TheSunshinator &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10jkaw9/2022_day_16_part_2_can_i_get_more_test_cases/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10jkaw9/2022_day_16_part_2_can_i_get_more_test_cases/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10jkaw9</id><link href="https://www.reddit.com/r/adventofcode/comments/10jkaw9/2022_day_16_part_2_can_i_get_more_test_cases/" /><updated>2023-01-23T18:57:37+00:00</updated><published>2023-01-23T18:57:37+00:00</published><title>[2022 Day 16 (Part 2)] Can I get more test cases somewhere?</title></entry><entry><author><name>/u/rafaelleru</name><uri>https://www.reddit.com/user/rafaelleru</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Hi all, I solved day 6. it was easy using window method, but I am stuck in getting the starting and ending index of the window, what I did instead was to print the substring solving the problem and get its column on vim. &lt;/p&gt; &lt;p&gt;Can anyone help me to complete the problem by getting the given position for the right window? here is my code: &lt;/p&gt; &lt;pre&gt;&lt;code&gt;fn main() { let input : Vec&amp;lt;char&amp;gt; = include_str!(&amp;quot;../example.txt&amp;quot;).trim().chars().collect(); for window in input.windows(4) { // Use vector and insert as show by ThePrimeagean in the Yt video explaining this problem. // for this size of vector insert and check linearly than using a data type such as a set. let mut idx : Vec&amp;lt;char&amp;gt; = Vec::new(); for c in window { if idx.contains(c) { break; } else { idx.push(*c); } } if idx.len() == 4 { for c in idx { print!(&amp;quot;{}&amp;quot; , c); } break; } } // TODO: return the index of the window. I already solved it by searching the substring in vim // and getting the column xD // Part 2 println!(&amp;quot;\nPart 2&amp;quot;); for window in input.windows(14) { let mut idx : Vec&amp;lt;char&amp;gt; = Vec::new(); for c in window { if idx.contains(c) { break; } else { idx.push(*c); } } if idx.len() == 14 { for c in idx { print!(&amp;quot;{}&amp;quot; , c); } //let chain : String = idx.iter().collect().to_string(); break; } } } &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/rafaelleru&quot;&gt; /u/rafaelleru &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10jbdl9/2022_day_6rust_how_to_get_a_window_index/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10jbdl9/2022_day_6rust_how_to_get_a_window_index/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10jbdl9</id><link href="https://www.reddit.com/r/adventofcode/comments/10jbdl9/2022_day_6rust_how_to_get_a_window_index/" /><updated>2023-01-23T12:31:15+00:00</updated><published>2023-01-23T12:31:15+00:00</published><title>[2022 Day 6][rust] how to get a window index?</title></entry><entry><author><name>/u/MrHarcombe-BCS</name><uri>https://www.reddit.com/user/MrHarcombe-BCS</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Thanks to you all, as a community, directly or otherwise, this is the first year I&amp;#39;ve managed to ever complete all the challenges for myself with only hints (and no looking at anyone else&amp;#39;s solutions) from this subreddit.&lt;/p&gt; &lt;p&gt;That&amp;#39;s a huge step for me, and I&amp;#39;ve learned so much. I&amp;#39;m truly grateful to all who contributed to conversations (whether in response to questions and/or comments I posted or to others&amp;#39;) - between you all I&amp;#39;ve picked up enough this year to feel I actually *understood* all of the puzzles and my solutions.&lt;/p&gt; &lt;p&gt;Now to work back through previous years and get myself up to the full 40 stars - I&amp;#39;ve already applied my new-found knowledge to 2015 Day 22 üëç&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://imgur.com/a/q8XwPWp&quot;&gt;Huzzah üéâ&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/MrHarcombe-BCS&quot;&gt; /u/MrHarcombe-BCS &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10is8z7/2022_day_25python_huge_thank_you_to_you_all/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10is8z7/2022_day_25python_huge_thank_you_to_you_all/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10is8z7</id><link href="https://www.reddit.com/r/adventofcode/comments/10is8z7/2022_day_25python_huge_thank_you_to_you_all/" /><updated>2023-01-22T19:44:01+00:00</updated><published>2023-01-22T19:44:01+00:00</published><title>[2022 Day 25][Python] Huge thank you to you all, whether you know it or not!</title></entry><entry><author><name>/u/fornwall</name><uri>https://www.reddit.com/user/fornwall</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/fornwall&quot;&gt; /u/fornwall &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://aoc.fornwall.net/show/?year=2022&amp;amp;day=23&amp;amp;part=2&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10j1mug/2022_day_23_animated_svg_visualization/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10j1mug</id><link href="https://www.reddit.com/r/adventofcode/comments/10j1mug/2022_day_23_animated_svg_visualization/" /><updated>2023-01-23T02:38:35+00:00</updated><published>2023-01-23T02:38:35+00:00</published><title>[2022 Day 23] Animated SVG visualization</title></entry><entry><author><name>/u/fornwall</name><uri>https://www.reddit.com/user/fornwall</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/fornwall&quot;&gt; /u/fornwall &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://aoc.fornwall.net/show/?year=2022&amp;amp;day=24&amp;amp;part=2&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10j1n06/2022_day_24_animated_svg_visualization/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10j1n06</id><link href="https://www.reddit.com/r/adventofcode/comments/10j1n06/2022_day_24_animated_svg_visualization/" /><updated>2023-01-23T02:38:49+00:00</updated><published>2023-01-23T02:38:49+00:00</published><title>[2022 Day 24] Animated SVG visualization</title></entry><entry><author><name>/u/rafaelleru</name><uri>https://www.reddit.com/user/rafaelleru</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Hi all, just letting here my code to get some reviews and advice. It was tricky for me to solve day 5 using rust.&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;use std::collections::HashMap; use regex::Regex; fn main() { let re : Regex = Regex::new(r&amp;quot;[a-zA-Z]&amp;quot;).unwrap(); let input : &amp;amp;str = include_str!(&amp;quot;../input.txt&amp;quot;); let mut stacks : HashMap&amp;lt;usize, Vec&amp;lt;&amp;amp;str&amp;gt;&amp;gt; = HashMap::new(); let mut stacks2 : HashMap&amp;lt;usize, Vec&amp;lt;&amp;amp;str&amp;gt;&amp;gt; = HashMap::new(); let move_regex : Regex = Regex::new(r&amp;quot;move (\d+) from (\d+) to (\d+)&amp;quot;).unwrap(); // Build the stacks for l in input.lines() { if l == &amp;quot;&amp;quot; { break; } for letter in re.find_iter(l) { let destination_stack : usize = (&amp;amp;letter.start() - 1) / 4; let stack = stacks.entry(destination_stack).or_insert(vec![]); stack.insert(0, letter.as_str()); } } stacks2 = stacks.clone(); for line in input.lines() { if line.starts_with(&amp;quot;move&amp;quot;) { let captures = move_regex.captures(line).unwrap(); let moves = &amp;amp;captures[1].parse::&amp;lt;i32&amp;gt;().unwrap(); let mut to_be_moved : Vec&amp;lt;&amp;amp;str&amp;gt; = Vec::new(); for _i in 0..*moves { let source_stack = stacks.get_mut(&amp;amp;(&amp;amp;captures[2].parse::&amp;lt;usize&amp;gt;().unwrap() - 1)).unwrap(); to_be_moved.push(source_stack.pop().unwrap()); } // here I can get another mut ref to the hash map because source_stack is not in the // scope anymore let stack_idx = &amp;amp;captures[3].parse::&amp;lt;usize&amp;gt;().unwrap() - 1; let destination_stack = stacks.get_mut(&amp;amp;stack_idx).unwrap(); for c in to_be_moved.iter() { destination_stack.push(c); } } } // I use this for to print the string shorted, if we iterate over stacks output is not printed // in the rigth order println!(&amp;quot;Solution for part 1:&amp;quot;); for i in 0..stacks.len() { print!(&amp;quot;{}&amp;quot;, stacks[&amp;amp;i].last().unwrap()); } // Part 2 for line in input.lines() { if line.starts_with(&amp;quot;move&amp;quot;) { let captures = move_regex.captures(line).unwrap(); let moves = &amp;amp;captures[1].parse::&amp;lt;i32&amp;gt;().unwrap(); let mut to_be_moved : Vec&amp;lt;&amp;amp;str&amp;gt; = Vec::new(); for _i in 0..*moves { let source_stack = stacks2.get_mut(&amp;amp;(&amp;amp;captures[2].parse::&amp;lt;usize&amp;gt;().unwrap() - 1)).unwrap(); to_be_moved.insert(0, source_stack.pop().unwrap()); } // here I can get another mut ref to the hash map because source_stack is not in the // scope anymore let stack_idx = &amp;amp;captures[3].parse::&amp;lt;usize&amp;gt;().unwrap() - 1; let destination_stack = stacks2.get_mut(&amp;amp;stack_idx).unwrap(); for c in to_be_moved.iter() { destination_stack.push(c); } } } println!(&amp;quot;Solution for part 2:&amp;quot;); for i in 0..stacks2.len() { print!(&amp;quot;{}&amp;quot;, stacks2[&amp;amp;i].last().unwrap()); } } &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;I am sure I could solve part 2 with some slicing magic in the array, but I went with the code that I had already written. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/rafaelleru&quot;&gt; /u/rafaelleru &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10j9pc9/2022_day_5rust_more_elegant_way_to_do_it/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10j9pc9/2022_day_5rust_more_elegant_way_to_do_it/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10j9pc9</id><link href="https://www.reddit.com/r/adventofcode/comments/10j9pc9/2022_day_5rust_more_elegant_way_to_do_it/" /><updated>2023-01-23T10:50:34+00:00</updated><published>2023-01-23T10:50:34+00:00</published><title>[2022 Day 5][Rust] More elegant way to do it</title></entry><entry><author><name>/u/IMIKECI</name><uri>https://www.reddit.com/user/IMIKECI</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;I&amp;#39;m trying to solve this by detecting a cycle by caching the state where the key is Jet Index, Rock Type and Relative Heights (of each column, i.e. floor pattern).&lt;/p&gt; &lt;p&gt;I&amp;#39;ve read &lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zwlx2r/comment/j1vsw67/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&quot;&gt;this post&lt;/a&gt; which suggests my Cycle Length (35) and Cycle Height (53) are correct on the example input. But it also suggests the cycle starts at rock 16 (?) which doesn&amp;#39;t match my output so I&amp;#39;m assuming I have messed up the maths somewhere or an off by one error of some sort?&lt;/p&gt; &lt;p&gt;Any help or guidance appreciated!&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/mike-conroy/advent-of-code-22/blob/master/day17/solve.py#L204&quot;&gt;https://github.com/mike-conroy/advent-of-code-22/blob/master/day17/solve.py#L204&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/IMIKECI&quot;&gt; /u/IMIKECI &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10iurpj/2022_day_17_part_2_python_help_with_part_2_please/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10iurpj/2022_day_17_part_2_python_help_with_part_2_please/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10iurpj</id><link href="https://www.reddit.com/r/adventofcode/comments/10iurpj/2022_day_17_part_2_python_help_with_part_2_please/" /><updated>2023-01-22T21:27:52+00:00</updated><published>2023-01-22T21:27:52+00:00</published><title>[2022 Day 17 (Part 2)] [Python] Help with Part 2 Please?</title></entry><entry><author><name>/u/K1ck3rTW</name><uri>https://www.reddit.com/user/K1ck3rTW</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;I&amp;#39;m just trying to understand how the most pressure possible to be release is 1651. Where am I going wrong?&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;30min start &lt;/p&gt; &lt;p&gt;29min DD (move) &lt;/p&gt; &lt;p&gt;28min DD (open) 28 * 20 = 560 &lt;/p&gt; &lt;p&gt;27min CC (move) &lt;/p&gt; &lt;p&gt;26min BB (move) &lt;/p&gt; &lt;p&gt;25min BB (open) 25 * 13 = 325 &lt;/p&gt; &lt;p&gt;24min AA (move) &lt;/p&gt; &lt;p&gt;23min II (move) &lt;/p&gt; &lt;p&gt;22min JJ (move) &lt;/p&gt; &lt;p&gt;21min JJ (move) Open 21 * 21 = 441 &lt;/p&gt; &lt;p&gt;20min II (move) &lt;/p&gt; &lt;p&gt;19min AA (move) &lt;/p&gt; &lt;p&gt;18min DD (move) &lt;/p&gt; &lt;p&gt;17min EE (move) &lt;/p&gt; &lt;p&gt;16min FF (move) &lt;/p&gt; &lt;p&gt;15min GG (move) &lt;/p&gt; &lt;p&gt;14min HH (move) &lt;/p&gt; &lt;p&gt;13min HH (open) 13 * 22 = 286 &lt;/p&gt; &lt;p&gt;12min GG (move) &lt;/p&gt; &lt;p&gt;11min FF (move) &lt;/p&gt; &lt;p&gt;10min EE (move) &lt;/p&gt; &lt;p&gt;9min EE (open) 10 * 3 = 30 &lt;/p&gt; &lt;p&gt;8min DD (move) &lt;/p&gt; &lt;p&gt;7min CC (move) &lt;/p&gt; &lt;p&gt;6min CC (open) 6 * 2 = 12 &lt;/p&gt; &lt;p&gt;5min done&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;560 + 325 + 441 + 286 + 30 + 12 = 1654&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/K1ck3rTW&quot;&gt; /u/K1ck3rTW &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10i4z1b/2022_day_16_part_1_trouble_understanding_the/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10i4z1b/2022_day_16_part_1_trouble_understanding_the/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10i4z1b</id><link href="https://www.reddit.com/r/adventofcode/comments/10i4z1b/2022_day_16_part_1_trouble_understanding_the/" /><updated>2023-01-21T23:30:42+00:00</updated><published>2023-01-21T23:30:42+00:00</published><title>[2022 Day 16 (Part 1)] Trouble understanding the example</title></entry><entry><author><name>/u/Itizir</name><uri>https://www.reddit.com/user/Itizir</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/Itizir&quot;&gt; /u/Itizir &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://i.redd.it/08b6x5vbh7da1.jpg&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10gsann/2022_c_flipper_zero_stm32_100kb_ram_available_all/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10gsann</id><link href="https://www.reddit.com/r/adventofcode/comments/10gsann/2022_c_flipper_zero_stm32_100kb_ram_available_all/" /><updated>2023-01-20T09:09:34+00:00</updated><published>2023-01-20T09:09:34+00:00</published><title>[2022] [C] Flipper Zero (STM32, ~100KB RAM available) - ALL 25 days</title></entry><entry><author><name>/u/JustAnotherDude_</name><uri>https://www.reddit.com/user/JustAnotherDude_</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;I have code that is getting me the correct answers for the samples with 86, 132 and 81 steps, but on the one that is 136 steps it is returning 140. Is anyone able to spot my mistake(s) or point me towards something I need to learn more about to resolve my issues? Thanks!&lt;/p&gt; &lt;p&gt;I&amp;#39;m pre-calculating the distances from the starting point to each key, and then from each key to every other key, along with storing the required and collected keys along those paths.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://pastebin.com/ZJYgvfKh&quot;&gt;https://pastebin.com/ZJYgvfKh&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/JustAnotherDude_&quot;&gt; /u/JustAnotherDude_ &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10hk4go/2019_day_18_part_1/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10hk4go/2019_day_18_part_1/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10hk4go</id><link href="https://www.reddit.com/r/adventofcode/comments/10hk4go/2019_day_18_part_1/" /><updated>2023-01-21T05:54:54+00:00</updated><published>2023-01-21T05:54:54+00:00</published><title>[2019 Day 18 Part 1]</title></entry><entry><author><name>/u/Economy-Roll-6041</name><uri>https://www.reddit.com/user/Economy-Roll-6041</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Hello,&lt;/p&gt; &lt;p&gt;I am doing the puzzle with Excel, mostly because I also wanted to boost my skills in Excel. I am on Day 7 part 1 and now I am a bit stuck.&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;Directory names are repeated with listing of content generating different directory size. Just wanted to have a confirmation that this is as expected, because same directory names can be used of course.&lt;/p&gt; &lt;p&gt;However, I am not getting the right result so trying to figure out if this could be an issue.&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;Regards,&lt;/p&gt; &lt;p&gt;FK&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/Economy-Roll-6041&quot;&gt; /u/Economy-Roll-6041 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10gztgz/day_7_part_1_same_directory_names_and_different/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10gztgz/day_7_part_1_same_directory_names_and_different/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10gztgz</id><link href="https://www.reddit.com/r/adventofcode/comments/10gztgz/day_7_part_1_same_directory_names_and_different/" /><updated>2023-01-20T15:30:44+00:00</updated><published>2023-01-20T15:30:44+00:00</published><title>Day 7 part 1 - Same directory names and different size</title></entry><entry><author><name>/u/Pilot0001</name><uri>https://www.reddit.com/user/Pilot0001</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Hi there,&lt;/p&gt; &lt;p&gt;I&amp;#39;m completely stuck. Maybe I&amp;#39;m overseeing something, but I currently don&amp;#39;t see a way to modify the numbers without modifying their mathematical properties. Any hint is appreciated.&lt;/p&gt; &lt;p&gt;Thank you in advance!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/Pilot0001&quot;&gt; /u/Pilot0001 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10gsu50/2022_day_11_part_2_en_any_hint_for_the_solution/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10gsu50/2022_day_11_part_2_en_any_hint_for_the_solution/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10gsu50</id><link href="https://www.reddit.com/r/adventofcode/comments/10gsu50/2022_day_11_part_2_en_any_hint_for_the_solution/" /><updated>2023-01-20T09:44:18+00:00</updated><published>2023-01-20T09:44:18+00:00</published><title>[2022 Day 11 (Part 2)] [en] Any hint for the solution?</title></entry><entry><author><name>/u/rafaelleru</name><uri>https://www.reddit.com/user/rafaelleru</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;I am parsing the input text with a regex that matches letters until it encounters an empty line, my idea is to get the position of the match and based on that build several heaps with the letters in the given order, but I cannot get any idea on how to map position 1 to the 1st stack, position 5 to the 2nd stack and so on. Here is my code so far: &lt;/p&gt; &lt;pre&gt;&lt;code&gt;use lazy_static::lazy_static; use regex::Regex; fn main() { let input : Vec&amp;lt;&amp;amp;str&amp;gt; = include_str!(&amp;quot;../example.txt&amp;quot;).split(&amp;quot;\n&amp;quot;).collect(); //let stacks : Vec&amp;lt;Vec&amp;lt;char&amp;gt;&amp;gt; = Vec::new(); lazy_static! { static ref RE : Regex = Regex::new(r&amp;quot;[a-zA-Z]&amp;quot;).unwrap(); } // Build the stacks for l in input { if l == &amp;quot;&amp;quot; { println!(&amp;quot;Empty line&amp;quot;); break; } for letter in RE.find_iter(l) { print!(&amp;quot;{} &amp;quot;, &amp;amp;letter.start()); print!(&amp;quot;{} &amp;quot;, &amp;amp;letter.as_str()); } print!(&amp;quot;\n&amp;quot;); } // Problem logic goes here. } &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Can anyone point me in the right direction to build my data structure? &lt;/p&gt; &lt;p&gt;Also, I will take any good rust advice since I am still learning it.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/rafaelleru&quot;&gt; /u/rafaelleru &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10gslsg/2022_day_5_part_1rust_help_to_map_letters/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10gslsg/2022_day_5_part_1rust_help_to_map_letters/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10gslsg</id><link href="https://www.reddit.com/r/adventofcode/comments/10gslsg/2022_day_5_part_1rust_help_to_map_letters/" /><updated>2023-01-20T09:29:30+00:00</updated><published>2023-01-20T09:29:30+00:00</published><title>[2022 Day 5 (Part 1)][Rust] help to map letters position to a given stack.</title></entry><entry><author><name>/u/Key__Strokes</name><uri>https://www.reddit.com/user/Key__Strokes</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/Key__Strokes&quot;&gt; /u/Key__Strokes &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://youtu.be/AYOx1dxQ8B8&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10gv0se/2022_day_6_part_1part_2_javascript_explanation/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10gv0se</id><link href="https://www.reddit.com/r/adventofcode/comments/10gv0se/2022_day_6_part_1part_2_javascript_explanation/" /><updated>2023-01-20T11:51:37+00:00</updated><published>2023-01-20T11:51:37+00:00</published><title>[2022 Day 6 (Part 1/Part 2)] [Javascript] Explanation with Coding - My obsession with AoC makes me want to cover all the days gradually, but I'd rather stop if its not helpful. Please post in comments if these videos help or not :)</title></entry><entry><author><name>/u/Educational_Twist237</name><uri>https://www.reddit.com/user/Educational_Twist237</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Hello,&lt;/p&gt; &lt;p&gt;I&amp;#39;m writing a solution for day 13... but I&amp;#39;m gtting wrong result (even if tests on given test works...) any ideas (I&amp;#39;m getting &lt;span class=&quot;md-spoiler-text&quot;&gt;5689&lt;/span&gt; ) ?&lt;/p&gt; &lt;pre&gt;&lt;code&gt;use std::{cmp::Ordering, iter::Peekable, str::FromStr}; use anyhow::{anyhow, Context, Result}; use challenges_common::MyIterTools; use itertools::{EitherOrBoth, Itertools}; fn main() { let pairs: Vec&amp;lt;Entry&amp;gt; = parse(&amp;amp;[&amp;quot;aoc&amp;quot;, &amp;quot;2022&amp;quot;, &amp;quot;13.txt&amp;quot;]); println!(&amp;quot;part1 : {}&amp;quot;, part1(&amp;amp;pairs)) } fn parse(path: &amp;amp;[&amp;amp;str]) -&amp;gt; Vec&amp;lt;Entry&amp;gt; { challenges_common::get_input_lines(path) .split(|line| line.is_empty()) .enumerate() .map(|(index, lines)| Entry { index: index + 1, left: lines[0].parse().unwrap(), right: lines[1].parse().unwrap(), }) .collect() } fn part1(pairs: &amp;amp;Vec&amp;lt;Entry&amp;gt;) -&amp;gt; usize { pairs .iter() .filter(|pair| pair.is_ordered()) .map(|pair| pair.index) .sum() } struct Entry { index: usize, left: Value, right: Value, } impl Entry { fn is_ordered(&amp;amp;self) -&amp;gt; bool { self.left &amp;lt;= self.right } } #[derive(Clone, Debug)] enum Value { Integer(u8), List(Vec&amp;lt;Value&amp;gt;), } impl Value { fn from_chars(chars: &amp;amp;mut Peekable&amp;lt;impl Iterator&amp;lt;Item = char&amp;gt;&amp;gt;) -&amp;gt; Result&amp;lt;Self&amp;gt; { match chars.peek() { Some(&amp;#39;[&amp;#39;) =&amp;gt; { let mut values = Vec::new(); while chars.next() != Some(&amp;#39;]&amp;#39;) &amp;amp;&amp;amp; chars.peek() != Some(&amp;amp;&amp;#39;]&amp;#39;) { values.push(Value::from_chars(chars)?); } Ok(Value::List(values)) } Some(char) if char.is_digit(10) =&amp;gt; { let value_as_str: String = chars.peeking_take_while(|char| char.is_digit(10)).collect(); Ok(Value::Integer(value_as_str.parse()?)) } char @ _ =&amp;gt; Err(anyhow!(&amp;quot;unexpected char : {:?}&amp;quot;, char)), } } } impl Eq for Value {} impl PartialEq for Value { fn eq(&amp;amp;self, other: &amp;amp;Self) -&amp;gt; bool { self.cmp(other) == Ordering::Equal } } impl PartialOrd for Value { fn partial_cmp(&amp;amp;self, other: &amp;amp;Self) -&amp;gt; Option&amp;lt;std::cmp::Ordering&amp;gt; { Some(self.cmp(other)) } } impl Ord for Value { fn cmp(&amp;amp;self, other: &amp;amp;Self) -&amp;gt; std::cmp::Ordering { use Ordering::*; use Value::*; match (self, other) { (Integer(left), Integer(right)) =&amp;gt; left.cmp(right), (List(left), List(right)) =&amp;gt; left .iter() .zip_longest(right.iter()) .find_map(|either_or_both| match either_or_both { EitherOrBoth::Both(left, right) =&amp;gt; match left.cmp(right) { Equal =&amp;gt; None, cmp @ _ =&amp;gt; Some(cmp), }, EitherOrBoth::Left(_) =&amp;gt; Some(Greater), EitherOrBoth::Right(_) =&amp;gt; Some(Less), }) .unwrap_or(Equal), (Integer(_), List(_)) =&amp;gt; List(vec![self.clone()]).cmp(other), (List(_), Integer(_)) =&amp;gt; self.cmp(&amp;amp;List(vec![other.clone()])), } } } impl FromStr for Value { type Err = anyhow::Error; fn from_str(s: &amp;amp;str) -&amp;gt; Result&amp;lt;Self&amp;gt; { Value::from_chars(&amp;amp;mut s.chars().peekable()).context(format!(&amp;quot;error parsing \&amp;quot;{}\&amp;quot;&amp;quot;, s)) } } #[cfg(test)] mod test { use super::*; #[test] fn first_given_input_is_right() { use Value::*; let pair = Entry { index: 1, left: List(vec![ Integer(1), Integer(1), Integer(3), Integer(1), Integer(1), ]), right: List(vec![ Integer(1), Integer(1), Integer(5), Integer(1), Integer(1), ]), }; assert!(pair.is_ordered()) } #[test] fn test_parsing_12_is_ok() { assert_eq!(Value::from_str(&amp;quot;12&amp;quot;).unwrap(), Value::Integer(12)); } #[test] fn parsing_empty_array() { assert_eq!(Value::from_str(&amp;quot;[]&amp;quot;).unwrap(), Value::List(vec![])) } #[test] fn parsing_simple_array_is_ok() { assert_eq!( Value::from_str(&amp;quot;[1,2,33,4]&amp;quot;).unwrap(), Value::List(vec![ Value::Integer(1), Value::Integer(2), Value::Integer(33), Value::Integer(4), ]) ) } #[test] fn fourth_given_entry() { let pair = Entry { index: 4, left: &amp;quot;[[4,4],4,4]&amp;quot;.parse().unwrap(), right: &amp;quot;[[4,4],4,4,4]&amp;quot;.parse().unwrap(), }; assert!(pair.is_ordered()) } #[test] fn parsing_array_of_arrays_is_ok() { let value: Value = &amp;quot;[[1,2],[3,4]]&amp;quot;.parse().unwrap(); assert_eq!( value, Value::List(vec![ Value::List(vec![Value::Integer(1), Value::Integer(2)]), Value::List(vec![Value::Integer(3), Value::Integer(4)]), ]) ) } #[test] fn given_test_part1_indexes() { let values = parse(&amp;amp;[&amp;quot;aoc&amp;quot;, &amp;quot;2022&amp;quot;, &amp;quot;13-test.txt&amp;quot;]); let ordered_indexes = values .iter() .filter(|pair| pair.is_ordered()) .map(|pair| pair.index) .collect_vec(); assert_eq!(ordered_indexes, vec![1, 2, 4, 6]); } #[test] fn given_test_part1() { let values = parse(&amp;amp;[&amp;quot;aoc&amp;quot;, &amp;quot;2022&amp;quot;, &amp;quot;13-test.txt&amp;quot;]); assert_eq!(part1(&amp;amp;values), 13) } } &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/Educational_Twist237&quot;&gt; /u/Educational_Twist237 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10fw439/2022_day_13_part_1_rustgetting_wrong_result/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10fw439/2022_day_13_part_1_rustgetting_wrong_result/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10fw439</id><link href="https://www.reddit.com/r/adventofcode/comments/10fw439/2022_day_13_part_1_rustgetting_wrong_result/" /><updated>2023-01-19T07:59:31+00:00</updated><published>2023-01-19T07:59:31+00:00</published><title>[2022 Day 13 (Part 1)] [rust]getting wrong result</title></entry><entry><author><name>/u/DustChoirDot</name><uri>https://www.reddit.com/user/DustChoirDot</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Update: RESOLVED, tips and corrections attributed in # Correction near bottom of this post.&lt;/p&gt; &lt;p&gt;This seems to work in some ways, but since two columns of the nine are empty, and my answer of _GW_BGZMF is incorrect, there is clearly an error somewhere. &lt;/p&gt; &lt;h1&gt;AoC5&lt;/h1&gt; &lt;p&gt;First things first I open up the file and store some data in variables. Not sure how clever this method is, I&amp;#39;m new.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;fh = open(&amp;quot;stacks.txt&amp;quot;, &amp;quot;r&amp;quot;) lines = fh.readlines() stacks = lines[0:8] crates = [*lines[8]] &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Parse the stacks.&lt;/h1&gt; &lt;p&gt;Next, I create a dictionary (this is corrected below, I simply use the isupper() method instead) so I can loop over the lines of the weirdly formatted stacks of crates and figure out what&amp;#39;s a letter that I can store in columns 1 through 9. This code does exactly what I want although it&amp;#39;s not very elegant or necessary, I just copy pasted from an earlier days solution when I realized it could work.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;uppercase_values = dict() for index, alphabet in enumerate(&amp;quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;quot;, 27): uppercase_values[alphabet] = index columns = [[] for i in range(1,10)] for j in range(len(stacks)): for k, char in enumerate(stacks[j]): if char in uppercase_values.keys(): l = int(((k - 1) // 4) + 1) for m, lst in enumerate(columns, 1): if m == l and m &amp;lt;= len(columns): lst.append(char) for column in columns: column = column.reverse() &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Parse the instructions.&lt;/h1&gt; &lt;p&gt;Next, I put the instructions for each line into a list of lists and then pop items from stacks in the specified column and append items to the specified column. This code effectively &amp;quot;solves the problem&amp;quot;, and I can&amp;#39;t notice anything weird happening with the ordering or movement of crates around the correct stacks.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;instr = lines[10:] codes = [] for line in instr: extracted_numbers = [] for numb in line: if numb.isnumeric(): extracted_numbers.append(int(numb)) if len(extracted_numbers) == 3: break codes.append(extracted_numbers) for code in codes: num_items = int(code[0]) src_stack = int(code[1]) dst_stack = int(code[2]) for c in range(num_items): try: ext = columns[src_stack - 1].pop(-1) columns[dst_stack - 1].append(ext) except IndexError: print(&amp;quot;Error: Attempting to pop from an empty stack&amp;quot;) print(columns) &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;CORRECTIONS:&lt;/h1&gt; &lt;p&gt;For my first correction I simply used the isupper() and reverse() methods as suggested by &lt;a href=&quot;/u/SquintingSquire&quot;&gt;/u/SquintingSquire&lt;/a&gt; in the comments, thanks for that. &lt;/p&gt; &lt;pre&gt;&lt;code&gt;for j in range(len(stacks)): for k, char in enumerate(stacks[j]): if char.isupper(): l = int(((k - 1) // 4) + 1) for m, lst in enumerate(columns, 1): if m == l and m &amp;lt;= len(columns): lst.append(char) for column in columns: column.reverse() &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For my second correction I used the split() method, which worked out to be very simple. Thank you to &lt;a href=&quot;/u/TheZigerionScammer&quot;&gt;/u/TheZigerionScammer&lt;/a&gt; and &lt;a href=&quot;/u/Mmlh1&quot;&gt;/u/Mmlh1&lt;/a&gt; in the comments for suggesting this!&lt;/p&gt; &lt;pre&gt;&lt;code&gt;for line in instr: extracted_numbers = [] for numb in line: extracted_numbers = [int(numb) for numb in line.split() if numb.isdigit()] codes.append(extracted_numbers) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;I submitted a correct answer, excellent!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/DustChoirDot&quot;&gt; /u/DustChoirDot &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10fjxx5/2022_day_5_part_1_python_3106_how_to_format/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10fjxx5/2022_day_5_part_1_python_3106_how_to_format/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10fjxx5</id><link href="https://www.reddit.com/r/adventofcode/comments/10fjxx5/2022_day_5_part_1_python_3106_how_to_format/" /><updated>2023-01-18T22:10:14+00:00</updated><published>2023-01-18T22:10:14+00:00</published><title>[2022 Day #5 (Part 1)] [Python 3.10.6] How To Format Answer For Empty Stacks, Or Something Is Not Working</title></entry><entry><author><name>/u/Key__Strokes</name><uri>https://www.reddit.com/user/Key__Strokes</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/Key__Strokes&quot;&gt; /u/Key__Strokes &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://youtu.be/xK_KfVFFyNU&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10fwxn8/2022_day_5_part_1part_2_javascript_reading_the/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10fwxn8</id><link href="https://www.reddit.com/r/adventofcode/comments/10fwxn8/2022_day_5_part_1part_2_javascript_reading_the/" /><updated>2023-01-19T08:53:49+00:00</updated><published>2023-01-19T08:53:49+00:00</published><title>[2022 Day 5 (Part 1/Part 2)] [Javascript] Reading the input and Explanation with Coding - Reading the input seemed harder than the actual solution</title></entry><entry><author><name>/u/Piislife24</name><uri>https://www.reddit.com/user/Piislife24</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Hi, here is my code&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://pastebin.com/huUie9KX&quot;&gt;https://pastebin.com/huUie9KX&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It is in Python 3, the test input works fine, takes less than a second to compute, but the actual input runs for a few seconds and then throws a recursion error. I have tried changing the recursion limit using sys.setrecursionlimit() but then it runs for about 10 seconds before it crashes and the shell restarts. Any help would be greatly appreciated!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/Piislife24&quot;&gt; /u/Piislife24 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10f5tg8/2022_day_14_part_2_python_3_test_input_works/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10f5tg8/2022_day_14_part_2_python_3_test_input_works/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10f5tg8</id><link href="https://www.reddit.com/r/adventofcode/comments/10f5tg8/2022_day_14_part_2_python_3_test_input_works/" /><updated>2023-01-18T12:07:04+00:00</updated><published>2023-01-18T12:07:04+00:00</published><title>[2022 Day 14 (Part 2)] Python 3, test input works, actual input gives recursion error</title></entry><entry><author><name>/u/miran1</name><uri>https://www.reddit.com/user/miran1</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/miran1&quot;&gt; /u/miran1 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://narimiran.github.io/2023/01/17/advent-of-clojure.html&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10eht4f/advent_of_clojure_need_for_speed/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10eht4f</id><link href="https://www.reddit.com/r/adventofcode/comments/10eht4f/advent_of_clojure_need_for_speed/" /><updated>2023-01-17T17:23:37+00:00</updated><published>2023-01-17T17:23:37+00:00</published><title>Advent of Clojure: Need for Speed</title></entry><entry><author><name>/u/ednl</name><uri>https://www.reddit.com/user/ednl</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;There was a &lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/zh2hk0/2022friendly_reminder_dont_commit_your_input/&quot;&gt;discussion this year&lt;/a&gt; about the personalised input (from a limited pool) for the Advent of Code puzzles and how they are part of &lt;a href=&quot;/u/topaz2078&quot;&gt;/u/topaz2078&lt;/a&gt; &amp;#39;s intellectual property of the whole thing. The premise of the post was that you shouldn&amp;#39;t upload your input files.&lt;/p&gt; &lt;p&gt;I hadn&amp;#39;t considered that before, probably because I didn&amp;#39;t read everything on the website or here in the FAQ/Rules. I did want to comply but it is just so convenient to keep code and input together. But now I took the time to split them up. One way to do this, is to place all input files in a separate git repository that is private and then to add that private repo as a submodule to your public AoC code repos.&lt;/p&gt; &lt;p&gt;I had never used submodules so I had to read up on them. This was useful: &lt;a href=&quot;https://www.taniarascia.com/git-submodules-private-content/&quot;&gt;Using Git Submodules for Private Content&lt;/a&gt; by Tania Rascia. The gist is:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Make a separate, private repo where you keep those private input files you want to use elsewhere.&lt;/li&gt; &lt;li&gt;Push to remote and use the repo share link from there; do not use a relative local link to your private repo.&lt;/li&gt; &lt;li&gt;In your public code repo, add the private repo as a submodule with this command: &lt;code&gt;git submodule add git@github.com:myusername/myprivaterepo.git&lt;/code&gt;. This makes a local copy of the private repo in a subdirectory. Maybe the https version would work too, because ...:&lt;/li&gt; &lt;li&gt;If you want to add, delete or edit files in that submodule, only ever do it directly in the private repo! Do not change things in the submodule.&lt;/li&gt; &lt;li&gt;After adding the submodule to the public repo and deleting the input files from it, use a regular old commit and push.&lt;/li&gt; &lt;li&gt;After updating the input files in your private repo and pushing the changes, update the submodule in your public repo with &lt;code&gt;git submodule update --remote&lt;/code&gt;. Or a regular old pull will work, too, if ...:&lt;/li&gt; &lt;li&gt;Probably add &lt;code&gt;[submodule] recurse = true&lt;/code&gt; to your global gitconfig, unless you know what you&amp;#39;re doing.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This works well for me and all my input files are now kept private while my code is still public. To use an input file in your code, simply open it from the submodule directory which has the same name as your private repo.&lt;/p&gt; &lt;p&gt;I welcome corrections or further hints/tips because this is all new to me.&lt;/p&gt; &lt;p&gt;EDIT: All these dismissive replies are rather discouraging. This is not the same helpful community I thought we had during the Advents. I am just trying to do a nice thing and thought it would be helpful to share my first experience with submodules, which is one way of solving the issue. I won&amp;#39;t be posting again until December, I guess. Bye.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/ednl&quot;&gt; /u/ednl &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10e8ohq/i_moved_all_my_input_files_to_a_private_repo_and/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10e8ohq/i_moved_all_my_input_files_to_a_private_repo_and/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10e8ohq</id><link href="https://www.reddit.com/r/adventofcode/comments/10e8ohq/i_moved_all_my_input_files_to_a_private_repo_and/" /><updated>2023-01-17T10:07:47+00:00</updated><published>2023-01-17T10:07:47+00:00</published><title>I moved all my input files to a private repo and used it as a submodule</title></entry><entry><author><name>/u/Apples282</name><uri>https://www.reddit.com/user/Apples282</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Hey! I was hoping someone might be able to shed some light on this. My sister tried to buy me one of the AoC merch mugs (the year agnostic one with the Santa hat) from the online store for Christmas. She ordered it on the 1st Dec, and it is still showing &amp;quot;in production&amp;quot; today i.e. it hasn&amp;#39;t moved. She&amp;#39;s emailed them twice and not received any reply. I can&amp;#39;t be the only one from the UK who&amp;#39;s tried to get one of these, anyone have an idea of what to do next?&lt;/p&gt; &lt;p&gt;Thanks!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/Apples282&quot;&gt; /u/Apples282 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10dv3v7/merch_order_not_progressing/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10dv3v7/merch_order_not_progressing/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10dv3v7</id><link href="https://www.reddit.com/r/adventofcode/comments/10dv3v7/merch_order_not_progressing/" /><updated>2023-01-16T22:49:26+00:00</updated><published>2023-01-16T22:49:26+00:00</published><title>Merch Order Not Progressing</title></entry><entry><author><name>/u/ProfessorOakWithO</name><uri>https://www.reddit.com/user/ProfessorOakWithO</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Hi all,&lt;/p&gt; &lt;p&gt;day 16 showed me how bad my algorithm game really is. I tried do read some other hints in other threads but I still don&amp;#39;t know how to start. At the moment my code does the following:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Parse the input&lt;/li&gt; &lt;li&gt;Precalculate the distances for every valve to every other valve&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;As far as I understand the problem we could theoretically calculate every possible [valve,time,pressure released] route and pick the route with the most pressure released. Because there are too much combinations we have to somehow reduce the possible paths the algorithm could take. Without taking optimization into account what is my basis as an algorithm ?&lt;/p&gt; &lt;p&gt;Am I supposed to use a DFS or BFS and let the algorithm generate every possible path from AA to ?? and how do I selected the next valve to open ? Do I need to come up with some sort of heuristic to select always the &amp;quot;best&amp;quot; open valve ?&lt;/p&gt; &lt;p&gt;The whole day really throws me of and it would be great if someone could give me some hints or some resources to learn the necessary algorithms/concepts ....&lt;/p&gt; &lt;p&gt;Thank you and have a great day !&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/ProfessorOakWithO&quot;&gt; /u/ProfessorOakWithO &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10e5ayk/2022_day_16_part_1c_it_doesnt_make_click/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10e5ayk/2022_day_16_part_1c_it_doesnt_make_click/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10e5ayk</id><link href="https://www.reddit.com/r/adventofcode/comments/10e5ayk/2022_day_16_part_1c_it_doesnt_make_click/" /><updated>2023-01-17T06:41:08+00:00</updated><published>2023-01-17T06:41:08+00:00</published><title>[2022 Day 16 (Part 1)][C++] It doesn't make click</title></entry><entry><author><name>/u/TerraMonster5</name><uri>https://www.reddit.com/user/TerraMonster5</uri></author><category term="adventofcode" label="r/adventofcode"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Solution:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;from structs import Stack dirs = {&amp;quot;/&amp;quot;:[]}; pwd = Stack(); pwd.push(&amp;quot;/&amp;quot;) def calcSize(directory: str) -&amp;gt; int: total = 0 for item in dirs[directory]: if item.startswith(&amp;quot;dir&amp;quot;): total += calcSize(item.split()[1]) else: total += int(item.split()[0]) return total with open(&amp;quot;input.txt&amp;quot;,&amp;quot;r&amp;quot;) as file: ls = False for count, line in enumerate(iter(file)): if count == 0: continue elif line.startswith(&amp;quot;$ cd&amp;quot;): ls = False new = line.strip().split()[2] if new == &amp;quot;..&amp;quot;: pwd.pop() else: dirs[new] = [] pwd.push(new) elif line.startswith(&amp;quot;$ ls&amp;quot;): ls = True elif ls: dirs[pwd.peek()].append(line.strip()) while pwd.peek() != &amp;quot;/&amp;quot;: pwd.pop() print(dirs) bigTotal = 0 for key in dirs.keys(): size = calcSize(key) if size &amp;lt; 100000: bigTotal += size print(bigTotal) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Relevant part of Structs module:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;class Stack: def __init__(self) -&amp;gt; None: self._array = [] def __str__(self) -&amp;gt; str: return f&amp;quot;Stack()&amp;quot; def push(self, val) -&amp;gt; None: self._array.append(val) def peek(self): return self._array[-1] def pop(self): if len(self._array) &amp;gt; 0: return self._array.pop(-1) else: return False def size(self) -&amp;gt; int: return len(self._array) &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/TerraMonster5&quot;&gt; /u/TerraMonster5 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10do2b3/2022_day_7_part_1python_311_my_solution_works_for/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/adventofcode/comments/10do2b3/2022_day_7_part_1python_311_my_solution_works_for/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10do2b3</id><link href="https://www.reddit.com/r/adventofcode/comments/10do2b3/2022_day_7_part_1python_311_my_solution_works_for/" /><updated>2023-01-16T18:56:00+00:00</updated><published>2023-01-16T18:56:00+00:00</published><title>[2022 Day 7 (Part 1)][Python 3.11] My solution works for the example, but not for my full input; can't work out what's wrong.</title></entry></feed>