<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/"><category term="cpp" label="r/cpp"/><updated>2023-01-28T12:50:49+00:00</updated><icon>https://www.redditstatic.com/icon.png/</icon><id>/r/cpp.rss</id><link rel="self" href="https://www.reddit.com/r/cpp.rss" type="application/atom+xml" /><link rel="alternate" href="https://www.reddit.com/r/cpp" type="text/html" /><logo>https://b.thumbs.redditmedia.com/CcBezl0OVyIuF2PuZ7fDkl85Gxe8S0WoYC_JWZrcOZU.png</logo><subtitle>Discussions, articles and news about the C++ programming language or programming in C++.</subtitle><title>C++</title><entry><author><name>/u/foonathan</name><uri>https://www.reddit.com/user/foonathan</uri></author><category term="cpp" label="r/cpp"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Happy new year!&lt;/p&gt; &lt;p&gt;Use this thread to share anything you&amp;#39;ve written in C++. This includes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;a tool you&amp;#39;ve written&lt;/li&gt; &lt;li&gt;a game you&amp;#39;ve been working on&lt;/li&gt; &lt;li&gt;your first non-trivial C++ program&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The rules of this thread are very straight forward:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The project must involve C++ in some way.&lt;/li&gt; &lt;li&gt;It must be something you (alone or with others) have done.&lt;/li&gt; &lt;li&gt;Please share a link, if applicable.&lt;/li&gt; &lt;li&gt;Please post images, if applicable.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you&amp;#39;re working on a C++ library, you can also share new releases or major updates in a dedicated post as before. The line we&amp;#39;re drawing is between &amp;quot;written in C++&amp;quot; and &amp;quot;useful for C++ programmers specifically&amp;quot;. If you&amp;#39;re writing a C++ library or tool for C++ developers, that&amp;#39;s something C++ programmers can use and is on-topic for a main submission. It&amp;#39;s different if you&amp;#39;re just using C++ to implement a generic program that isn&amp;#39;t specifically about C++: you&amp;#39;re free to share it here, but it wouldn&amp;#39;t quite fit as a standalone post.&lt;/p&gt; &lt;p&gt;Last month&amp;#39;s thread: &lt;a href=&quot;https://old.reddit.com/r/cpp/comments/z9mrin/c_show_and_tell_december_2022/&quot;&gt;https://old.reddit.com/r/cpp/comments/z9mrin/c_show_and_tell_december_2022/&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/foonathan&quot;&gt; /u/foonathan &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/100sxp4/c_show_and_tell_january_2023/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/100sxp4/c_show_and_tell_january_2023/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_100sxp4</id><link href="https://www.reddit.com/r/cpp/comments/100sxp4/c_show_and_tell_january_2023/" /><updated>2023-01-01T20:44:35+00:00</updated><published>2023-01-01T20:44:35+00:00</published><title>C++ Show and Tell - January 2023</title></entry><entry><author><name>/u/STL</name><uri>https://www.reddit.com/user/STL</uri></author><category term="cpp" label="r/cpp"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;h2&gt;Rules For Individuals&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Don&amp;#39;t&lt;/strong&gt; create top-level comments - those are for employers.&lt;/li&gt; &lt;li&gt;Feel free to reply to top-level comments with &lt;strong&gt;on-topic&lt;/strong&gt; questions.&lt;/li&gt; &lt;li&gt;I will create top-level comments for &lt;strong&gt;meta&lt;/strong&gt; discussion and &lt;strong&gt;individuals looking for work&lt;/strong&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Rules For Employers&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;If you&amp;#39;re hiring &lt;strong&gt;directly&lt;/strong&gt;, you&amp;#39;re fine, skip this bullet point. If you&amp;#39;re a &lt;strong&gt;third-party recruiter&lt;/strong&gt;, see the extra rules below.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;One&lt;/strong&gt; top-level comment per employer. If you have multiple job openings, that&amp;#39;s great, but please consolidate their descriptions or mention them in replies to your own top-level comment.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Don&amp;#39;t&lt;/strong&gt; use URL shorteners. &lt;a href=&quot;https://www.reddithelp.com/hc/en-us/articles/205926439&quot;&gt;reddiquette&lt;/a&gt; forbids them because they&amp;#39;re opaque to the spam filter.&lt;/li&gt; &lt;li&gt;Templates are awesome. Please &lt;strong&gt;use&lt;/strong&gt; the following template. As the &amp;quot;formatting help&amp;quot; says, use **two stars** to &lt;strong&gt;bold text&lt;/strong&gt;. Use empty lines to separate sections.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Proofread&lt;/strong&gt; your comment after posting it, and edit any formatting mistakes.&lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt; &lt;p&gt;**Company:** [Company name; also, use the &amp;quot;formatting help&amp;quot; to make it a link to your company&amp;#39;s website, or a specific careers page if you have one.]&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;**Type:** [Full time, part time, internship, contract, etc.]&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;**Compensation:** [This section is &lt;strong&gt;optional&lt;/strong&gt;, and you can omit it without explaining why. However, including it will help your job posting stand out as there is &lt;a href=&quot;https://www.reddit.com/r/cpp/comments/sz0cd5/c_jobs_threads_should_include_salarycompensation/&quot;&gt;extreme demand&lt;/a&gt; from candidates looking for this info. If you choose to provide this section, it must contain (a range of) &lt;strong&gt;actual numbers&lt;/strong&gt; - don&amp;#39;t waste anyone&amp;#39;s time by saying &amp;quot;Compensation: Competitive.&amp;quot;]&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;**Location:** [Where&amp;#39;s your office - or if you&amp;#39;re hiring at multiple offices, list them. If your workplace language isn&amp;#39;t English, please specify it.]&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;**Remote:** [Do you offer the option of working remotely? If so, do you require employees to live in certain areas or time zones?]&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;**Visa Sponsorship:** [Does your company sponsor visas?]&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;**Description:** [What does your company do, and what are you hiring C++ devs for? How much experience are you looking for, and what seniority levels are you hiring for? The more details you provide, the better.]&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;**Technologies:** [Required: do you mainly use C++98/03, C++11, C++14, C++17, or C++20? Optional: do you use Linux/Mac/Windows, are there languages you use in addition to C++, are there technologies like OpenGL or libraries like Boost that you need/want/like experience with, etc.]&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;**Contact:** [How do you want to be contacted? Email, reddit PM, telepathy, gravitational waves?]&lt;/p&gt; &lt;hr/&gt; &lt;h2&gt;Extra Rules For Third-Party Recruiters&lt;/h2&gt; &lt;p&gt;Send modmail to request pre-approval on a case-by-case basis. We&amp;#39;ll want to hear what info you can provide (in this case you can withhold client company names, and compensation info is still recommended but optional). We hope that you can connect candidates with jobs that would otherwise be unavailable, and we expect you to treat candidates well.&lt;/p&gt; &lt;h2&gt;Previous Post&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/xucrwi/c_jobs_q4_2022/&quot;&gt;C++ Jobs - Q4 2022&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/STL&quot;&gt; /u/STL &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/103d8ot/c_jobs_q1_2023/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/103d8ot/c_jobs_q1_2023/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_103d8ot</id><link href="https://www.reddit.com/r/cpp/comments/103d8ot/c_jobs_q1_2023/" /><updated>2023-01-04T19:56:59+00:00</updated><published>2023-01-04T19:56:59+00:00</published><title>C++ Jobs - Q1 2023</title></entry><entry><author><name>/u/maksym-pasichnyk</name><uri>https://www.reddit.com/user/maksym-pasichnyk</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/maksym-pasichnyk&quot;&gt; /u/maksym-pasichnyk &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://twitter.com/maximmkaaa/status/1619122129496064000&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10n09m2/c_20_compiletime_parsing_with_rusts_like_macro/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10n09m2</id><link href="https://www.reddit.com/r/cpp/comments/10n09m2/c_20_compiletime_parsing_with_rusts_like_macro/" /><updated>2023-01-27T23:57:47+00:00</updated><published>2023-01-27T23:57:47+00:00</published><title>C++ 20 compile-time parsing with Rust's like macro_rules implementation!</title></entry><entry><author><name>/u/pstomi</name><uri>https://www.reddit.com/user/pstomi</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/pstomi&quot;&gt; /u/pstomi &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;http://code-ballads.net/annoucing-dear-imgui-bundle/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10mx2mq/announcing_dear_imgui_bundle/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10mx2mq</id><link href="https://www.reddit.com/r/cpp/comments/10mx2mq/announcing_dear_imgui_bundle/" /><updated>2023-01-27T21:46:57+00:00</updated><published>2023-01-27T21:46:57+00:00</published><title>Announcing Dear ImGui Bundle</title></entry><entry><author><name>/u/meetingcpp</name><uri>https://www.reddit.com/user/meetingcpp</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/meetingcpp&quot;&gt; /u/meetingcpp &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=lyKTgZ8gQhQ&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10ncdsb/meeting_c_live_with_klaus_iglberger/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10ncdsb</id><link href="https://www.reddit.com/r/cpp/comments/10ncdsb/meeting_c_live_with_klaus_iglberger/" /><updated>2023-01-28T10:50:23+00:00</updated><published>2023-01-28T10:50:23+00:00</published><title>Meeting C++ live with Klaus Iglberger</title></entry><entry><author><name>/u/waruqi</name><uri>https://www.reddit.com/user/waruqi</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/waruqi&quot;&gt; /u/waruqi &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://github.com/xmake-io/xmake/wiki/Xmake-v2.7.6-Released,-Add-Verilog-and-Cplusplus--Module-Distribution-Support&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10mjjex/xmake_v276_released_add_verilog_and_c_module/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10mjjex</id><link href="https://www.reddit.com/r/cpp/comments/10mjjex/xmake_v276_released_add_verilog_and_c_module/" /><updated>2023-01-27T12:23:43+00:00</updated><published>2023-01-27T12:23:43+00:00</published><title>Xmake v2.7.6 Released, Add Verilog and C++ Module Distribution Support</title></entry><entry><author><name>/u/Dry-Ambition-5456</name><uri>https://www.reddit.com/user/Dry-Ambition-5456</uri></author><category term="cpp" label="r/cpp"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;I am wondering why doesn&amp;#39;t standard offer those queues? Standard offers &lt;code&gt;std::midpoint&lt;/code&gt; but not them?&lt;/p&gt; &lt;p&gt;Is there something obvious I am missing? Are there design challenges?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/Dry-Ambition-5456&quot;&gt; /u/Dry-Ambition-5456 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10mq7md/why_doesnt_standard_offer_waitfree_spsc_and/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10mq7md/why_doesnt_standard_offer_waitfree_spsc_and/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10mq7md</id><link href="https://www.reddit.com/r/cpp/comments/10mq7md/why_doesnt_standard_offer_waitfree_spsc_and/" /><updated>2023-01-27T17:14:30+00:00</updated><published>2023-01-27T17:14:30+00:00</published><title>Why doesn't standard offer wait-free SPSC (and lockfree MPMC) queues?</title></entry><entry><author><name>/u/cblume</name><uri>https://www.reddit.com/user/cblume</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/cblume&quot;&gt; /u/cblume &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://github.com/bloomen/gcl&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10mzh0o/gcl_v11_released_graph_concurrent_library_for_c/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10mzh0o</id><link href="https://www.reddit.com/r/cpp/comments/10mzh0o/gcl_v11_released_graph_concurrent_library_for_c/" /><updated>2023-01-27T23:24:41+00:00</updated><published>2023-01-27T23:24:41+00:00</published><title>gcl v1.1 released - Graph Concurrent Library for C++</title></entry><entry><author><name>/u/SiriPsycho100</name><uri>https://www.reddit.com/user/SiriPsycho100</uri></author><category term="cpp" label="r/cpp"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Should I just use C++23 and learn C++ using the latest features? Or should I learn with a more commonly used version in industry like C++17 or C++11?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/SiriPsycho100&quot;&gt; /u/SiriPsycho100 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10n98c0/which_version_of_c_should_i_use_to_learn_between/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10n98c0/which_version_of_c_should_i_use_to_learn_between/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10n98c0</id><link href="https://www.reddit.com/r/cpp/comments/10n98c0/which_version_of_c_should_i_use_to_learn_between/" /><updated>2023-01-28T07:28:46+00:00</updated><published>2023-01-28T07:28:46+00:00</published><title>Which version of c++ should I use to learn between C++23/20/17/14/11?</title></entry><entry><author><name>/u/Lazy_Palpitation5878</name><uri>https://www.reddit.com/user/Lazy_Palpitation5878</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/Lazy_Palpitation5878&quot;&gt; /u/Lazy_Palpitation5878 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://youtu.be/H9xIx1NxPHY&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10n3w83/i_used_c_to_test_the_accuracy_of_leetcodes/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10n3w83</id><link href="https://www.reddit.com/r/cpp/comments/10n3w83/i_used_c_to_test_the_accuracy_of_leetcodes/" /><updated>2023-01-28T02:38:24+00:00</updated><published>2023-01-28T02:38:24+00:00</published><title>I used C++ to test the accuracy of LeetCode's runtime and memory rankings.</title></entry><entry><author><name>/u/johnnytest__7</name><uri>https://www.reddit.com/user/johnnytest__7</uri></author><category term="cpp" label="r/cpp"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;I was so excited about new C++20 and C++23 features that I was using &lt;code&gt;concepts&lt;/code&gt;, &lt;code&gt;ranges&lt;/code&gt; and &lt;code&gt;views&lt;/code&gt; everywhere I could. But yesterday I saw this -&amp;gt; &lt;a href=&quot;https://www.youtube.com/watch?v=O8HndvYNvQ4&quot;&gt;https://www.youtube.com/watch?v=O8HndvYNvQ4&lt;/a&gt; and I got so disappointed in C++ committee that now I really think it&amp;#39;s time to lay C++ to rest unless we decide to bring new version of C++ like Python3 which breaks backward compatibility but fixes the language so that it can be used for the next 20-25 years.&lt;/p&gt; &lt;p&gt;I can&amp;#39;t believe 200 stalwarts and experts in the field of computer science will make such a horrible mess.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/johnnytest__7&quot;&gt; /u/johnnytest__7 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10nbs43/c_views_are_broken/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10nbs43/c_views_are_broken/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10nbs43</id><link href="https://www.reddit.com/r/cpp/comments/10nbs43/c_views_are_broken/" /><updated>2023-01-28T10:11:55+00:00</updated><published>2023-01-28T10:11:55+00:00</published><title>C++ views are broken</title></entry><entry><author><name>/u/arkethos</name><uri>https://www.reddit.com/user/arkethos</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/arkethos&quot;&gt; /u/arkethos &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://youtu.be/0RsLGM_7ODE&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10n0nu2/printing_tuples_in_c141723_vs_rust/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10n0nu2</id><link href="https://www.reddit.com/r/cpp/comments/10n0nu2/printing_tuples_in_c141723_vs_rust/" /><updated>2023-01-28T00:13:38+00:00</updated><published>2023-01-28T00:13:38+00:00</published><title>Printing Tuples in C++14/17/23 (vs Rust)</title></entry><entry><author><name>/u/CppCon</name><uri>https://www.reddit.com/user/CppCon</uri></author><category term="cpp" label="r/cpp"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;This week the CppCon YouTube channel released the following videos&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Back to Basics: Object-Oriented Programming in C++ - Amir Kirsh - &lt;a href=&quot;https://youtu.be/_go74QpFPAw&quot;&gt;https://youtu.be/_go74QpFPAw&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&amp;quot;It&amp;#39;s A Bug Hunt&amp;quot; - Armor Plate Your Unit Tests in Cpp - Dave Steffen - &lt;a href=&quot;https://youtu.be/P8qYIerTYA0&quot;&gt;https://youtu.be/P8qYIerTYA0&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Reviewing Beginners&amp;#39; C++ Code - Patrice Roy - &lt;a href=&quot;https://youtu.be/9dMvkiw_-IQ&quot;&gt;https://youtu.be/9dMvkiw_-IQ&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Observability Tools C++: Beyond GDB and printf - Tools to Understand the Behavior of Your Program - Ivica Bogosavljevic - &lt;a href=&quot;https://youtu.be/C9vmS5xV23A&quot;&gt;https://youtu.be/C9vmS5xV23A&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Fast C++ by using SIMD Types with Generic Lambdas and Filters - Andrew Drakeford - &lt;a href=&quot;https://youtu.be/sQvlPHuE9KY&quot;&gt;https://youtu.be/sQvlPHuE9KY&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New in Visual Studio Code! Clang-Tidy, makefile, CMake, GitHub, &amp;amp; More - Marian Luparu &amp;amp; Sinem Akinci - &lt;a href=&quot;https://youtu.be/iTaOCVzOenM&quot;&gt;https://youtu.be/iTaOCVzOenM&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;On demand access to the rough-cut (unedited) recordings of the remaining 40 onsite and online sessions is still available here &lt;a href=&quot;https://cppcon.org/on-demand/&quot;&gt;https://cppcon.org/on-demand/&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/CppCon&quot;&gt; /u/CppCon &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10mmhkd/new_videos_on_the_cppcon_youtube_channel_012123/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10mmhkd/new_videos_on_the_cppcon_youtube_channel_012123/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10mmhkd</id><link href="https://www.reddit.com/r/cpp/comments/10mmhkd/new_videos_on_the_cppcon_youtube_channel_012123/" /><updated>2023-01-27T14:42:52+00:00</updated><published>2023-01-27T14:42:52+00:00</published><title>New Videos On The CppCon YouTube Channel - 01/21/23 - 01/27/23</title></entry><entry><author><name>/u/arkethos</name><uri>https://www.reddit.com/user/arkethos</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/arkethos&quot;&gt; /u/arkethos &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://adspthepodcast.com/2023/01/27/Episode-114.html&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10mlfjh/adsp_episode_114_rust_val_carbon_chatgpt_errors/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10mlfjh</id><link href="https://www.reddit.com/r/cpp/comments/10mlfjh/adsp_episode_114_rust_val_carbon_chatgpt_errors/" /><updated>2023-01-27T13:56:54+00:00</updated><published>2023-01-27T13:56:54+00:00</published><title>ADSP Episode 114: Rust, Val, Carbon, ChatGPT &amp; Errors with Barry Revzin!</title></entry><entry><author><name>/u/Spacemanspiff429</name><uri>https://www.reddit.com/user/Spacemanspiff429</uri></author><category term="cpp" label="r/cpp"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;So I am trying to update my company&amp;#39;s build system/ CI and want to start using sanitizers and code coverage reports. I can use gcov and add additional build types to cmake support the additional tests. &lt;/p&gt; &lt;p&gt;Currently our CI (Teamcity) just rebuilds a component in release mode whenever a change is made, and publishes the release mode build artifacts, this triggers the build chain for all of the other components that use this artifact.&lt;/p&gt; &lt;p&gt;This is fine, but I am having a mental issue of how I am supposed to integrate multiple builds (to support sanitizers/coverage) to this model.&lt;/p&gt; &lt;p&gt;Do I just have cmake build and test a given component 5 different ways (for the different sanitizers), then if that passes only publish the released artifact? &lt;/p&gt; &lt;p&gt;What do other people do?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/Spacemanspiff429&quot;&gt; /u/Spacemanspiff429 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10m90nx/how_do_you_setup_coverage_sanitizers_in_your_ci/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10m90nx/how_do_you_setup_coverage_sanitizers_in_your_ci/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10m90nx</id><link href="https://www.reddit.com/r/cpp/comments/10m90nx/how_do_you_setup_coverage_sanitizers_in_your_ci/" /><updated>2023-01-27T01:55:17+00:00</updated><published>2023-01-27T01:55:17+00:00</published><title>How do you setup coverage/ sanitizers in your CI system.</title></entry><entry><author><name>/u/ImX99</name><uri>https://www.reddit.com/user/ImX99</uri></author><category term="cpp" label="r/cpp"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Hi, C/C++ dev here.&lt;/p&gt; &lt;p&gt;I had an interesting discussion this morning with a health company&amp;#39;s CTO. He has a strong tech background (or at least he says so).&lt;/p&gt; &lt;p&gt;We briefly discussed design patterns, and he told me that he avoids them as much as possible to keep code simple. As a very open-minded person, I listened, and thought I&amp;#39;d dig the subject later.&lt;/p&gt; &lt;p&gt;So here I am: what is your opinion on Design Patterns? How often do you use them? Which ones? If you don&amp;#39;t, why?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/ImX99&quot;&gt; /u/ImX99 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10lrlqj/your_opinion_on_design_patterns/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10lrlqj/your_opinion_on_design_patterns/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10lrlqj</id><link href="https://www.reddit.com/r/cpp/comments/10lrlqj/your_opinion_on_design_patterns/" /><updated>2023-01-26T13:18:45+00:00</updated><published>2023-01-26T13:18:45+00:00</published><title>Your opinion on design patterns</title></entry><entry><author><name>/u/MakersF</name><uri>https://www.reddit.com/user/MakersF</uri></author><category term="cpp" label="r/cpp"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;In c++ there are a few modifier that impact both the contract offered by the API and performances of the resulting generated code. Two examples are nothrow and constexpr.&lt;/p&gt; &lt;p&gt;My understanding is that the compiler is not be allowed to infer those attributes, because a later change in the implementation might result of them not being satisfied anymore, and if a user used them depending on the inferred modifier, their code would break.&lt;/p&gt; &lt;p&gt;Now, enter modules!&lt;/p&gt; &lt;p&gt;In the new world, when the compiler processes a module, it can keep track of 2 informations: 1. what specifier is part of the function contract 2. what specifier can be inferred&lt;/p&gt; &lt;p&gt;When using the module, the compiler can make sure that the contract is respected, but when compiling, it can leverage the inferred specifier.&lt;/p&gt; &lt;p&gt;E.g.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;int foo() { return 4; } &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The compiler would allow to call this only in a non-constexpr context, but when calling it, it can leverage the fact that it&amp;#39;s both constexpr and nothrow to improve code generation.&lt;/p&gt; &lt;p&gt;Or if a vector could leverage this information in a move constructor to chose a more efficient reallocation strategy.&lt;/p&gt; &lt;p&gt;Is the fact that compiler could keep track of the effective property of the code, transitively, a new potential way to gain runtime performances?&lt;/p&gt; &lt;p&gt;I see this being useful for all those uses where it&amp;#39;s not critical enough to spend the time to correctly label everything, or maybe you don&amp;#39;t want to commit to the specific constraint of the specifier, but there would still be a performance improvement if this work was done.&lt;/p&gt; &lt;p&gt;Thoughts?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/MakersF&quot;&gt; /u/MakersF &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10m86ok/are_c20_moduled_a_gateway_to_big_runtime/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10m86ok/are_c20_moduled_a_gateway_to_big_runtime/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10m86ok</id><link href="https://www.reddit.com/r/cpp/comments/10m86ok/are_c20_moduled_a_gateway_to_big_runtime/" /><updated>2023-01-27T01:13:48+00:00</updated><published>2023-01-27T01:13:48+00:00</published><title>Are c++20 moduled a gateway to big runtime performances win?</title></entry><entry><author><name>/u/maksym-pasichnyk</name><uri>https://www.reddit.com/user/maksym-pasichnyk</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/maksym-pasichnyk&quot;&gt; /u/maksym-pasichnyk &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://twitter.com/maximmkaaa/status/1618567865455759360&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10lpigj/c_23_compiletime_parsing/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10lpigj</id><link href="https://www.reddit.com/r/cpp/comments/10lpigj/c_23_compiletime_parsing/" /><updated>2023-01-26T11:16:15+00:00</updated><published>2023-01-26T11:16:15+00:00</published><title>C++ 23 compile-time parsing</title></entry><entry><author><name>/u/meetingcpp</name><uri>https://www.reddit.com/user/meetingcpp</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/meetingcpp&quot;&gt; /u/meetingcpp &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.meetup.com/meeting-cpp-online/events/290966832/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10lw9hi/tonight_meeting_c_live_ama_with_klaus_iglberger/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10lw9hi</id><link href="https://www.reddit.com/r/cpp/comments/10lw9hi/tonight_meeting_c_live_ama_with_klaus_iglberger/" /><updated>2023-01-26T16:45:52+00:00</updated><published>2023-01-26T16:45:52+00:00</published><title>Tonight: Meeting C++ live - AMA with Klaus Iglberger</title></entry><entry><author><name>/u/cpppm</name><uri>https://www.reddit.com/user/cpppm</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/cpppm&quot;&gt; /u/cpppm &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://devblogs.microsoft.com/cppblog/brace-pair-colorization-and-more-in-visual-studio/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10lar8e/c_bracket_colorization_macro_expansion_and_more/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10lar8e</id><link href="https://www.reddit.com/r/cpp/comments/10lar8e/c_bracket_colorization_macro_expansion_and_more/" /><updated>2023-01-25T21:48:28+00:00</updated><published>2023-01-25T21:48:28+00:00</published><title>C++ Bracket Colorization, Macro Expansion and more in VS 17.5</title></entry><entry><author><name>/u/throwbly</name><uri>https://www.reddit.com/user/throwbly</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/throwbly&quot;&gt; /u/throwbly &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://github.com/bellrise/libcsd&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10m1q56/custom_base_library_for_c20_based_on_libc/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10m1q56</id><link href="https://www.reddit.com/r/cpp/comments/10m1q56/custom_base_library_for_c20_based_on_libc/" /><updated>2023-01-26T20:33:31+00:00</updated><published>2023-01-26T20:33:31+00:00</published><title>Custom base library for C++20 based on libc.</title></entry><entry><author><name>/u/the_number_nine</name><uri>https://www.reddit.com/user/the_number_nine</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/the_number_nine&quot;&gt; /u/the_number_nine &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://github.com/thenumbernine/Tensor&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10kqc26/check_out_my_new_differential_geometry_c20/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10kqc26</id><link href="https://www.reddit.com/r/cpp/comments/10kqc26/check_out_my_new_differential_geometry_c20/" /><updated>2023-01-25T04:45:40+00:00</updated><published>2023-01-25T04:45:40+00:00</published><title>Check out my new differential geometry c++20 library. Not &quot;geometric algebra&quot;, I said &quot;differential geometry.&quot;</title></entry><entry><author><name>/u/manfromfuture</name><uri>https://www.reddit.com/user/manfromfuture</uri></author><category term="cpp" label="r/cpp"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;I have some C++ data processing routines that I&amp;#39;d like to be able to apply to a large dataset. I&amp;#39;m looking for something I can use on AWS or other cloud instance with minimal friction. &lt;/p&gt; &lt;p&gt;The big cloud platforms all have frameworks for data parallel pipelines, but (I think?) not in C++. I&amp;#39;ve looked at Hadoop pipes and &lt;a href=&quot;https://github.com/google/mr4c/blob/master/tutorial/example9_RandomAccess/src/RandomAccess.cpp&quot;&gt;MR4C&lt;/a&gt;. Both have advantages/disadvantages. Any other suggestions?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/manfromfuture&quot;&gt; /u/manfromfuture &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10lhp62/data_parallel_pipelinemapreduce_in_c/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10lhp62/data_parallel_pipelinemapreduce_in_c/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10lhp62</id><link href="https://www.reddit.com/r/cpp/comments/10lhp62/data_parallel_pipelinemapreduce_in_c/" /><updated>2023-01-26T03:00:02+00:00</updated><published>2023-01-26T03:00:02+00:00</published><title>Data Parallel Pipeline/MapReduce in C++?</title></entry><entry><author><name>/u/david-delassus</name><uri>https://www.reddit.com/user/david-delassus</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/david-delassus&quot;&gt; /u/david-delassus &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://david-delassus.medium.com/decoupling-input-bindings-from-game-systems-with-c-sdl-74d94a8b008c&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10l4een/decoupling_input_bindings_from_game_systems_with/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10l4een</id><link href="https://www.reddit.com/r/cpp/comments/10l4een/decoupling_input_bindings_from_game_systems_with/" /><updated>2023-01-25T17:37:07+00:00</updated><published>2023-01-25T17:37:07+00:00</published><title>Decoupling input bindings from game systems with C++/SDL</title></entry><entry><author><name>/u/sopranosaxophone</name><uri>https://www.reddit.com/user/sopranosaxophone</uri></author><category term="cpp" label="r/cpp"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Hello,&lt;/p&gt; &lt;p&gt;I am looking to get into audio and multimedia programming, coming from an artist background but with some prior programming experience (python, 2 semesters of compsci a while ago, some creative coding frameworks in different languages, music languages like csound, supercollider, max msp...).&lt;/p&gt; &lt;p&gt;My roadmap is to first learn some C++ with toy projects (games, visuals...) or projects I would otherwise script in python, then move to programming extensions for the music programming languages I am using (Max MSP mostly, some Pure Data ect). Once I am comfortable doing that, I want to get into actual audio programming (for art projects and maybe game audio). I know this will take years.&lt;/p&gt; &lt;p&gt;I think the best starting point for me would be some tutorials to follow for games (since these seem to cover all the topics needed for multimedia and later audio). Most of the music languages have a C Api with some sort of C++ Api built on top, so I would prefer to stick to somewhat of a C-style C++ for now. Handmade Hero seems like a great series to follow, but it is extremely long. Are there similar series that I could follow that deal with smaller projects?&lt;/p&gt; &lt;p&gt;Thank you for your help!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/sopranosaxophone&quot;&gt; /u/sopranosaxophone &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10kxn7w/learning_c_for_multimedia_and_audio_programming/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10kxn7w/learning_c_for_multimedia_and_audio_programming/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10kxn7w</id><link href="https://www.reddit.com/r/cpp/comments/10kxn7w/learning_c_for_multimedia_and_audio_programming/" /><updated>2023-01-25T12:36:19+00:00</updated><published>2023-01-25T12:36:19+00:00</published><title>Learning C++ for Multimedia and Audio programming</title></entry><entry><author><name>/u/mttd</name><uri>https://www.reddit.com/user/mttd</uri></author><category term="cpp" label="r/cpp"/><content type="html">&amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/mttd&quot;&gt; /u/mttd &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://programming-journal.org/2023/7/4/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10l8kqw/revisiting_language_support_for_generic/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10l8kqw</id><link href="https://www.reddit.com/r/cpp/comments/10l8kqw/revisiting_language_support_for_generic/" /><updated>2023-01-25T20:19:57+00:00</updated><published>2023-01-25T20:19:57+00:00</published><title>Revisiting Language Support for Generic Programming: When Genericity Is a Core Design Goal</title></entry><entry><author><name>/u/spr00ge</name><uri>https://www.reddit.com/user/spr00ge</uri></author><category term="cpp" label="r/cpp"/><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Hi there, I often stumble upon fragments of the Boost libraries when I read other people’s code. I want to get a better understanding of them and I don’t know where to start. &lt;a href=&quot;https://theboostcpplibraries.com/introduction-development-process&quot;&gt;https://theboostcpplibraries.com/introduction-development-process&lt;/a&gt; seems to be a good overview, but it is almost 10 years old. Many features have been incorporated into the STL and I’d rather use the STL in most cases. The question is, where would I get a good introduction to Boost that is useful and up-to-date?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/spr00ge&quot;&gt; /u/spr00ge &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10ku04i/uptodate_boost_teaching_materials/&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/cpp/comments/10ku04i/uptodate_boost_teaching_materials/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content><id>t3_10ku04i</id><link href="https://www.reddit.com/r/cpp/comments/10ku04i/uptodate_boost_teaching_materials/" /><updated>2023-01-25T08:33:33+00:00</updated><published>2023-01-25T08:33:33+00:00</published><title>Up-to-date Boost teaching materials?</title></entry></feed>